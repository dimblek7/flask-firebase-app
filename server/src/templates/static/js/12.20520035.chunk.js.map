{"version":3,"sources":["components/Recharts/XAxisTick.js","components/Recharts/CustomTooltip.js","utils/graphDateFormat.js","../node_modules/react-bootstrap/esm/TabContext.js","../node_modules/react-bootstrap/esm/NavContext.js","../node_modules/react-bootstrap/esm/NavItem.js","../node_modules/prop-types-extra/lib/isRequiredForA11y.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/AbstractNavItem.js","../node_modules/react-bootstrap/esm/NavLink.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/prop-types-extra/lib/all.js","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/react-bootstrap/esm/AbstractNav.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/react-bootstrap/esm/Nav.js","../node_modules/react-bootstrap/esm/Tabs.js","../node_modules/react-bootstrap/esm/Tab.js","containers/customers/invoiceGraph.js","containers/customers/DSOChart.js","containers/vendors/invoiceInsightGraph.js","containers/vendors/DPOChart.js","containers/insights/historicalInsights.js","containers/insights/insights.js"],"names":["XAxisTick","value","payload","rest","verticalAnchor","visibleTicksCount","style","fontSize","className","dy","CustomToolTip","props","active","label","noCurrencyKeys","map","item","i","hideCurrency","find","x","dataKey","key","color","name","getShortNumber","GetXLabel","startDate","endDate","formatType","currentMonth","moment","startOf","format","xLabel","add","push","GetXLabelObjects","monthBack","temp","forEach","start","subtract","end","endOf","text","GetYLabel","yLabel","toDate","getTime","TabContext","React","createContext","NavContext","NavItem","forwardRef","_ref","ref","bsPrefix","children","_ref$as","as","Component","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","displayName","Object","defineProperty","exports","default","validator","propName","componentName","location","propFullName","componentNameSafe","propFullNameSafe","Error","_len","arguments","length","args","Array","_key","apply","undefined","concat","module","TabContainer","_useUncontrolled","useUncontrolled","activeKey","id","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","useMemo","type","tabContext","getControlledId","getControllerId","Provider","SelectableContext","TabContent","_React$Component","this","_inheritsLoose","prototype","render","_this$props","_this$props$as","createBootstrapComponent","TabPane","_useTabContext","context","useContext","shouldTransition","makeEventKey","eventKey","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","AbstractNavItem","tabIndex","onClick","navKey","href","parentOnSelect","navContext","isActive","handleOnclick","useEventCallback","e","defaultProps","disabled","SafeAnchor","NavLink","validators","allPropTypes","_len2","_key2","error","result","_createChainableTypeChecker2","obj","_createChainableTypeChecker","require","__esModule","toFnRef","current","useMergedRefs","refA","refB","a","b","mergeRefs","noop","AbstractNav","onKeyDown","forceUpdate","useReducer","state","needsRefocusRef","useRef","listNode","getNextActiveChild","offset","items","qsa","activeChild","querySelector","index","indexOf","nextIndex","handleSelect","event","useEffect","focus","mergedRef","nextActiveChild","preventDefault","dataset","rbEventKey","Nav","uncontrolledProps","_classNames","navbarBsPrefix","cardHeaderBsPrefix","_useUncontrolled$as","variant","fill","justify","navbar","navbarContext","NavbarContext","cardContext","CardContext","Item","Link","renderTab","child","_child$props","title","tabClassName","Tabs","_useUncontrolled$acti","defaultActiveKey","getDefaultActiveKey","controlledProps","childProps","Tab","Container","Content","Pane","barWidthObj","xAxisPaddingObj","CustomChart","data","isLoading","width","height","margin","right","tick","yAxisId","tickFormatter","orientation","cursor","content","stroke","PureComponent","InvoiceGraph","setactiveKey","useState","setAveragePaymentProjectionData","apiData","setapiData","selectedInvtab","setselectedInvtab","setStartDate","isFetching","setIsFetching","switchSelectedTab","tab","groupBy","list","array","total","j","xAxisLavel","getFullYear","XLabels","instance","get","then","response","invoiceData","d","date_closed","Math","round","total_amount_due","graphData","minValue","min","maxValue","max","noData","backgroundColor","textAlpha","alpha","bold","gui","contextMenu","empty","plot","short","decimals","plotarea","options","responsive","maintainAspectRatio","values","placement","itemsOverlap","negation","maxTicks","maxLabels","series","legend","layout","overflow","shadow","align","marker","size","maxItems","pageOn","pageOff","pageStatus","crosshairX","lineWidth","borderColor","borderWidth","scaleLabel","borderRadius","DATA","arinvalid","random","allPromises","Promise","all","res","setInvoiceGraphLoading","catch","handleAPIError","getAveragePaymentGraphData","overflowY","class","selectedTab","padding","top","DSOChart","frequency","setfrequency","resp","filter","rec","left","InvoiceInsightGraph","selectedPaytab","setselectedPaytab","instanceWithRetry","apinvalid","data-highcharts-chart","DPOChart","lineColor","HistoricalChart","barKeys","lineKeys","graphKey","modifiedData","mod","console","log","stackId","dot","HistoricalChartArAP","HistoricalGraph","setFrequency","getGraphData","promises","updated","reduce","cv","ap_total","ap_weighted_avg_days_late","ap_weighted_avg_payment_days","ap_weighted_avg_terms","ar_total","ar_weighted_avg_collection_days","ar_weighted_avg_days_late","ar_weighted_avg_terms","total_ap_invoices","total_ar_invoices","total_customers","total_suppliers","Insights","activeTab","document","setState"],"mappings":"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","file":"static/js/12.20520035.chunk.js","sourcesContent":["import React from 'react';\n\nconst XAxisTick = ({ payload: { value }, verticalAnchor, visibleTicksCount, ...rest }) => (\n  <text {...rest} style={{ fontSize: \"0.8rem\" }} className=\"bar-chart-tick\" dy={12}>\n    {value}\n  </text>\n);\n\nexport default XAxisTick;\n","import React from \"react\";\nimport { getShortNumber } from \"utils\";\n\nconst CustomToolTip = props => {\n  const { active, payload, label, noCurrencyKeys = [] } = props;\n  if (!active || !payload) {\n    return null;\n  }\n  return (\n    <div className=\"custom-tooltip bg-white border p-3\">\n      <p>\n        <strong>{label}</strong>\n      </p>\n      {payload.map((item, i) => {\n        const hideCurrency = noCurrencyKeys.find(x => x === item.dataKey);\n        return (\n          <span key={i} className=\"d-block mb-1\">\n            <span style={{ color: item.color }}>{item.name}: </span>\n            <span>{typeof item.value === \"number\" ? getShortNumber(item.value, !hideCurrency) : item.value}</span>\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CustomToolTip;\n","import moment from \"moment\";\nimport { betweenDays } from \"./dates\";\n\n// export const getFormattedDate = (date) => {\n//     if (date) {\n//       let dformat = \"MM/DD/YYYY\";\n//       return moment(date).format(dformat) == \"Invalid date\"\n//         || moment(date).format(dformat) == null\n//         || moment(date).format(dformat) == \"null\"\n//         ? \"\"\n//         : moment(date).format(dformat);\n//     }\n//     return null;\n//   };\n\nexport const GetXLabel = (startDate, endDate, formatType) => {\n  var currentMonth = moment(startDate).startOf(\"month\").format(\"MMM\");\n  var xLabel = [];\n  switch (formatType) {\n    case \"30days\":\n      xLabel = [\"Week 1\", \"Week 2\", \"Week 3\", \"Week 4\"];\n      break;\n    case \"6months\":\n      //xLabel.push(currentMonth);\n      for (var i = 1; i <= 3; i++) {\n        currentMonth = moment(startDate).add(i, \"month\").startOf(\"month\").format(\"MMM\");\n        xLabel.push(currentMonth);\n      }\n      break;\n    case \"1year\":\n      //xLabel.push(currentMonth);\n      for (var i = 1; i <= 12; i++) {\n        currentMonth = moment(startDate).add(i, \"month\").startOf(\"month\").format(\"MMM\");\n        xLabel.push(currentMonth);\n      }\n      break;\n    default:\n      break;\n  }\n  return xLabel;\n};\n\nexport const GetWeekWiseDates = (startDate, endDate) => {\n  let result = [];\n  let _enddate = moment(endDate, \"MM/DD/YYYY\");\n  let diff = betweenDays({ startdate: moment(startDate, \"MM/DD/YYYY\"), enddate: moment(_enddate, \"MM/DD/YYYY\") });\n  while (diff > 6) {\n    result.push({\n      start: moment(_enddate).startOf(\"week\").format(\"MM/DD/YYYY\"),\n      end: moment(_enddate).endOf(\"week\").format(\"MM/DD/YYYY\"),\n    });\n    _enddate = moment(_enddate).subtract(7, \"days\");\n    diff = betweenDays({ startdate: moment(startDate), enddate: moment(_enddate) });\n  }\n  if (diff > 0) {\n    result.push({\n      start: moment(startDate, \"MM/DD/YYYY\").format(\"MM/DD/YYYY\"),\n      end: moment(startDate).endOf(\"week\").format(\"MM/DD/YYYY\"),\n    });\n  }\n  return result.reverse().map((x) => ({ ...x, text: moment(x.end).format(\"MM/DD\") }));\n};\n\nexport const GetXLabelObjects = (startDate, endDate, formatType, monthBack) => {\n  var xLabel = [],\n    temp = [];\n  switch (formatType) {\n    case \"30days\":\n      temp = [\"Week 1\", \"Week 2\", \"Week 3\", \"Week 4\"];\n      if (monthBack) {\n        temp.forEach((x, i) => {\n          const start = moment(startDate)\n            .subtract(i + 1, \"weeks\")\n            .startOf(\"week\")\n            .format(\"MM/DD/YYYY\");\n          const end = moment(startDate)\n            .subtract(i + 1, \"weeks\")\n            .endOf(\"week\")\n            .format(\"MM/DD/YYYY\");\n          const endDate = moment(startDate)\n            .subtract(i + 1, \"weeks\")\n            .endOf(\"week\")\n            .format(\"MM/DD\");\n          xLabel.push({ text: `Week (${endDate})`, start, end });\n        });\n      } else {\n        temp.forEach((x, i) => {\n          const start = moment(startDate)\n            .add(i + 1, \"weeks\")\n            .startOf(\"week\")\n            .format(\"MM/DD/YYYY\");\n          const end = moment(startDate)\n            .add(i + 1, \"weeks\")\n            .endOf(\"week\")\n            .format(\"MM/DD/YYYY\");\n          const endDate = moment(startDate)\n            .add(i + 1, \"weeks\")\n            .endOf(\"week\")\n            .format(\"MM/DD\");\n          xLabel.push({ text: `Week (${endDate})`, start, end });\n        });\n      }\n      break;\n    case \"6months\":\n      for (var i = 1; i <= 3; i++) {\n        const text = moment(startDate).add(i, \"months\").startOf(\"month\").format(\"MMM\");\n        const start = moment(startDate).add(i, \"months\").startOf(\"month\").format(\"MM/DD/YYYY\");\n        const end = moment(startDate).add(i, \"months\").endOf(\"month\").format(\"MM/DD/YYYY\");\n        xLabel.push({ text: text, start, end });\n      }\n      break;\n    case \"1year\":\n      for (var i = 1; i <= 12; i++) {\n        const text = moment(startDate).add(i, \"months\").startOf(\"month\").format(\"MMM\");\n        const start = moment(startDate).add(i, \"months\").startOf(\"month\").format(\"MM/DD/YYYY\");\n        const end = moment(startDate).add(i, \"months\").endOf(\"month\").format(\"MM/DD/YYYY\");\n        xLabel.push({ text: text, start, end });\n      }\n      break;\n    default:\n      break;\n  }\n  return xLabel;\n};\n\nexport const GetYLabel = (startDate, endDate, formatType) => {\n  var yLabel = [];\n  switch (formatType) {\n    case \"30days\":\n      yLabel.push({\n        startDate: moment(startDate).toDate().getTime(),\n        endDate: moment(startDate).endOf(\"week\").toDate().getTime(),\n      });\n\n      for (var i = 1; i <= 2; i++) {\n        yLabel.push({\n          startDate: moment(startDate).add(i, \"week\").startOf(\"week\").toDate().getTime(),\n          endDate: moment(startDate).add(i, \"week\").endOf(\"week\").toDate().getTime(),\n        });\n      }\n      yLabel.push({\n        startDate: moment(endDate).startOf(\"week\").toDate().getTime(),\n        endDate: moment(endDate).toDate().getTime(),\n      });\n\n      break;\n    case \"6months\":\n      yLabel.push({\n        startDate: moment(startDate).startOf(\"month\").toDate().getTime(),\n        endDate: moment(startDate).add(i, \"month\").endOf(\"week\").toDate().getTime(),\n      });\n      for (var i = 1; i <= 1; i++) {\n        yLabel.push({\n          startDate: moment(startDate).add(i, \"month\").startOf(\"month\").toDate().getTime(),\n          endDate: moment(startDate).add(i, \"month\").endOf(\"month\").toDate().getTime(),\n        });\n      }\n      yLabel.push({\n        startDate: moment(endDate).startOf(\"month\").toDate().getTime(),\n        endDate: moment(endDate).endOf(\"month\").toDate().getTime(),\n      });\n      break;\n    case \"1year\":\n      yLabel.push({\n        startDate: moment(startDate).startOf(\"month\").toDate().getTime(),\n        endDate: moment(startDate).add(i, \"month\").endOf(\"week\").toDate().getTime(),\n      });\n      for (var i = 1; i <= 10; i++) {\n        yLabel.push({\n          startDate: moment(startDate).add(i, \"month\").startOf(\"month\").toDate().getTime(),\n          endDate: moment(startDate).add(i, \"month\").endOf(\"month\").toDate().getTime(),\n        });\n      }\n      yLabel.push({\n        startDate: moment(endDate).startOf(\"month\").toDate().getTime(),\n        endDate: moment(endDate).endOf(\"month\").toDate().getTime(),\n      });\n      break;\n    default:\n      break;\n  }\n  return yLabel;\n};\n","import React from 'react';\nvar TabContext = React.createContext(null);\nexport default TabContext;","import React from 'react';\nvar NavContext = React.createContext(null);\nexport default NavContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar NavItem = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-item');\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }), children);\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isRequiredForA11y;\nfunction isRequiredForA11y(validator) {\n  return function validate(props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      return new Error('The ' + location + ' `' + propFullNameSafe + '` is required to make ' + ('`' + componentNameSafe + '` accessible for users of assistive ') + 'technologies such as screen readers.');\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      args[_key - 5] = arguments[_key];\n    }\n\n    return validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n  };\n}\nmodule.exports = exports['default'];","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n/* eslint-disable react/no-unused-prop-types */\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter,\n      unmountOnExit: unmountOnExit,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, React.createElement(SelectableContext.Provider, {\n    value: onSelect\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar TabContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TabContent, _React$Component);\n\n  function TabContent() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        _this$props$as = _this$props.as,\n        Component = _this$props$as === void 0 ? 'div' : _this$props$as,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"as\", \"className\"]);\n\n    return React.createElement(Component, _extends({}, props, {\n      className: classNames(className, bsPrefix)\n    }));\n  };\n\n  return TabContent;\n}(React.Component);\n\nexport default createBootstrapComponent(TabContent, 'tab-content');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && unmountOnExit) return null;\n  var pane = React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return React.createElement(TabContext.Provider, {\n    value: null\n  }, React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nvar defaultProps = {\n  disabled: false\n};\nvar AbstractNavItem = React.forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n      className = _ref.className,\n      tabIndex = _ref.tabIndex,\n      eventKey = _ref.eventKey,\n      onSelect = _ref.onSelect,\n      onClick = _ref.onClick,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"active\", \"className\", \"tabIndex\", \"eventKey\", \"onSelect\", \"onClick\", \"as\"]);\n\n  var navKey = makeEventKey(eventKey, props.href);\n  var parentOnSelect = useContext(SelectableContext);\n  var navContext = useContext(NavContext);\n  var isActive = active;\n\n  if (navContext) {\n    if (!props.role && navContext.role === 'tablist') props.role = 'tab';\n    props['data-rb-event-key'] = navKey;\n    props.id = navContext.getControllerId(navKey);\n    props['aria-controls'] = navContext.getControlledId(navKey);\n    isActive = active == null && navKey != null ? navContext.activeKey === navKey : active;\n  }\n\n  if (props.role === 'tab') {\n    props.tabIndex = isActive ? tabIndex : -1;\n    props['aria-selected'] = isActive;\n  }\n\n  var handleOnclick = useEventCallback(function (e) {\n    if (onClick) onClick(e);\n    if (navKey == null) return;\n    if (onSelect) onSelect(navKey, e);\n    if (parentOnSelect) parentOnSelect(navKey, e);\n  });\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    onClick: handleOnclick,\n    className: classNames(className, isActive && 'active')\n  }));\n});\nAbstractNavItem.defaultProps = defaultProps;\nexport default AbstractNavItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport SafeAnchor from './SafeAnchor';\nimport AbstractNavItem from './AbstractNavItem';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  disabled: false,\n  as: SafeAnchor\n};\nvar NavLink = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      href = _ref.href,\n      eventKey = _ref.eventKey,\n      onSelect = _ref.onSelect,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"disabled\", \"className\", \"href\", \"eventKey\", \"onSelect\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-link');\n  return React.createElement(AbstractNavItem, _extends({}, props, {\n    href: href,\n    ref: ref,\n    eventKey: eventKey,\n    as: as,\n    disabled: disabled,\n    onSelect: onSelect,\n    className: classNames(className, bsPrefix, disabled && 'disabled')\n  }));\n});\nNavLink.displayName = 'NavLink';\nNavLink.defaultProps = defaultProps;\nexport default NavLink;","import React from 'react';\nexport default React.createContext(null);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = all;\n\nvar _createChainableTypeChecker = require('./utils/createChainableTypeChecker');\n\nvar _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction all() {\n  for (var _len = arguments.length, validators = Array(_len), _key = 0; _key < _len; _key++) {\n    validators[_key] = arguments[_key];\n  }\n\n  function allPropTypes() {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var error = null;\n\n    validators.forEach(function (validator) {\n      if (error != null) {\n        return;\n      }\n\n      var result = validator.apply(undefined, args);\n      if (result != null) {\n        error = result;\n      }\n    });\n\n    return error;\n  }\n\n  return (0, _createChainableTypeChecker2.default)(allPropTypes);\n}\nmodule.exports = exports['default'];","import { useMemo } from 'react';\n\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\nexport function mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n */\n\nfunction useMergedRefs(refA, refB) {\n  return useMemo(function () {\n    return mergeRefs(refA, refB);\n  }, [refA, refB]);\n}\n\nexport default useMergedRefs;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport qsa from 'dom-helpers/query/querySelectorAll';\nimport React, { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\n\nvar noop = function noop() {};\n\nvar AbstractNav = React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'ul' : _ref$as,\n      onSelect = _ref.onSelect,\n      activeKey = _ref.activeKey,\n      role = _ref.role,\n      onKeyDown = _ref.onKeyDown,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"]);\n\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  var forceUpdate = useForceUpdate();\n  var needsRefocusRef = useRef(false);\n  var parentOnSelect = useContext(SelectableContext);\n  var tabContext = useContext(TabContext);\n  var getControlledId, getControllerId;\n\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey;\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n\n  var listNode = useRef(null);\n\n  var getNextActiveChild = function getNextActiveChild(offset) {\n    if (!listNode.current) return null;\n    var items = qsa(listNode.current, '[data-rb-event-key]:not(.disabled)');\n    var activeChild = listNode.current.querySelector('.active');\n    var index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    var nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n\n  var handleSelect = function handleSelect(key, event) {\n    if (key == null) return;\n    if (onSelect) onSelect(key, event);\n    if (parentOnSelect) parentOnSelect(key, event);\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (onKeyDown) onKeyDown(event);\n    var nextActiveChild;\n\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveChild(-1);\n        break;\n\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveChild(1);\n        break;\n\n      default:\n        return;\n    }\n\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset.rbEventKey, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n\n  useEffect(function () {\n    if (listNode.current && needsRefocusRef.current) {\n      var activeChild = listNode.current.querySelector('[data-rb-event-key].active');\n      if (activeChild) activeChild.focus();\n    }\n\n    needsRefocusRef.current = false;\n  });\n  var mergedRef = useMergedRefs(ref, listNode);\n  return React.createElement(SelectableContext.Provider, {\n    value: handleSelect\n  }, React.createElement(NavContext.Provider, {\n    value: {\n      role: role,\n      // used by NavLink to determine it's role\n      activeKey: makeEventKey(activeKey),\n      getControlledId: getControlledId || noop,\n      getControllerId: getControllerId || noop\n    }\n  }, React.createElement(Component, _extends({}, props, {\n    onKeyDown: handleKeyDown,\n    ref: mergedRef,\n    role: role\n  }))));\n});\nexport default AbstractNav;","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport all from 'prop-types-extra/lib/all';\nimport React, { useContext } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport CardContext from './CardContext';\nimport AbstractNav from './AbstractNav';\nimport NavItem from './NavItem';\nimport NavLink from './NavLink';\nvar defaultProps = {\n  justify: false,\n  fill: false\n};\nvar Nav = React.forwardRef(function (uncontrolledProps, ref) {\n  var _classNames;\n\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      fill = _useUncontrolled.fill,\n      justify = _useUncontrolled.justify,\n      navbar = _useUncontrolled.navbar,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      activeKey = _useUncontrolled.activeKey,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"bsPrefix\", \"variant\", \"fill\", \"justify\", \"navbar\", \"className\", \"children\", \"activeKey\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav');\n  var navbarBsPrefix, cardHeaderBsPrefix;\n  var navbarContext = useContext(NavbarContext);\n  var cardContext = useContext(CardContext);\n\n  if (navbarContext) {\n    navbarBsPrefix = navbarContext.bsPrefix;\n    navbar = navbar == null ? true : navbar;\n  } else if (cardContext) {\n    cardHeaderBsPrefix = cardContext.cardHeaderBsPrefix;\n  }\n\n  return React.createElement(AbstractNav, _extends({\n    as: as,\n    ref: ref,\n    activeKey: activeKey,\n    className: classNames(className, (_classNames = {}, _classNames[bsPrefix] = !navbar, _classNames[navbarBsPrefix + \"-nav\"] = navbar, _classNames[cardHeaderBsPrefix + \"-\" + variant] = !!cardHeaderBsPrefix, _classNames[bsPrefix + \"-\" + variant] = !!variant, _classNames[bsPrefix + \"-fill\"] = fill, _classNames[bsPrefix + \"-justified\"] = justify, _classNames))\n  }, props), children);\n});\nNav.displayName = 'Nav';\nNav.defaultProps = defaultProps;\nNav.Item = NavItem;\nNav.Link = NavLink;\nexport default Nav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport requiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { useUncontrolled } from 'uncontrollable';\nimport Nav from './Nav';\nimport NavLink from './NavLink';\nimport NavItem from './NavItem';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { forEach, map } from './utils/ElementChildren';\nvar defaultProps = {\n  variant: 'tabs',\n  mountOnEnter: false,\n  unmountOnExit: false\n};\n\nfunction getDefaultActiveKey(children) {\n  var defaultActiveKey;\n  forEach(children, function (child) {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n  return defaultActiveKey;\n}\n\nfunction renderTab(child) {\n  var _child$props = child.props,\n      title = _child$props.title,\n      eventKey = _child$props.eventKey,\n      disabled = _child$props.disabled,\n      tabClassName = _child$props.tabClassName;\n\n  if (title == null) {\n    return null;\n  }\n\n  return React.createElement(NavItem, {\n    as: NavLink,\n    eventKey: eventKey,\n    disabled: disabled,\n    className: tabClassName\n  }, title);\n}\n\nvar Tabs = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      onSelect = _useUncontrolled.onSelect,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children,\n      _useUncontrolled$acti = _useUncontrolled.activeKey,\n      activeKey = _useUncontrolled$acti === void 0 ? getDefaultActiveKey(children) : _useUncontrolled$acti,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"id\", \"onSelect\", \"transition\", \"mountOnEnter\", \"unmountOnExit\", \"children\", \"activeKey\"]);\n\n  return React.createElement(TabContainer, {\n    ref: ref,\n    id: id,\n    activeKey: activeKey,\n    onSelect: onSelect,\n    transition: transition,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, React.createElement(Nav, _extends({}, controlledProps, {\n    role: \"tablist\",\n    as: \"nav\"\n  }), map(children, renderTab)), React.createElement(TabContent, null, map(children, function (child) {\n    var childProps = _extends({}, child.props);\n\n    delete childProps.title;\n    delete childProps.disabled;\n    delete childProps.tabClassName;\n    return React.createElement(TabPane, childProps);\n  })));\n});\nTabs.defaultProps = defaultProps;\nTabs.displayName = 'Tabs';\nexport default Tabs;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\n\nvar Tab =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import CustomToolTip from \"components/Recharts/CustomTooltip\";\nimport XAxisTick from \"components/Recharts/XAxisTick\";\nimport { handleAPIError } from \"handlers/setters\";\nimport get from \"lodash/get\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, ComposedChart, Legend, Line, Tooltip, XAxis, YAxis, ResponsiveContainer } from \"recharts\";\nimport { getShortNumber } from \"utils\";\nimport { instanceWithRetry as instance } from \"../../actions/axiosInstance\";\nimport { GetXLabel, GetXLabelObjects, GetYLabel } from \"../../utils/graphDateFormat\";\n\nconst barWidthObj = {\n  \"1year\": 20,\n  \"6months\": 110,\n  \"30days\": 60\n};\n\nlet barWidth = 20;\n\nconst xAxisPaddingObj = {\n  \"1year\": 20,\n  \"6months\": 60,\n  \"30days\": 40\n};\nlet xAxisPadding = 20;\nexport class CustomChart extends React.PureComponent {\n  render() {\n    const { data, isLoading } = this.props;\n    return (\n      <div style={{ width: \"100%\", height: 300 }}>\n        <ResponsiveContainer height={300} width=\"100%\">\n        <ComposedChart\n          height={300}\n          data={data}\n          margin={{\n            right: 0\n          }}\n        >\n          <XAxis\n            tick={<XAxisTick />}\n            dataKey=\"text\"\n            // padding={{ left: xAxisPadding, right: xAxisPadding }}\n          />\n          <YAxis yAxisId=\"left\" tickFormatter={tick => getShortNumber(tick)} />\n          <YAxis\n            yAxisId=\"right\"\n            dataKey=\"arinvalid\"\n            orientation=\"right\"\n            tickFormatter={tick => getShortNumber(tick, false)}\n          />\n          <Tooltip cursor={false} content={<CustomToolTip noCurrencyKeys={[\"arinvalid\"]} />} />\n          <Legend\n          // wrapperStyle={{\n          //   paddingLeft: \"60px\"\n          // }}\n          />\n          <Bar yAxisId=\"left\" dataKey=\"value\" name=\"Early Collections\" fill=\"#7CB5EC\" />\n          <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"arinvalid\" name=\"Invalid Invoices\" stroke=\"#75CF5B\" />\n        </ComposedChart>\n      </ResponsiveContainer>\n        {\n          isLoading ?\n            <div className=\"graph-loader\">\n              <div className=\"spinner-border\" />\n            </div>\n            : null\n        }\n      </div>\n    );\n  }\n}\n\nfunction InvoiceGraph(props) {\n  const { setactiveKey } = props;\n  const [averagePaymentProjectionData, setAveragePaymentProjectionData] = useState({});\n  const [apiData, setapiData] = useState([]);\n  const [selectedInvtab, setselectedInvtab] = useState(\"30days\"); //\n  const [startDate, setStartDate] = useState(moment().subtract(\"days\", 30).format(\"MM/DD/YYYY\"));\n  const [endDate, setendDate] = useState(moment().format(\"MM/DD/YYYY\"));\n  const [isFetching, setIsFetching] = useState(true);\n\n  useEffect(() => {\n    //group api data on date\n    const groupBy = list => {\n      var yLabel = GetYLabel(startDate, endDate, selectedInvtab);\n      const array = [];\n      for (var i = 0; i < yLabel.length; i++) {\n        var total = 0;\n        for (var j = 0; j < list.length; j++) {\n          if (yLabel[i].startDate <= list[j][0] && list[j][0] <= yLabel[i].endDate) {\n            total += list[j][1];\n          }\n        }\n        array.push(total);\n      }\n      return array;\n    };\n\n    var xAxisLavel = GetXLabel(startDate, endDate, selectedInvtab);\n\n    const getAveragePaymentGraphData = (startDate, endDate) => {\n      const minYear = moment\n        (startDate, \"MM/DD/YYYY\")\n        .toDate()\n        .getFullYear();\n      const maxYear = moment\n        (endDate, \"MM/DD/YYYY\")\n        .toDate()\n        .getFullYear();\n\n      const XLabels = GetXLabelObjects(startDate, endDate, selectedInvtab);\n      setIsFetching(true);\n\n      instance\n        .get(`earlyreceipt?from_date=${startDate}&to_date=${endDate}`)\n        .then(response => {\n          const {\n            data: { result }\n          } = response;\n\n          const invoiceData = result.map(d => [\n            moment\n              (d.date_closed, \"YYYY-MM-DD\")\n              .toDate()\n              .getTime(),\n            Math.round(d.total_amount_due)\n          ]);\n\n          //group payment data\n          const graphData = groupBy(invoiceData);\n\n          var year = minYear === maxYear ? minYear : minYear + \" - \" + maxYear;\n\n          const minValue = Math.min.apply(null, graphData);\n          const maxValue = Math.max.apply(null, graphData);\n          const initInvoiceData = {\n            type: \"bar\",\n            noData: {\n              text: \"Currently there is no data in the chart\",\n              backgroundColor: \"#20b2db\",\n              fontSize: 18,\n              textAlpha: 0.9,\n              alpha: 0.6,\n              bold: true\n            },\n            gui: {\n              contextMenu: {\n                empty: true\n              }\n            },\n            plot: {\n              \"tooltip-text\": \"$%v\",\n              short: true,\n              \"short-unit\": \"K\",\n              \"thousands-separator\": \",\",\n              decimals: 0\n            },\n            plotarea: {\n              \"adjust-layout\": true\n            },\n            options: {\n              responsive: true,\n              maintainAspectRatio: false\n            },\n            \"scale-x\": {\n              values: xAxisLavel,\n              placement: \"default\",\n              itemsOverlap: true\n            },\n            // scaleX2: {\n            //   values: [year],\n            //   placement: \"default\",\n            //   itemsOverlap: true\n            // },\n            \"scale-y\": {\n              \"min-value\": minValue,\n              \"max-value\": maxValue + maxValue * 0.2,\n              short: true,\n              \"short-unit\": \"K\",\n              format: `$%v`,\n              negation: \"currency\",\n              \"thousands-separator\": \",\",\n              maxTicks: 7,\n              maxLabels: 7\n            },\n            series: [\n              {\n                values: graphData,\n                text: \"Early Payment\",\n                \"background-color\": \"#1a75ff\"\n              }\n            ],\n            legend: {\n              layout: \"x3\",\n              overflow: \"page\",\n              alpha: 0.05,\n              shadow: false,\n              align: \"center\",\n              \"adjust-layout\": true,\n              marker: {\n                type: \"square\",\n                \"border-color\": \"none\",\n                size: \"10px\"\n              },\n              \"border-width\": 0,\n              maxItems: 3,\n              \"toggle-action\": \"hide\",\n              pageOn: {\n                backgroundColor: \"#000\",\n                size: \"210px\",\n                alpha: 0.65\n              },\n              pageOff: {\n                backgroundColor: \"#7E7E7E\",\n                size: \"20px\",\n                alpha: 0.65\n              },\n              pageStatus: {\n                color: \"black\"\n              }\n            },\n            crosshairX: {\n              alpha: 0.3,\n              lineWidth: 5,\n              marker: {\n                backgroundColor: \"white\",\n                borderColor: \"#3F51B5\",\n                borderWidth: 1,\n                size: 5\n              },\n              scaleLabel: {\n                backgroundColor: \"#303F9F\",\n                borderRadius: 3\n              }\n            }\n          };\n          setAveragePaymentProjectionData(initInvoiceData);\n          let DATA = XLabels.map((x, i) => ({ ...x, value: graphData[i], arinvalid: 20 * Math.random(20) }));\n\n          // all promises\n          const allPromises = [];\n          XLabels.forEach((x, i) => {\n            allPromises.push(\n              instance.get(`arinvalid/total?from_date='${x.start}'&to_date='${x.end}'`)\n            );\n          });\n\n          Promise.all(allPromises)\n            .then(res => {\n              DATA = DATA.map((x, i) => ({\n                ...x,\n                arinvalid: get(res[i], `data.count`, 0)\n              }));\n              barWidth = barWidthObj[selectedInvtab];\n              xAxisPadding = xAxisPaddingObj[selectedInvtab];\n              setapiData(DATA);\n              props.setInvoiceGraphLoading(false);\n              setIsFetching(false);\n            })\n            .catch(e => handleAPIError(e));\n        })\n        .catch(e => handleAPIError(e));\n    };\n    getAveragePaymentGraphData(startDate, endDate);\n  }, [startDate, endDate]);\n\n  function switchSelectedTab(tab) {\n    switch (tab) {\n      case \"30days\":\n        setStartDate(\n          moment\n            ()\n            .subtract(30, \"days\")\n            .format(\"MM/DD/YYYY\")\n        );\n        break;\n      case \"6months\":\n        setStartDate(\n          moment\n            ()\n            .subtract(3, \"months\")\n            .format(\"MM/DD/YYYY\")\n        );\n        break;\n      case \"1year\":\n        setStartDate(\n          moment\n            ()\n            .subtract(1, \"years\")\n            .format(\"MM/DD/YYYY\")\n        );\n        break;\n      default:\n        break;\n    }\n    setselectedInvtab(tab);\n  }\n\n  return (\n    <div className=\"col-md-12\" style={{ overflowY: \"auto\" }}>\n      <div className=\"\">\n        {setactiveKey && <h1 className=\"custchattabhead\">Invoice insights</h1>}\n        <div className=\"table100  pt-0\">\n          <div className=\"row\"></div>\n          <div class=\"custchattab1\">\n            <span\n              onClick={() => switchSelectedTab(\"1year\")}\n              className={`cursour-pointer ${selectedInvtab === \"1year\" && \"activec\"}`}\n            >\n              Year\n            </span>\n            <span\n              onClick={() => switchSelectedTab(\"6months\")}\n              className={`cursour-pointer ${selectedInvtab === \"6months\" && \"activec\"}`}\n            >\n              Quarter\n            </span>\n            <span\n              onClick={() => switchSelectedTab(\"30days\")}\n              className={`cursour-pointer ${selectedInvtab === \"30days\" && \"activec\"}`}\n            >\n              Month\n            </span>\n          </div>\n          <div\n            className={props.setactiveKey && \"cursour-pointer\"}\n            onClick={() => {\n              const { setactiveKey } = props;\n              setactiveKey && setactiveKey(\"invoice_insights\");\n            }}>\n            <CustomChart data={apiData} selectedTab={selectedInvtab} isLoading={isFetching} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InvoiceGraph;\n","import CustomToolTip from \"components/Recharts/CustomTooltip\";\nimport XAxisTick from \"components/Recharts/XAxisTick\";\nimport { handleAPIError } from \"handlers/setters\";\nimport get from \"lodash/get\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, ComposedChart, Legend, Line, Tooltip, XAxis, YAxis, ResponsiveContainer } from \"recharts\";\nimport { getShortNumber } from \"utils\";\nimport { instance } from \"../../actions/axiosInstance\";\nimport { GetXLabel, GetXLabelObjects, GetYLabel } from \"../../utils/graphDateFormat\";\n\nconst barWidthObj = {\n  \"1year\": 20,\n  \"6months\": 110,\n  \"30days\": 60,\n};\n\nlet barWidth = 20;\n\nconst xAxisPaddingObj = {\n  \"1year\": 20,\n  \"6months\": 60,\n  \"30days\": 40,\n};\nlet xAxisPadding = 20;\nexport class CustomChart extends React.PureComponent {\n  render() {\n    const { data, isLoading } = this.props;\n    return (\n      <div style={{ width: \"100%\", height: 300 }}>\n        <ResponsiveContainer height={300} width=\"100%\">\n          <ComposedChart\n            height={300}\n            data={data}\n            margin={{\n              right: 0,\n            }}\n          >\n            <XAxis\n              tick={<XAxisTick />}\n              dataKey=\"text\"\n              // padding={{ left: xAxisPadding, right: xAxisPadding }}\n            />\n            <YAxis\n              yAxisId=\"left\"\n              dataKey=\"value\"\n              padding={{ top: 10 }}\n              // orientation=\"right\"\n              tickFormatter={(tick) => getShortNumber(tick, false)}\n            />\n            <Tooltip cursor={false} content={<CustomToolTip noCurrencyKeys={[\"value\"]} />} />\n            <Legend\n            // wrapperStyle={{\n            //   paddingLeft: \"60px\"\n            // }}\n            />\n            {/* <Bar yAxisId=\"left\" dataKey=\"value\" name=\"Early Payment\" fill=\"#7CB5EC\" /> */}\n            <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"value\" name=\"DSO\" stroke=\"#75CF5B\" />\n          </ComposedChart>\n        </ResponsiveContainer>\n        {\n          isLoading ?\n            <div className=\"graph-loader\">\n              <div className=\"spinner-border\" />\n            </div>\n            : null\n        }\n      </div>\n    );\n  }\n}\n\nfunction DSOChart(props) {\n  const { setactiveKey } = props;\n  const [apiData, setapiData] = useState([]);\n  const [selectedInvtab, setselectedInvtab] = useState(\"30days\"); //\n  const [startDate, setStartDate] = useState(moment().subtract(\"days\", 30).format(\"MM/DD/YYYY\"));\n  const [endDate, setendDate] = useState(moment().format(\"MM/DD/YYYY\"));\n  const [frequency, setfrequency] = useState(\"weekly\"); //monthly\n  const [isFetching, setIsFetching] = useState(true);\n\n  useEffect(() => {\n    //group api data on date\n    const groupBy = (list) => {\n      var yLabel = GetYLabel(startDate, endDate, selectedInvtab);\n      const array = [];\n      for (var i = 0; i < yLabel.length; i++) {\n        var total = 0;\n        for (var j = 0; j < list.length; j++) {\n          if (yLabel[i].startDate <= list[j][0] && list[j][0] <= yLabel[i].endDate) {\n            total += list[j][1];\n          }\n        }\n        array.push(total);\n      }\n      return array;\n    };\n\n    const XLabels = GetXLabelObjects(startDate, endDate, selectedInvtab);\n    setIsFetching(true);\n    Promise.all(\n      XLabels.map((x) => instance.get(`client/summary?from_date=${x.start}&to_date=${x.end}&frequency=${frequency}`))\n    ).then((resp) => {\n      setIsFetching(false);\n      setapiData(\n        XLabels.map((x, i) => ({\n          ...x,\n          value: get(resp, `[${i}]data.result[0].dso_weekly`, null),\n        }))\n      );\n    });\n  }, [startDate, endDate]);\n\n  function switchSelectedTab(tab) {\n    switch (tab) {\n      case \"30days\":\n        setfrequency(\"weekly\");\n        setStartDate(moment().subtract(30, \"days\").format(\"MM/DD/YYYY\"));\n        break;\n      case \"6months\":\n        setfrequency(\"monthly\");\n        setStartDate(moment().subtract(3, \"months\").format(\"MM/DD/YYYY\"));\n        break;\n      case \"1year\":\n        setfrequency(\"monthly\");\n        setStartDate(moment().subtract(1, \"years\").format(\"MM/DD/YYYY\"));\n        break;\n      default:\n        break;\n    }\n    setselectedInvtab(tab);\n  }\n\n  return (\n    <div className=\"col-md-12\" style={{ overflowY: \"auto\" }}>\n      <div className=\"\">\n        {setactiveKey && <h1 className=\"custchattabhead\">DSO</h1>}\n        <div className=\"table100  pt-0\">\n          <div className=\"row\"></div>\n          <div class=\"custchattab1\">\n            <span\n              onClick={() => switchSelectedTab(\"1year\")}\n              className={`cursour-pointer ${selectedInvtab === \"1year\" && \"activec\"}`}\n            >\n              Year\n            </span>\n            <span\n              onClick={() => switchSelectedTab(\"6months\")}\n              className={`cursour-pointer ${selectedInvtab === \"6months\" && \"activec\"}`}\n            >\n              Quarter\n            </span>\n            <span\n              onClick={() => switchSelectedTab(\"30days\")}\n              className={`cursour-pointer ${selectedInvtab === \"30days\" && \"activec\"}`}\n            >\n              Month\n            </span>\n          </div>\n          <div\n            className={props.setactiveKey && \"cursour-pointer\"}\n            onClick={() => {\n              const { setactiveKey } = props;\n              setactiveKey && setactiveKey(\"dso\");\n            }}>\n            <CustomChart data={apiData.filter(rec => rec.value)} selectedTab={selectedInvtab} isLoading={isFetching}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DSOChart;\n","import XAxisTick from \"components/Recharts/XAxisTick\";\nimport CustomToolTip from \"components/Recharts/CustomTooltip\";\nimport { handleAPIError } from \"handlers/setters\";\nimport get from \"lodash/get\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, ComposedChart, Legend, Line, Tooltip, XAxis, YAxis, ResponsiveContainer } from \"recharts\";\nimport { getShortNumber } from \"utils\";\nimport TokenManager from \"utils/TokenManager\";\nimport { instanceWithRetry } from \"../../actions/axiosInstance\";\nimport { GetXLabelObjects, GetYLabel } from \"../../utils/graphDateFormat\";\n\nconst barWidthObj = {\n  \"1year\": 20,\n  \"6months\": 110,\n  \"30days\": 75\n};\nlet barWidth = 20;\n\nconst xAxisPaddingObj = {\n  \"1year\": 20,\n  \"6months\": 60,\n  \"30days\": 40\n};\nlet xAxisPadding = 20;\nexport class CustomChart extends React.PureComponent {\n  render() {\n    const { data, isLoading } = this.props;\n    return (\n      <div>\n        <ResponsiveContainer height={300} width=\"100%\">\n          <ComposedChart\n            height={300}\n            data={data}\n            margin={{\n              right: 0,\n              left: 30\n            }}\n          >\n            <XAxis\n              tick={<XAxisTick />}\n              dataKey=\"text\"\n              // padding={{ left: xAxisPadding, right: xAxisPadding }}\n            />\n            <YAxis yAxisId=\"left\" tickFormatter={tick => getShortNumber(tick)} />\n            <YAxis\n              yAxisId=\"right\"\n              dataKey=\"apinvalid\"\n              orientation=\"right\"\n              tickFormatter={tick => getShortNumber(tick, false)}\n            />\n            <Tooltip cursor={false} content={<CustomToolTip noCurrencyKeys={[\"apinvalid\"]} />} />\n            <Legend />\n            <Bar yAxisId=\"left\" dataKey=\"value\" name=\"Early Payment\" fill=\"#7CB5EC\" />\n            <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"apinvalid\" name=\"Invalid Invoices\" stroke=\"#75CF5B\" />\n          </ComposedChart>\n        </ResponsiveContainer>\n        {\n          isLoading ?\n            <div className=\"graph-loader\">\n              <div className=\"spinner-border\" />\n            </div>\n            : null\n        }\n      </div>\n    );\n  }\n}\n\nfunction InvoiceInsightGraph(props) {\n  const [apiData, setapiData] = useState([]);\n  const [selectedPaytab, setselectedPaytab] = useState(\"30days\"); //\n  const [startDate, setStartDate] = useState(moment().subtract(30, \"days\").format(\"MM/DD/YYYY\"));\n  const [endDate, setEndDate] = useState(moment().format(\"MM/DD/YYYY\"));\n  const [isFetching, setIsFetching] = useState(true);\n\n  useEffect(() => {\n    //group api data on date\n    const groupBy = list => {\n      var yLabel = GetYLabel(startDate, endDate, selectedPaytab);\n      const array = [];\n      for (var i = 0; i < yLabel.length; i++) {\n        var total = 0;\n        for (var j = 0; j < list.length; j++) {\n          if (yLabel[i].startDate <= list[j][0] && list[j][0] <= yLabel[i].endDate) {\n            total += list[j][1];\n          }\n        }\n        array.push(total);\n      }\n      return array;\n    };\n\n    const XLabels = GetXLabelObjects(startDate, endDate, selectedPaytab);\n\n    const getAveragePaymentGraphData = (startDate, endDate) => {\n      setIsFetching(true);\n      instanceWithRetry\n        .get(`earlypayment?from_date=${startDate}&to_date=${endDate}`)\n        .then(response => {\n          const {\n            data: { result }\n          } = response;\n          const invoiceData = result.map(d => [\n            moment\n              (d.date_closed, \"YYYY-MM-DD\")\n              .toDate()\n              .getTime(),\n            Math.round(d.total_amount_due)\n          ]);\n\n          //group payment data\n          const graphData = groupBy(invoiceData);\n\n          let DATA = XLabels.map((x, i) => ({ ...x, value: graphData[i], apinvalid: 20 * Math.random(20) }));\n\n          // all promises\n          const allPromises = [];\n          XLabels.forEach((x, i) => {\n            allPromises.push(\n              instanceWithRetry.get(`apinvalid/total?from_date='${x.start}'&to_date='${x.end}'`)\n            );\n          });\n\n          Promise.all(allPromises)\n            .then(res => {\n              DATA = DATA.map((x, i) => ({\n                ...x,\n                apinvalid: get(res[i], `data.count`, 0)\n              }));\n              barWidth = barWidthObj[selectedPaytab];\n              xAxisPadding = xAxisPaddingObj[selectedPaytab];\n              setapiData(DATA);\n              setIsFetching(false);\n            })\n            .catch(e => handleAPIError(e));\n        })\n        .catch(e => handleAPIError(e));\n    };\n    getAveragePaymentGraphData(startDate, endDate);\n  }, [startDate, endDate, selectedPaytab]);\n\n  function switchSelectedTab(tab) {\n    switch (tab) {\n      case \"30days\":\n        setStartDate(\n          moment()\n            .subtract(30, \"days\")\n            .format(\"MM/DD/YYYY\")\n        );\n        break;\n      case \"6months\":\n        setStartDate(\n          moment()\n            .subtract(3, \"months\")\n            .format(\"MM/DD/YYYY\")\n        );\n        break;\n      case \"1year\":\n        setStartDate(\n          moment()\n            .subtract(1, \"years\")\n            .format(\"MM/DD/YYYY\")\n        );\n        break;\n      default:\n        break;\n    }\n    setselectedPaytab(tab);\n  }\n\n  return (\n    <div class=\"col-md-12\">\n      <div\n        class=\"graphbg\"\n        className={props.setactiveKey && \"cursour-pointer\"}\n        >\n        {props.setactiveKey && <div class=\"custchattabhead\">Invoice Insights</div>}\n        <div class=\"custchattab1\">\n          <span\n            onClick={() => switchSelectedTab(\"1year\")}\n            className={`cursour-pointer ${selectedPaytab === \"1year\" && \"activec\"}`}\n          >\n            Year\n          </span>\n          <span\n            onClick={() => switchSelectedTab(\"6months\")}\n            className={`cursour-pointer ${selectedPaytab === \"6months\" && \"activec\"}`}\n          >\n            Quarter\n          </span>\n          <span\n            onClick={() => switchSelectedTab(\"30days\")}\n            className={`cursour-pointer ${selectedPaytab === \"30days\" && \"activec\"}`}\n          >\n            Month\n          </span>\n        </div>\n\n        <div\n          id=\"container1\"\n          // style={{ minWidth: \"310px\", height: \"400px\", margin: \"0px auto\", width: \"100%\", overflow: \"hidden\" }}\n          data-highcharts-chart={0}\n          onClick={() => {\n            const { setactiveKey } = props;\n            setactiveKey && setactiveKey(\"invoice_insights\");\n          }}\n        >\n          <CustomChart data={apiData} isLoading={isFetching} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InvoiceInsightGraph;\n","import CustomToolTip from \"components/Recharts/CustomTooltip\";\nimport XAxisTick from \"components/Recharts/XAxisTick\";\nimport { handleAPIError } from \"handlers/setters\";\nimport get from \"lodash/get\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { ComposedChart, Legend, Line, Tooltip, XAxis, YAxis, ResponsiveContainer } from \"recharts\";\nimport { getShortNumber } from \"utils\";\nimport { instanceWithRetry } from \"../../actions/axiosInstance\";\nimport { GetXLabelObjects, GetYLabel } from \"../../utils/graphDateFormat\";\n\nexport class CustomChart extends React.PureComponent {\n  render() {\n    const { data, isLoading } = this.props;\n    return (\n      <div style={{ width: \"100%\", height: 300 }}>\n        <ResponsiveContainer height={300} width=\"100%\">\n          <ComposedChart\n            height={300}\n            data={data}\n            margin={{\n              right: 0,\n            }}\n          >\n            <XAxis\n              tick={<XAxisTick />}\n              dataKey=\"text\"\n            />\n            <YAxis\n              yAxisId=\"left\"\n              dataKey=\"value\"\n              padding={{ top: 10 }}\n              tickFormatter={(tick) => getShortNumber(tick, false)}\n            />\n            <Tooltip cursor={false} content={<CustomToolTip noCurrencyKeys={[\"value\"]} />} />\n            <Legend />\n            <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"value\" name=\"DPO\" stroke=\"#75CF5B\" />\n          </ComposedChart>\n        </ResponsiveContainer>\n        {\n          isLoading ?\n            <div className=\"graph-loader\">\n              <div className=\"spinner-border\" />\n            </div>\n            : null\n        }\n      </div>\n    );\n  }\n}\n\nfunction DPOChart(props) {\n  const [apiData, setapiData] = useState([]);\n  const [selectedInvtab, setselectedInvtab] = useState(\"30days\"); //\n  const [startDate, setStartDate] = useState(moment().subtract(30, \"days\").format(\"MM/DD/YYYY\"));\n  const [endDate, setEndDate] = useState(moment().format(\"MM/DD/YYYY\"));\n  const [frequency, setfrequency] = useState(\"weekly\"); //monthly\n  const [isFetching, setIsFetching] = useState(true);\n\n  useEffect(() => {\n    //group api data on date\n    const groupBy = (list) => {\n      var yLabel = GetYLabel(startDate, endDate, selectedInvtab);\n      const array = [];\n      for (var i = 0; i < yLabel.length; i++) {\n        var total = 0;\n        for (var j = 0; j < list.length; j++) {\n          if (yLabel[i].startDate <= list[j][0] && list[j][0] <= yLabel[i].endDate) {\n            total += list[j][1];\n          }\n        }\n        array.push(total);\n      }\n      return array;\n    };\n\n    const XLabels = GetXLabelObjects(startDate, endDate, selectedInvtab);\n    setIsFetching(true);\n    Promise.all(\n      XLabels.map((x) => instanceWithRetry.get(`client/summary?from_date=${x.start}&to_date=${x.end}&frequency=${frequency}`))\n    ).then((resp) => {\n      setIsFetching(false);\n      setapiData(\n        XLabels.map((x, i) => ({\n          ...x,\n          value: get(resp, `[${i}]data.result[0].dpo_weekly`, null),\n        }))\n      );\n    }).catch(e => handleAPIError(e));\n  }, [startDate, endDate]);\n\n  function switchSelectedTab(tab) {\n    switch (tab) {\n      case \"30days\":\n        setfrequency(\"weekly\");\n        setStartDate(moment().subtract(30, \"days\").format(\"MM/DD/YYYY\"));\n        break;\n      case \"6months\":\n        setfrequency(\"monthly\");\n        setStartDate(moment().subtract(3, \"months\").format(\"MM/DD/YYYY\"));\n        break;\n      case \"1year\":\n        setfrequency(\"monthly\");\n        setStartDate(moment().subtract(1, \"years\").format(\"MM/DD/YYYY\"));\n        break;\n      default:\n        break;\n    }\n    setselectedInvtab(tab);\n  }\n\n  return (\n    <div className=\"col-md-12\" style={{ overflowY: \"auto\" }}>\n      <div>\n        <div className=\"table100  pt-0\">\n          <div class=\"custchattab1\">\n            <span\n              onClick={() => switchSelectedTab(\"1year\")}\n              className={`cursour-pointer ${selectedInvtab === \"1year\" && \"activec\"}`}\n            >\n              Year\n            </span>\n            <span\n              onClick={() => switchSelectedTab(\"6months\")}\n              className={`cursour-pointer ${selectedInvtab === \"6months\" && \"activec\"}`}\n            >\n              Quarter\n            </span>\n            <span\n              onClick={() => switchSelectedTab(\"30days\")}\n              className={`cursour-pointer ${selectedInvtab === \"30days\" && \"activec\"}`}\n            >\n              Month\n            </span>\n          </div>\n          <div\n            className={props.setactiveKey && \"cursour-pointer\"}\n            onClick={() => {\n              const { setactiveKey } = props;\n              setactiveKey && setactiveKey(\"dpo\");\n            }}>\n            <CustomChart data={apiData.filter(rec => rec.value)} selectedTab={selectedInvtab} isLoading={isFetching} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DPOChart;\n","import React, { useEffect, useState } from \"react\";\nimport XAxisTick from \"components/Recharts/XAxisTick\";\nimport CustomToolTip from \"components/Recharts/CustomTooltip\";\nimport { handleAPIError } from \"handlers/setters\";\nimport moment from \"moment\";\nimport { Line, Bar, ComposedChart, Legend, Tooltip, XAxis, YAxis, ResponsiveContainer } from \"recharts\";\nimport { getShortNumber } from \"utils\";\nimport { instanceWithRetry } from \"actions/axiosInstance\";\nimport { GetXLabelObjects } from \"utils/graphDateFormat\";\n\nconst color = ['#9FD85F', '#F9C965', '#F07C3A'];\nconst lineColor = ['#000000', '#413ea0', '#f5f5f5'];\nexport class HistoricalChart extends React.PureComponent {\n    render() {\n        const { data, isLoading, barKeys, lineKeys } = this.props;\n        const graphKey = [...barKeys, ...lineKeys].map(d => (d.key));\n        const modifiedData = data.map(d => {\n            const mod = { ...d};\n            graphKey.forEach(key => {\n                if(mod[key] === 0) {\n                    delete mod[key];\n                }\n            })\n            return mod;\n        });\n        console.log(\"modifiedData \", modifiedData);\n        return (\n            <div>\n                <ResponsiveContainer height={300} width=\"100%\">\n                    <ComposedChart\n                        height={300}\n                        data={modifiedData}\n                    >\n                        <XAxis tick={<XAxisTick />} dataKey=\"text\" />\n                        <YAxis tickFormatter={tick => getShortNumber(tick, false)} />\n                        <Tooltip cursor={false} content={<CustomToolTip noCurrencyKeys={barKeys.concat(lineKeys).map(d => d.key)} />} />\n                        <Legend />\n                        {\n                            barKeys.map((d, i) => (<Bar dataKey={d.key} name={d.name} stackId=\"a\" fill={color[i]} />))\n                        }\n                        {\n                            lineKeys.map((d, i) => (<Line type=\"monotone\" dataKey={d.key} name={d.name} stackId=\"b\" stroke={lineColor[i]} dot={true} />))\n                        }\n                    </ComposedChart>\n                </ResponsiveContainer>\n                {\n                    isLoading ?\n                        <div className=\"graph-loader\">\n                            <div className=\"spinner-border\" />\n                        </div>\n                    : null\n                }\n            </div>\n        );\n    }\n}\n\nexport class HistoricalChartArAP extends React.PureComponent {\n    render() {\n        const { data, isLoading, barKeys, lineKeys } = this.props;\n        const graphKey = [...barKeys, ...lineKeys].map(d => (d.key));\n        const modifiedData = data.map(d => {\n            const mod = { ...d };\n            graphKey.forEach(key => {\n                if (mod[key] === 0) {\n                    delete mod[key];\n                }\n            })\n            return mod;\n        });\n        return (\n            <div>\n                <ResponsiveContainer height={300} width=\"100%\">\n                    <ComposedChart\n                        height={300}\n                        data={modifiedData}\n                    >\n                        <XAxis tick={<XAxisTick />} dataKey=\"text\" />\n                        <YAxis tickFormatter={tick => getShortNumber(tick)} />\n                        <YAxis\n                            yAxisId=\"right\"\n                            orientation=\"right\"\n                            tickFormatter={tick => getShortNumber(tick, false)}\n                        />\n                        <Tooltip cursor={false} content={<CustomToolTip noCurrencyKeys={lineKeys.map(d => d.key)} />} />\n                        <Legend />\n                        {\n                            barKeys.map((d, i) => (<Bar dataKey={d.key} name={d.name} stackId=\"a\" fill={color[i]} />))\n                        }\n                        {\n                            lineKeys.map((d, i) => (<Line yAxisId=\"right\" type=\"monotone\" dataKey={d.key} name={d.name} stackId=\"b\" stroke={lineColor[i]} dot={true} />))\n                        }\n                    </ComposedChart>\n                </ResponsiveContainer>\n                {\n                    isLoading ?\n                        <div className=\"graph-loader\">\n                            <div className=\"spinner-border\" />\n                        </div>\n                        : null\n                }\n            </div>\n        );\n    }\n}\n\nfunction HistoricalGraph(props) {\n    const [selectedPaytab, setselectedPaytab] = useState(\"30days\"); //\n    const [apiData, setapiData] = useState([]);\n    const [frequency, setFrequency] = useState('weekly');\n    const [startDate, setStartDate] = useState(moment().subtract(30, \"days\").format(\"MM/DD/YYYY\"));\n    const [isFetching, setIsFetching] = useState(true);\n\n    useEffect(() => { getGraphData() }, [selectedPaytab]);\n\n    const reducedObject = (dataArray) => {\n        const updates = dataArray.reduce((result, cv) => {\n            for (let key in result) {\n                result = {\n                    ...result,\n                    [key]: cv[key] + result[key],\n                };\n            }\n            return result;\n        }, {\n            ap_total: 0,\n            ap_weighted_avg_days_late: 0,\n            ap_weighted_avg_payment_days: 0,\n            ap_weighted_avg_terms: 0,\n            ar_total: 0,\n            ar_weighted_avg_collection_days: 0,\n            ar_weighted_avg_days_late: 0,\n            ar_weighted_avg_terms: 0,\n            total_ap_invoices: 0,\n            total_ar_invoices: 0,\n            total_customers: 0,\n            total_suppliers: 0,\n        });\n        return updates;\n    };\n\n    const getGraphData = () => {\n        let xAxisLavel = GetXLabelObjects(startDate, '', selectedPaytab);\n        let DATA = xAxisLavel;\n        setIsFetching(true);\n        const promises = [];\n        xAxisLavel.forEach((x, i) => {\n            promises.push(\n                instanceWithRetry.get(`client/summary?frequency=${frequency}&from_date=${x.start}&to_date=${x.end}`)\n            );\n        });\n\n        Promise.all(promises)\n            .then(res => {\n                const updated = DATA.map((x, i) => ({ ...x, ...reducedObject(res[i].data.result) }))\n                setapiData(updated);\n                setIsFetching(false);\n            })\n            .catch(e => handleAPIError(e));\n    }\n\n    function switchSelectedTab(tab) {\n        switch (tab) {\n            case \"30days\":\n                setStartDate(moment().subtract(30, \"days\").format(\"MM/DD/YYYY\"));\n                setFrequency('weekly');\n                break;\n            case \"6months\":\n                setFrequency(\"monthly\");\n                setStartDate(moment().subtract(3, \"months\").format(\"MM/DD/YYYY\"));\n                break;\n            case \"1year\":\n                setStartDate(moment().subtract(1, \"years\").format(\"MM/DD/YYYY\"));\n                setFrequency('monthly');\n                break;\n            default:\n                break;\n        }\n        setselectedPaytab(tab);\n    }\n\n    return (\n        <div class=\"col-md-12\">\n            <div class=\"graphbg\">\n                {props.setactiveKey && <div class=\"custchattabhead\">By vendors classification</div>}\n                <div class=\"custchattab1\">\n                    <span\n                        onClick={() => switchSelectedTab(\"1year\")}\n                        className={`cursour-pointer ${selectedPaytab === \"1year\" && \"activec\"}`}\n                    >\n                        Year\n                    </span>\n                    <span\n                        onClick={() => switchSelectedTab(\"6months\")}\n                        className={`cursour-pointer ${selectedPaytab === \"6months\" && \"activec\"}`}\n                    >\n                        Quarter\n                    </span>\n                    <span\n                        onClick={() => switchSelectedTab(\"30days\")}\n                        className={`cursour-pointer ${selectedPaytab === \"30days\" && \"activec\"}`}\n                    >\n                        Month\n                    </span>\n                </div>\n                <div\n                    id=\"container1\"\n                    data-highcharts-chart={0}\n                >\n                    {\n                        props.type === 1 ?\n                        <HistoricalChart data={apiData} isLoading={isFetching} barKeys={props.barKeys} lineKeys={props.lineKeys} /> :\n                        <HistoricalChartArAP data={apiData} isLoading={isFetching} barKeys={props.barKeys} lineKeys={props.lineKeys} />\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default HistoricalGraph;\n","import React from 'react';\nimport { Tabs, Tab } from \"react-bootstrap\";\nimport InvoiceGraph from \"../customers/invoiceGraph\";\nimport DSOChart from \"../customers/DSOChart\";\nimport InvoiceInsightGraph from \"../vendors/invoiceInsightGraph\";\nimport DPOChart from \"../vendors/DPOChart\";\nimport HistoricalInsights from \"./historicalInsights\";\nimport {Collections} from '@material-ui/icons';\n\nexport default class Insights extends React.Component {\n    state = {\n        activeTab: \"1\",\n    };\n    componentDidMount() {\n        document.title = \"Insights - Payference\";\n    }\n    render() {\n        const {\n            activeTab\n        } = this.state;\n        return (\n            <div className=\"row px-15\" id=\"dashboardBody\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <Tabs id=\"insightgraphs\" activeKey={activeTab} onSelect={(activeTab) => this.setState({ activeTab })}>\n                                        <Tab eventKey=\"1\" title=\"AR Insights\">\n                                            <div className=\"row mt-3\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"row\">\n                                                        <p className=\"custchattabhead col-md-12\">Collection stats</p>\n                                                        <HistoricalInsights\n                                                            type={1}\n                                                            barKeys={[{\n                                                                key: 'ar_weighted_avg_collection_days',\n                                                                name: 'Weighted Avg Days to collect',\n                                                            }]}\n                                                            lineKeys={[{\n                                                                key: 'ar_weighted_avg_terms',\n                                                                name: 'Weighted Avg Terms'\n                                                            }]}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"row\">\n                                                        <p className=\"custchattabhead col-md-12\">Transaction stats</p>\n                                                        <HistoricalInsights\n                                                            type={2}\n                                                            lineKeys={[{\n                                                                name: 'Invoices',\n                                                                key: 'total_ar_invoices',\n                                                            },\n                                                            {\n                                                                name: 'Customers',\n                                                                key: 'total_customers',\n                                                            }]}\n                                                            barKeys={[{\n                                                                name: 'Total AR',\n                                                                key: 'ar_total',\n                                                            }]}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row mt-2\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"row\">\n                                                        <p className=\"custchattabhead col-md-12\">Late collections</p>\n                                                        <HistoricalInsights\n                                                            type={1}\n                                                            barKeys={[]}\n                                                            lineKeys={[{\n                                                                key: 'ar_weighted_avg_days_late',\n                                                                name: 'Weighted Avg Days late',\n                                                            }]}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"row\">\n                                                        <p className=\"custchattabhead col-md-12\">Early Collections</p>\n                                                        <InvoiceGraph setInvoiceGraphLoading={() => { }} />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row mt-2\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"row\">\n                                                        <p className=\"custchattabhead col-md-12\">DSO</p>\n                                                        <DSOChart />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Tab>\n                                        <Tab eventKey=\"2\" title=\"AP Insights\">\n                                            <div className=\"row mt-3\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"row\">\n                                                        <p className=\"custchattabhead col-md-12\">Payable stats</p>\n                                                        <HistoricalInsights\n                                                            type={1}\n                                                            barKeys={[{\n                                                                key: 'ap_weighted_avg_payment_days',\n                                                                name: 'Weighted Avg Days to payment',\n                                                            }]}\n                                                            lineKeys={[{\n                                                                key: 'ap_weighted_avg_terms',\n                                                                name: 'Weighted Avg Terms'\n                                                            }]}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"row\">\n                                                        <p className=\"custchattabhead col-md-12\">Transaction stats</p>\n                                                        <HistoricalInsights\n                                                            type={2}\n                                                            lineKeys={[{\n                                                                name: 'Invoices',\n                                                                key: 'total_ap_invoices',\n                                                            },\n                                                            {\n                                                                name: 'Vendors',\n                                                                key: 'total_suppliers',\n                                                            }]}\n                                                            barKeys={[{\n                                                                name: 'Total AP',\n                                                                key: 'ap_total',\n                                                            }]}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row mt-2\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"row\">\n                                                        <p className=\"custchattabhead col-md-12\">Late Payments</p>\n                                                        <HistoricalInsights\n                                                            type={1}\n                                                            barKeys={[]}\n                                                            lineKeys={[{\n                                                                key: 'ap_weighted_avg_days_late',\n                                                                name: 'Weighted Avg Days late',\n                                                            }]}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"row\">\n                                                        <p className=\"custchattabhead col-md-12\">Early payments</p>\n                                                        <InvoiceInsightGraph />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row mt-2\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"row\">\n                                                        <p className=\"custchattabhead col-md-12\">DPO</p>\n                                                        <DPOChart />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Tab>\n                                    </Tabs>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n"],"sourceRoot":""}