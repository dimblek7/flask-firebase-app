{"version":3,"sources":["components/PaymentPlanModal.js","containers/vendors/vendorSpendingGraph.js","containers/vendors/apInvoiceGraph.js","containers/vendors/payrollGraph.js","containers/vendors/Agingchart.js","containers/vendors/graph.js","containers/vendors/vendorList.js","containers/vendors/VendorDetailSidebar.js","containers/vendors/vendorDetails.js","containers/vendors/vendors.js"],"names":["PaymentPlanModal","props","onHide","show","invoices","getPaymentPlan","prevData","setEditPlan","calculateAmount","reduce","a","b","total_amount_due","supplierId","length","get","invoiceIds","map","d","id","useState","showPlan","setShowPlan","startDate","setStartDate","installments","setInstallments","perMonthAmount","setperMonthAmount","installmentInterval","setInstallmentInterval","paymentPlan","setPaymentPlan","setIsUpdating","totalError","setTotalError","showInvoiceDropdown","setShowInvoiceDropdown","amount","setAmount","invoiceDropdownData","setInvoiceDropdownData","removedPlanId","setRemovedPlanId","useEffect","prevInstallment","k","no","date","moment","format","Number","toFixed","isUpdated","prevAmountTotal","i","invoiceDropdown","name","invoice_number","isSelected","includes","totalAmount","updatePlan","paymentPlanInstance","filter","data","updatedAmount","updateInstallments","x","updatePaymentPlan","updateAmount","value","updatedValue","updatedInstallments","checkToAdd","addNewItemUpdate","updateDate","savePlan","totalPlanAmount","console","log","Math","round","updateSubmitPlan","submitPaymentPlan","addNewItem","concat","add","diff","betweenDays","startdate","enddate","inputNumbers","document","querySelectorAll","invalidChars","addEventListener","this","replace","e","key","preventDefault","renderEditPaymentPlan","disableSave","disableAdd","Fragment","className","to","target","style","padding","onClick","onClickAway","maxHeight","overflowY","aria-labelledby","background","undefined","updatedInvoice","type","defaultChecked","labelFormat","Date","getSelectedDates","disabled","min","max","onFocus","onInput","onBlur","handleRemovePlan","resetPlan","requestObject","supplier_id","is_payment_plan","instance","post","then","response","setactiveKey","localStorage","setItem","selectedInvoices","invoicesAdded","removedInvoices","indexOf","edit","delete","patch","size","backdrop","Header","closeButton","Body","getFormattedNumber","defaultValue","renderPaymentPlan","reminder","floor","paymentPlanObj","range","generatePaymentPlan","CustomChart","isLoading","height","width","tick","XAxisTick","dataKey","tickFormatter","getShortNumber","cursor","content","stackId","fill","React","PureComponent","VendorGraph","selectedPaytab","setselectedPaytab","apiData","setapiData","endDate","isFetching","setIsFetching","switchSelectedTab","tab","subtract","criticaldone","highdone","mediumdone","lowdone","xAxisLavel","GetXLabelObjects","DATA","allCriticalPromises","forEach","push","instanceWithRetry","start","end","Promise","all","res","critical","catch","handleAPIError","allHighPromises","high","allMediumPromises","medium","allLowPromises","low","class","data-highcharts-chart","margin","APInvoiceGraph","averagePaymentProjectionData","setAveragePaymentProjectionData","currentDate","l30done","g30done","paiddone","allLess30Promises","l30","allGreater30Promises","g30","allPaidPromises","paid","getAveragePaymentGraphData","colorArray","categoryItem","left","right","bottom","cat","stroke","PayrollGraph","vendorCategoryList","setVendorCategoryList","setCatDetail","getVendorCategory","setGraphData","XLabels","reverse","catDetail","categoryName","r","categoryList","result","item","is_selected","dateRanges","category","allPromises","resCategoryGraph","total","getVendorCategoryData","minWidth","overflow","renderActiveShape","cx","cy","innerRadius","outerRadius","startAngle","endAngle","DonutChart","onRecordClick","vendorData","selectedSection","fullsize","activeindex","setactiveindex","useWindowSize","onPieEnter","index","onPieLeave","animationDuration","activeIndex","activeShape","payload","onMouseEnter","onMouseLeave","position","entry","COLORS","dataindex","align","verticalAlign","PieChartTooltip","dummyData","from_date","is_future","to_date","color","is_past","PREV_URL","AgingChart","originalstartDate","originalendDate","showgraphs","setstartDate","setendDate","setpage","setselectedSection","chartData","setchartData","settotal","showChart","setshowChart","timer","getData","total_url","apis","resp","days_to_add","from_end","to_start","days_to_subtract","updated_from_date","updated_to_date","updateSection","from","sec","clearTimeout","setTimeout","record","backgroundColor","getFAWC","Graphs","Agingchart","resetFilter","GLOBAL_URL","DATES_CHANGED","connect","state","changeSelection","history","rows","setrows","showFilter","setshowFilter","vendorList","setvendorList","selectedVendor","setselectedVendor","showexport","setshowexport","isVendorFetching","setisVendorFetching","setIsfetching","setloadVendorListing","setoriginalstartDate","setoriginalendDate","is_dateupdated_here","setis_dateupdated_here","setinterval","exportedData","setExportedData","page","per_page","setper_page","sort_by","setsort_by","sort_order","setsort_order","setid","exporting","setexporting","setshowgraphs","getItem","activeKey","Today","Yesterday","csvRef","useRef","showTabs","getURL","pagination","URL","window","scrollTo","filters","split","url","param","join","amount_due","amount_not_due","updatedRows","prev","aft","due_dates","notdue_dates","isdueupdated","isnotdueupdated","updateRows","responses","responses2","ExportCSV","element","Vendor","convertDecimalNo","exportAllData","flag","current","link","click","csvData","filename","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","ExportXLSX","setAPISort","sort_by_key","debounceMethod","debounce","text","searchVendor","columns","accessor","Cell","stopPropagation","original","graphProps","loadVendorList","title","marginRight","ariaHidden","Tabs","onSelect","Tab","eventKey","data-toggle","aria-haspopup","aria-expanded","aria-hidden","ClickAwayListener","Autocomplete","suggestions","uniqBy","s","getSelected","search","fontSize","DateRangePicker","interval","parentEl","open","location","origin","textAlign","role","ref","display","marginBottom","noDataText","minRows","loading","sortable","resizable","showPagination","defaultSorted","desc","getTrProps","rowInfo","column","prevState","vendorCategories","CustomerDetailSidebar","preExpanded","showContactModal","handleContactModal","setState","updateCustomer","postData","vendorid","put","Toaster","expandAndOpen","number","handleToggleCollapse","collapse","getdata","onEmailSave","setshowNoteModal","setisinvoicelevelnote","notesUpdated","setnotesUpdated","paymentTerms","region","OverlayTrigger","placement","overlay","Tooltip","fe_config","MODE","setemailData","onSave","allowMultipleExpanded","allowZeroExpanded","SelectEditorCell","options","updateValue","auth","username","TokenManager","password","random","toString","classification","TextEditorCell","email","NotesList","onUpdate","AddContactModal","Component","selectedpayment","match","showNoteModal","isinvoicelevelnote","showpayIQDateModal","setshowpayIQDateModal","invoiceList","setinvoiceList","setlast12MonthTotal","setisFetching","last12MonthPaid","setlast12MonthPaid","setvendorData","pageMaxCount","fulldata","setfulldata","toggleCollapse","setToggleCollapse","showPlanModal","setPlanModal","paymentPlanList","setPaymentPlanList","editPlan","today","todayMinusYear","tomorrow","tomorrowPlusYear","abs","urlparams","params","response2","slice","reload","supplierid","temp","Invoice","Status","Email","fastForwardPayiq","by","allpromises","isselected","recommendation_date","isrowselected","find","planTableColumns","maxWidth","setconfirmationboxData","variant","msg","resetconfirmationboxData","onChange","newvalue","checked","updatedinvoiceList","marginLeft","filterable","getFormattedDate","sortkey","src","filterarrow","alt","prePopulatedBody","list","invoice","due_date","ispayplandisabled","status","payment_plan_id","tableProps","TheadComponent","subject","body","files","cc","message","bodyFormData","FormData","set","JSON","stringify","file","append","instanceMultipart","resetemail","note","chartTotal","TextArea","header","handleClose","handleSubmit","invoice_id","reco_date_override","paddingBottom","float","hash","goBack","isfullscreen","borderRadius","marginTop","data-target","getIsPayAdmin","allselectedinvoices","ids","convertAmount","invoice_amount","withRouter","login","payables","setselectedpayment","exact","path","component"],"mappings":"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","file":"static/js/17.4c270884.chunk.js","sourcesContent":["import { instance } from \"actions/axiosInstance\";\nimport ClickAwayListener from \"components/ClickAwayListener\";\nimport get from \"lodash/get\";\nimport range from \"lodash/range\";\nimport moment from \"moment\";\nimport { betweenDays } from \"utils/dates\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { getFormattedNumber } from \"utils\";\nimport SingleDatePicker from \"./SingleDatePicker\";\n\nfunction PaymentPlanModal(props) {\n  const { onHide, show, invoices, getPaymentPlan, prevData, setEditPlan } = props;\n  const calculateAmount = invoices.reduce((a, b) => a + b.total_amount_due, 0);\n  const supplierId = invoices.length ? get(invoices, \"[0].supplier.id\", \"\") : 0;\n  const invoiceIds = invoices.length ? invoices.map(d => d.id) : [];\n  const [showPlan, setShowPlan] = useState(false);\n  const [startDate, setStartDate] = useState(\"\");\n  const [installments, setInstallments] = useState(\"\");\n  const [perMonthAmount, setperMonthAmount] = useState(\"\");\n  const [installmentInterval, setInstallmentInterval] = useState(\"\");\n  const [paymentPlan, setPaymentPlan] = useState([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [totalError, setTotalError] = useState(false);\n  const [showInvoiceDropdown, setShowInvoiceDropdown] = useState(false);\n  const [amount, setAmount] = useState(calculateAmount);\n  const [invoiceDropdownData, setInvoiceDropdownData] = useState([]);\n  const [removedPlanId, setRemovedPlanId] = useState([]);\n\n  useEffect(() => {\n    const calculateAmount = invoices.reduce((a, b) => a + b.total_amount_due, 0);\n    setAmount(calculateAmount);\n  }, [invoices.length]);\n\n  useEffect(() => {\n    if (prevData) {\n      setShowPlan(prevData ? true : false);\n      const prevInstallment = prevData.installments;\n      const paymentPlan = prevInstallment.map((d, k) => ({\n        no: k + 1,\n        id: d[0],\n        date: moment(d[1]).format(\"YYYY-MM-DD\"),\n        amount: Number(Number(d[2]).toFixed(2)),\n        isUpdated: true\n      }));\n      let prevAmountTotal = 0;\n      for (let i = 0; i < prevInstallment.length; i++) {\n        prevAmountTotal += prevInstallment[i][2];\n      }\n      const invoiceDropdown = invoices.map(d => ({\n        id: d.id,\n        name: d.invoice_number,\n        isSelected: prevData.invoices.includes(d.id),\n        totalAmount: d.total_amount_due\n      }));\n      setInvoiceDropdownData(invoiceDropdown);\n      setAmount(prevAmountTotal);\n      setInstallments(prevInstallment.length);\n      setPaymentPlan(paymentPlan);\n    }\n  }, [prevData]);\n\n  const generatePaymentPlan = () => {\n    const reminder = amount % perMonthAmount;\n    let installments = Math.floor(amount / perMonthAmount);\n    installments = reminder ? installments + 1 : installments;\n    const paymentPlanObj = range(0, installments).map((d, i) => ({\n      no: i + 1,\n      date: moment(startDate)\n        .add(d * installmentInterval, \"days\")\n        .format(\"YYYY-MM-DD\"),\n      amount: Number(i === installments - 1 ? reminder : perMonthAmount).toFixed(2),\n      isUpdated: false\n    }));\n    setInstallments(installments);\n    setPaymentPlan(paymentPlanObj);\n    setShowPlan(true);\n  };\n\n  const updatePlan = d => {\n    const paymentPlanInstance = [...paymentPlan].filter(data => data.no !== d);\n    const updatedAmount = paymentPlanInstance.filter(data => data.isUpdated).reduce((a, b) => a + Number(b.amount), 0);\n    const updateInstallments = paymentPlanInstance.filter(x => !x.isUpdated).length;\n    const updatePaymentPlan = paymentPlanInstance\n      .map((d, i) => ({ ...d, no: i + 1 }))\n      .map(d => ({\n        ...d,\n        amount: d.isUpdated ? d.amount : Number(Number((amount - updatedAmount) / updateInstallments).toFixed(2))\n      }));\n\n    setInstallments(installments - 1);\n    setPaymentPlan(updatePaymentPlan);\n    setIsUpdating(false);\n  };\n\n  const updateAmount = (d, value) => {\n    if (value > amount) return;\n    let updatedValue = value ? Number(Number(value).toFixed(2)) : \"\";\n    // updatedValue = updatedValue ? Number(updatedValue) : undefined;\n    const updatedAmount = paymentPlan\n      .filter(data => data.no === d || data.isUpdated)\n      .reduce((a, b) => a + (b.no === d ? updatedValue : Number(b.amount)), 0);\n    const updatedInstallments = paymentPlan.filter(data => !data.isUpdated && data.no !== d).length;\n    // const updatedInstallments = paymentPlan.length - 1;\n    const updatePaymentPlan = paymentPlan.map(data => {\n      if (data.no === d) {\n        return {\n          ...data,\n          amount: value || \"\",\n          isUpdated: true\n        };\n      } else if (data.isUpdated) {\n        return data;\n      }\n      return {\n        ...data,\n        amount: Number(Number((amount - (updatedAmount || 0)) / updatedInstallments).toFixed(2))\n      };\n    });\n    setPaymentPlan(updatePaymentPlan);\n  };\n\n  const checkToAdd = () => {\n    const diff = (amount - paymentPlan.reduce((a, b) => a + Number(b.amount), 0)).toFixed(2);\n    if (diff > 0) {\n      addNewItemUpdate();\n    }\n  };\n\n  const updateDate = (d, value) => {\n    // value = moment(value).format(\"MM/DD/YYYY\");\n    const updatePaymentPlan = paymentPlan.map(data => {\n      if (data.no === d) {\n        return {\n          ...data,\n          date: value\n        };\n      }\n      return data;\n    });\n    setPaymentPlan(updatePaymentPlan);\n  };\n\n  const savePlan = () => {\n    const totalPlanAmount = paymentPlan.reduce((a, b) => a + Number(b.amount), 0);\n    console.log(\"totalPlanAmount: \", totalPlanAmount);\n    if (Math.round(totalPlanAmount) !== Math.round(amount)) {\n      setTotalError(true);\n    } else if (!prevData) {\n      setTotalError(false);\n      submitPaymentPlan();\n    } else {\n      setTotalError(false);\n      updateSubmitPlan();\n    }\n  };\n\n  const addNewItem = () => {\n    const updatedAmount = paymentPlan.filter(data => data.isUpdated).reduce((a, b) => a + Number(b.amount), 0);\n    const updateInstallments = paymentPlan.filter(x => !x.isUpdated).length + 1;\n    const updatePaymentPlan = paymentPlan\n      .map((d, i) => ({ ...d, no: i + 1 }))\n      .concat({\n        no: paymentPlan.length + 1,\n        amount: Number((amount - updatedAmount) / updateInstallments).toFixed(2),\n        date: moment(paymentPlan[installments - 1].date)\n              .add(installmentInterval, \"days\")\n              .format(\"YYYY-MM-DD\")\n      })\n      .map(d => ({\n        ...d,\n        amount: d.isUpdated ? d.amount : Number(Number((amount - updatedAmount) / updateInstallments).toFixed(2))\n      }));\n\n    // Add reminder in last installment\n    const diff = (amount - updatePaymentPlan.reduce((a, b) => a + Number(b.amount), 0)).toFixed(2);\n    if(diff !== 0.00 && get(updatePaymentPlan, `[${updatePaymentPlan.length-1}].amount`, 0)) {\n      updatePaymentPlan[updatePaymentPlan.length-1].amount = updatePaymentPlan[updatePaymentPlan.length-1].amount + Number(diff);\n    }\n    setInstallments(installments + 1);\n    setPaymentPlan(updatePaymentPlan);\n  };\n\n  const addNewItemUpdate = () => {\n    const prevInstallment = prevData.installments;\n    let prevAmountTotal = 0;\n    for (let i = 0; i < prevInstallment.length; i++) {\n      prevAmountTotal += prevInstallment[i][2];\n    }\n    let installmentInterval = 0;\n    (installments >= 2) && (installmentInterval = betweenDays({ startdate: moment(paymentPlan[installments - 2].date), enddate: moment(paymentPlan[installments - 1].date)} ));\n    const updatePaymentPlan = paymentPlan.concat({\n      no: paymentPlan.length + 1,\n      amount: Number(amount - paymentPlan.reduce((a, b) => a + Number(b.amount), 0)).toFixed(2),\n      date: moment(paymentPlan[installments - 1].date, \"YYYY-MM-DD\")\n      .add(installmentInterval, \"days\")\n      .format(\"YYYY-MM-DD\")\n    });\n    setInstallments(installments + 1);\n    setPaymentPlan(updatePaymentPlan);\n  };\n\n  const handleRemovePlan = d => {\n    if (d.id) {\n      setRemovedPlanId([...removedPlanId, d.id]);\n      updatePlan(d.no);\n    } else {\n      updatePlan(d.no);\n    }\n  };\n\n  useEffect(() => {\n    const inputNumbers = document.querySelectorAll(\"input[type=number]\");\n    if (inputNumbers.length) {\n      var invalidChars = [\"-\", \"+\", \"e\"];\n      for (let i = 0; i < inputNumbers.length; i++) {\n        inputNumbers[i].addEventListener(\"input\", function() {\n          this.value = this.value.replace(/[e\\+\\-]/gi, \"\");\n        });\n\n        inputNumbers[i].addEventListener(\"keydown\", function(e) {\n          if (invalidChars.includes(e.key)) {\n            e.preventDefault();\n          }\n        });\n      }\n    }\n  });\n\n  const renderEditPaymentPlan = () => {\n    const disableSave = (amount - paymentPlan.reduce((a, b) => a + Number(b.amount), 0)).toFixed(2) != 0.00;\n    const disableAdd = paymentPlan.length === 100;\n    return (\n      <React.Fragment>\n        {totalError ? (\n          <div className=\"row pb-3\">\n            <div className=\"col-sm-12 text-warning\">\n              Your updated plan amount is not matching actual amount, Please update your plan amount and save.\n            </div>\n            <div className=\"col-sm-6\"></div>\n          </div>\n        ) : null}\n        <div className=\"row pb-3\">\n          <div className=\"col-sm-6\">\n            <strong>Actual Amount: </strong> {amount.toFixed(2)} <br />\n            <strong>Updated Amount: </strong> {paymentPlan.reduce((a, b) => a + Number(b.amount), 0).toFixed(2)}\n            <br />\n            <strong>Difference: </strong>\n            {(amount - paymentPlan.reduce((a, b) => a + Number(b.amount), 0)).toFixed(2)}\n          </div>\n        </div>\n\n        <div className=\"row mb-2\">\n          <div className=\"col-sm-6\">\n            <strong>Invoices: </strong>\n            <span>\n              {invoiceDropdownData\n                .filter(x => x.isSelected)\n                .map((d, i) => (\n                  <span>\n                    <Link to={`/payables/${d.id}`} target=\"_blank\">\n                      {d.name}\n                    </Link>\n                    {invoiceDropdownData.filter(x => x.isSelected).length !== i + 1 && \",\"}{\" \"}\n                  </span>\n                ))}\n            </span>\n          </div>\n          <div className=\"col-sm-6\">\n            <div className=\"dropdown\" style={{ padding: 5 }}>\n              <span\n                className=\"dropdown-toggle all-account cursour-pointer\"\n                onClick={() => setShowInvoiceDropdown(true)}\n              >\n                Select Invoices\n              </span>\n              <ClickAwayListener onClickAway={setShowInvoiceDropdown}>\n                <div\n                  className={`cursour-pointer dropdown-menu hide-scroll ${showInvoiceDropdown ? \"show\" : \"\"}`}\n                  style={{ maxHeight: \"50vh\", overflowY: \"scroll\" }}\n                  aria-labelledby=\"dropdownMenuLink\"\n                  id=\"companylist\"\n                >\n                  {invoiceDropdownData.map(data => {\n                    return (\n                      <label\n                        className=\"d-block cursor-pointer\"\n                        key={`${data.id}-${data.isSelected}`}\n                        style={{ background: data.isSelected ? \"#eee\" : undefined }}\n                        onClick={() => {\n                          const updatedInvoice = invoiceDropdownData.map(d => {\n                            if (d.id === data.id) {\n                              setAmount(!d.isSelected ? amount + d.totalAmount : amount - d.totalAmount);\n                              return {\n                                ...d,\n                                isSelected: !d.isSelected\n                              };\n                            }\n                            return d;\n                          });\n                          setInvoiceDropdownData(updatedInvoice);\n                        }}\n                      >\n                        <input type=\"checkbox\" className=\"mr-2\" name={data.name} defaultChecked={data.isSelected} />\n                        {data.name}\n                      </label>\n                    );\n                  })}\n                </div>\n              </ClickAwayListener>\n            </div>\n          </div>\n        </div>\n        <div className=\"row mb-1 pb-2 border-bottom\">\n          <div className=\"col-sm-2 d-flex align-items-center\">\n            <strong>No</strong>\n          </div>\n          <div className=\"col-sm-5 d-flex align-items-center\">\n            <strong>Date</strong>\n          </div>\n          <div className=\"col-sm-4\">\n            <strong>Amount</strong>\n          </div>\n          <div className=\"col-sm-1\" />\n        </div>\n        <div\n          // className=\"my-height\"\n          style={{ \"max-height\": \"38vh\", overflowY: \"scroll\" }}\n        >\n          {paymentPlan.map((d, i) => (\n            <div className=\"row mb-2  pb-2 border-bottom\" key={d.no}>\n              <div className=\"col-sm-1 d-flex align-items-center\">{d.no}</div>\n              <div className=\"col-sm-5 single-date-picker\">\n                <SingleDatePicker\n                  labelFormat=\"MMM DD, YYYY\"\n                  startDate={d.date ? moment(new Date(d.date)) : undefined}\n                  getSelectedDates={(date) => updateDate(d.no, date.format(\"YYYY-MM-DD\"))}\n                />\n              </div>\n              <div className=\"col-sm-4\">\n                <input\n                  className=\"form-control\"\n                  disabled={paymentPlan.length === 1}\n                  value={d.amount}\n                  min=\"0\"\n                  max={Number(amount) + 1}\n                  // value={isUpdating !== d.no ? d.amount : undefined}\n                  onFocus={() => {\n                    setIsUpdating(d.no);\n                  }}\n                  onInput={e => {\n                    updateAmount(d.no, e.target.value);\n                  }}\n                  onBlur={checkToAdd}\n                  type=\"number\"\n                />\n              </div>\n              {installments >=2 && <div className=\"col-sm-2 d-flex align-items-center\">\n                <i className=\"fa fa-remove cursor-pointer\" onClick={() => handleRemovePlan(d)} />\n              </div>}\n            </div>\n          ))}\n        </div>\n        <hr />\n        <div className=\"mt-4\">\n          <Button disabled={disableAdd} onClick={addNewItemUpdate} className=\"mr-2\">\n            Add New\n          </Button>\n          <Button disabled={disableSave} onClick={savePlan}>\n            Update Plan\n          </Button>\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  const renderPaymentPlan = () => {\n    if (!showPlan) {\n      return;\n    }\n    if (showPlan && prevData) {\n      return renderEditPaymentPlan();\n    }\n    const disableSave = (amount - paymentPlan.reduce((a, b) => a + Number(b.amount), 0)).toFixed(2) != 0.00;\n    const disableAdd = paymentPlan.length === 100;\n    return (\n      <div>\n        <div className=\"row mb-1\">\n          <div className=\"col-sm-4 d-flex align-items-center mb-2\">\n            <strong>Total Amount:</strong>\n            <span className=\"ml-3\">{getFormattedNumber(amount.toFixed(2))}</span>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col-sm-4 d-flex align-items-center mb-2\">\n            <strong>Difference:</strong>\n            <span className=\"ml-3\">{(amount - paymentPlan.reduce((a, b) => a + Number(b.amount), 0)).toFixed(2)}</span>  \n          </div>\n        </div>\n        {totalError ? (\n          <div className=\"row pb-3\">\n            <div className=\"col-sm-12\">\n              Your updated plan amount is not matching actual amount, Please update your plan amount and save.\n            </div>\n            <div className=\"col-sm-6\">\n              <strong>Actual Amount:</strong> {amount.toFixed(2)} <br />\n              <strong>Updated Amount:</strong> {paymentPlan.reduce((a, b) => a + Number(b.amount), 0).toFixed(2)}\n              <br />\n            </div>\n            <div className=\"col-sm-6\"></div>\n          </div>\n        ) : null}\n        <div className=\"row mb-1 pb-2 border-bottom\">\n          <div className=\"col-sm-2 d-flex align-items-center\">\n            <strong>No</strong>\n          </div>\n          <div className=\"col-sm-5 d-flex align-items-center\">\n            <strong>Date</strong>\n          </div>\n          <div className=\"col-sm-4\">\n            <strong>Amount</strong>\n          </div>\n          <div className=\"col-sm-1\" />\n        </div>\n        <div\n          // className=\"my-height\"\n          style={{ \"max-height\": \"38vh\", overflowY: \"scroll\" }}\n        >\n          {paymentPlan.map((d, i) => (\n            <div className=\"row mb-2  pb-2 border-bottom\" key={d.no}>\n              <div className=\"col-sm-1 d-flex align-items-center\">{d.no}</div>\n              <div className=\"col-sm-5 single-date-picker\">\n                <SingleDatePicker\n                  labelFormat=\"MMM DD, YYYY\"\n                  startDate={d.date ? moment(new Date(d.date)) : undefined}\n                  getSelectedDates={(date) => updateDate(d.no, date.format(\"YYYY-MM-DD\"))}\n                />\n              </div>\n              <div className=\"col-sm-4\">\n                <input\n                  className=\"form-control\"\n                  disabled={paymentPlan.length === 1}\n                  defaultValue={d.amount}\n                  value={d.amount || undefined}\n                  min=\"0\"\n                  max={Number(amount) + 1}\n                  // value={isUpdating !== d.no ? d.amount : undefined}\n                  onFocus={() => {\n                    setIsUpdating(d.no);\n                  }}\n                  onInput={e => {\n                    updateAmount(d.no, e.target.value);\n                  }}\n                  type=\"number\"\n                />\n              </div>\n              {installments >=2 && <div className=\"col-sm-2 d-flex align-items-center\">\n                <i\n                  className=\"fa fa-remove cursor-pointer\"\n                  onClick={() => (paymentPlan.length > 1 ? updatePlan(d.no) : {})}\n                />\n              </div>}\n            </div>\n          ))}\n        </div>\n        <div className=\"mt-3\">\n          <Button disabled={disableAdd} onClick={addNewItem} className=\"mr-2\">\n            Add New\n          </Button>\n          <Button disabled={disableSave} onClick={savePlan}>\n            Save Plan\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  const resetPlan = () => {\n    setShowPlan(false);\n    setStartDate(\"\");\n    setInstallmentInterval(\"\");\n    setInstallments(\"\");\n    setIsUpdating(false);\n    setTotalError(false);\n    setEditPlan && setEditPlan(null);\n  };\n\n  const submitPaymentPlan = () => {\n    const requestObject = {\n      supplier_id: supplierId,\n      invoices: invoiceIds,\n      installments: paymentPlan.map(d => ({\n        date: moment(d.date).format(\"MM/DD/YYYY\"),\n        amount: Number(d.amount).toFixed(2)\n      })),\n      is_payment_plan: true\n    };\n\n    instance.post(`paymentplan`, { ...requestObject }).then(response => {\n      getPaymentPlan(true);\n      onHide();\n      resetPlan();\n      props.setactiveKey && props.setactiveKey(\"paymentPlan\");\n      localStorage.setItem(\"refresh_reports\", true)\n    });\n  };\n\n  const updateSubmitPlan = () => {\n    const selectedInvoices = invoiceDropdownData.filter(d => d.isSelected).map(d => d.id);\n    const invoicesAdded = selectedInvoices.filter(d => !prevData.invoices.includes(d));\n    const removedInvoices = prevData.invoices.filter(d => selectedInvoices.indexOf(d) === -1);\n    const requestObject = {\n      installments: {\n        add: paymentPlan\n          .filter(d => d && !d.id)\n          .map(d => ({\n            amount: Number(d.amount).toFixed(2),\n            date: moment(d.date).format(\"MM/DD/YYYY\")\n          })),\n        edit: paymentPlan\n          .filter(d => d && d.id)\n          .map(d => ({\n            id: d.id,\n            amount: Number(d.amount).toFixed(2),\n            date: moment(d.date).format(\"MM/DD/YYYY\")\n          })),\n        delete: removedPlanId\n      },\n      invoices: {\n        add: invoicesAdded,\n        delete: removedInvoices\n      },\n      is_payment_plan: true\n    };\n    instance.patch(`paymentplan?id=${prevData.id}`, { ...requestObject }).then(response => {\n      getPaymentPlan(true);\n      onHide();\n      resetPlan();\n      localStorage.setItem(\"refresh_reports\", true)\n    });\n  };\n\n  return (\n    <Modal\n      size=\"lg\"\n      backdrop=\"static\"\n      show={show}\n      onHide={() => {\n        onHide();\n        resetPlan();\n      }}\n      className=\"mt-4\"\n    >\n      <Modal.Header closeButton>\n        <strong>{get(prevData, \"id\", \"\") ? \"Update Payment Plan\" : \"Add Payment Plan\"}</strong>\n      </Modal.Header>\n      <Modal.Body style={{ \"max-height\": \"calc(100vh - 210px)\", \"overflow-y\": \"auto\" }}>\n        {!showPlan ? (\n          <React.Fragment>\n            <div className=\"row mb-2\">\n              <div className=\"col-sm-4 d-flex align-items-center\">\n                <strong>Invoices:</strong>\n              </div>\n              <div className=\"col-sm-8\">\n                {invoices.map((d, i) => (\n                  <span>\n                    <Link to={`/payables/${d.id}`} target=\"_blank\">\n                      {d.invoice_number}\n                    </Link>\n                    {i !== invoices.length - 1 && \",\"}{\" \"}\n                  </span>\n                ))}\n              </div>\n            </div>\n            <div className=\"row mb-2\">\n              <div className=\"col-sm-4 d-flex align-items-center\">\n                <strong>Total Amount:</strong>\n              </div>\n              <div className=\"col-sm-8\">{getFormattedNumber(amount.toFixed(2))}</div>\n            </div>\n            <div className=\"row mb-2\">\n              <div className=\"col-sm-4  d-flex align-items-center\">\n                <strong>Start on:</strong>\n              </div>\n              <div className=\"col-sm-8 single-date-picker\">\n                <SingleDatePicker\n                  disabled={showPlan}\n                  labelFormat=\"MMM DD, YYYY\"\n                  getSelectedDates={(date) => setStartDate(date.format(\"YYYY-MM-DD\"))}\n                />\n              </div>\n            </div>\n            <div className=\"row mb-2\">\n              <div className=\"col-sm-4  d-flex align-items-center\">\n                <strong>Installment amount:</strong>\n              </div>\n              <div className=\"col-sm-8\">\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max={Number(amount) + 1}\n                  className=\"form-control\"\n                  disabled={showPlan}\n                  onInput={e => setperMonthAmount(Number(e.target.value))}\n                />\n              </div>\n              {\n              /* \n              // keeping for future ref\n              <div className=\"col-sm-4  d-flex align-items-center\">\n                <strong>No of installments:</strong>\n              </div>\n              <div className=\"col-sm-8\">\n                <input\n                  min=\"1\"\n                  max=\"100\"\n                  className=\"form-control\"\n                  disabled={showPlan}\n                  onInput={e => setInstallments(Number(e.target.value))}\n                  type=\"number\"\n                />\n              </div> \n              */}\n            </div>\n            <div className=\"row mb-4\">\n              <div className=\"col-sm-4  d-flex align-items-center\">\n                <strong>Days between installments:</strong>\n              </div>\n              <div className=\"col-sm-8\">\n                <input\n                  min=\"1\"\n                  max=\"365\"\n                  className=\"form-control\"\n                  disabled={showPlan}\n                  onInput={e => setInstallmentInterval(Number(e.target.value))}\n                  type=\"number\"\n                />\n              </div>\n            </div>\n            <div>\n              <Button\n                disabled={!perMonthAmount || !installmentInterval || !startDate}\n                onClick={() => generatePaymentPlan()}\n              >\n                {showPlan ? \"Regenerate Plan\" : \"Generate Plan\"}\n              </Button>\n            </div>\n          </React.Fragment>\n        ) : (\n          renderPaymentPlan()\n        )}\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default PaymentPlanModal;\n","import React, { useEffect, useState } from \"react\";\nimport XAxisTick from \"components/Recharts/XAxisTick\";\nimport CustomToolTip from \"components/Recharts/CustomTooltip\";\nimport { handleAPIError } from \"handlers/setters\";\nimport get from \"lodash/get\";\nimport moment from \"moment\";\nimport { Bar, BarChart, Legend, Tooltip, XAxis, YAxis, ResponsiveContainer } from \"recharts\";\nimport { getShortNumber } from \"utils\";\nimport { instanceWithRetry } from \"../../actions/axiosInstance\";\nimport { GetXLabelObjects } from \"../../utils/graphDateFormat\";\n\nexport class CustomChart extends React.PureComponent {\n  render() {\n    const { data, isLoading } = this.props;\n    return (\n      <div>\n        <ResponsiveContainer height={300} width=\"100%\">\n          <BarChart\n            height={300}\n            data={data}\n          >\n            {/* <CartesianGrid /> */}\n            <XAxis tick={<XAxisTick />} dataKey=\"text\" />\n            <YAxis tickFormatter={tick => getShortNumber(tick)} />\n            <Tooltip cursor={false} content={<CustomToolTip />} />\n            <Legend />\n            <Bar dataKey=\"low\" name=\"Low\" stackId=\"a\" fill=\"#9FD85F\" />\n            <Bar dataKey=\"medium\" name=\"Medium\" stackId=\"a\" fill=\"#F9C965\" />\n            <Bar dataKey=\"high\" name=\"High\" stackId=\"a\" fill=\"#F07C3A\" />\n            <Bar dataKey=\"critical\" name=\"Critical\" stackId=\"a\" fill=\"#EE5D5B\" />\n          </BarChart>\n        </ResponsiveContainer>\n        {\n          isLoading ?\n            <div className=\"graph-loader\">\n              <div className=\"spinner-border\" />\n            </div>\n            : null\n        }\n      </div>\n    );\n  }\n}\n\nfunction VendorGraph(props) {\n  const [selectedPaytab, setselectedPaytab] = useState(\"30days\"); //\n  const [apiData, setapiData] = useState([]);\n  const [startDate, setStartDate] = useState(props.startDate);\n  const [endDate, setEndDate] = useState(props.endDate);\n  const [isFetching, setIsFetching] = useState(true);\n\n  useEffect(() => {\n    let criticaldone, highdone, mediumdone, lowdone;\n\n    // critical\n    let xAxisLavel = GetXLabelObjects(startDate, endDate, selectedPaytab);\n    let DATA = xAxisLavel;\n    const allCriticalPromises = [];\n    xAxisLavel.forEach((x, i) => {\n      allCriticalPromises.push(\n        instanceWithRetry.get(`apinvoice/total?status=all&category=1&from_date='${x.start}'&to_date='${x.end}'`)\n      );\n    });\n\n    setIsFetching(true);\n\n    Promise.all(allCriticalPromises)\n      .then(res => {\n        DATA = DATA.map((x, i) => ({ ...x, critical: get(res[i], `data.total`, 0) }));\n        criticaldone = true;\n        criticaldone && highdone && mediumdone && lowdone && setapiData(DATA);\n        setIsFetching(false);\n      })\n      .catch(e => handleAPIError(e));\n\n    // high\n    const allHighPromises = [];\n    xAxisLavel.forEach((x, i) => {\n      allHighPromises.push(\n        instanceWithRetry.get(`apinvoice/total?status=all&category=2&from_date='${x.start}'&to_date='${x.end}'`)\n      );\n    });\n\n    Promise.all(allHighPromises)\n      .then(res => {\n        DATA = DATA.map((x, i) => ({ ...x, high: get(res[i], `data.total`, 0) }));\n        highdone = true;\n        criticaldone && highdone && mediumdone && lowdone && setapiData(DATA);\n        setIsFetching(false);\n      })\n      .catch(e => handleAPIError(e));\n\n    // medium\n    const allMediumPromises = [];\n    xAxisLavel.forEach((x, i) => {\n      allMediumPromises.push(\n        instanceWithRetry.get(`apinvoice/total?status=all&category=3&from_date='${x.start}'&to_date='${x.end}'`)\n      );\n    });\n\n    Promise.all(allMediumPromises)\n      .then(res => {\n        DATA = DATA.map((x, i) => ({ ...x, medium: get(res[i], `data.total`, 0) }));\n        mediumdone = true;\n        criticaldone && highdone && mediumdone && lowdone && setapiData(DATA);\n        setIsFetching(false);\n      })\n      .catch(e => handleAPIError(e));\n\n    // low\n    const allLowPromises = [];\n    xAxisLavel.forEach((x, i) => {\n      allLowPromises.push(\n        instanceWithRetry.get(`apinvoice/total?status=all&category=4&from_date='${x.start}'&to_date='${x.end}'`)\n      );\n    });\n\n    Promise.all(allLowPromises)\n      .then(res => {\n        DATA = DATA.map((x, i) => ({ ...x, low: get(res[i], `data.total`, 0) }));\n        lowdone = true;\n        criticaldone && highdone && mediumdone && lowdone && setapiData(DATA);\n        setIsFetching(false);\n      })\n      .catch(e => handleAPIError(e));\n  }, [endDate, selectedPaytab, startDate]);\n\n  function switchSelectedTab(tab) {\n    switch (tab) {\n      case \"30days\":\n        setStartDate(\n          moment\n            ()\n            .subtract(30, \"days\")\n            .format(\"MM/DD/YYYY\")\n        );\n        break;\n      case \"6months\":\n        setStartDate(\n          moment\n            ()\n            .subtract(3, \"months\")\n            .format(\"MM/DD/YYYY\")\n        );\n        break;\n      case \"1year\":\n        setStartDate(\n          moment\n            ()\n            .subtract(1, \"years\")\n            .format(\"MM/DD/YYYY\")\n        );\n        break;\n      default:\n        break;\n    }\n    setselectedPaytab(tab);\n  }\n\n  return (\n    <div class=\"col-md-12\">\n      <div class=\"graphbg\">\n        {props.setactiveKey && <div class=\"custchattabhead\">By vendors classification</div>}\n        <div class=\"custchattab1\">\n          <span\n            onClick={() => switchSelectedTab(\"1year\")}\n            className={`cursour-pointer ${selectedPaytab === \"1year\" && \"activec\"}`}\n          >\n            Year\n          </span>\n          <span\n            onClick={() => switchSelectedTab(\"6months\")}\n            className={`cursour-pointer ${selectedPaytab === \"6months\" && \"activec\"}`}\n          >\n            Quarter\n          </span>\n          <span\n            onClick={() => switchSelectedTab(\"30days\")}\n            className={`cursour-pointer ${selectedPaytab === \"30days\" && \"activec\"}`}\n          >\n            Month\n          </span>\n        </div>\n\n        <div\n          id=\"container1\"\n          // style={{ minWidth: \"310px\", height: \"400px\", margin: \"0px auto\", width: \"100%\", overflow: \"hidden\" }}\n          data-highcharts-chart={0}\n          className={props.setactiveKey && \"cursour-pointer\"}\n          onClick={() => {\n            const { setactiveKey } = props;\n            setactiveKey && setactiveKey(\"vendorSpending\");\n          }}\n        >\n          <CustomChart data={apiData} isLoading={isFetching} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default VendorGraph;\n","import XAxisTick from \"components/Recharts/XAxisTick\";\nimport CustomToolTip from \"components/Recharts/CustomTooltip\";\nimport { handleAPIError } from \"handlers/setters\";\nimport get from \"lodash/get\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, BarChart, Legend, Tooltip, XAxis, YAxis, ResponsiveContainer } from \"recharts\";\nimport { getShortNumber } from \"utils\";\nimport { instanceWithRetry } from \"../../actions/axiosInstance\";\nimport { GetXLabelObjects } from \"../../utils/graphDateFormat\";\n\nexport class CustomChart extends React.PureComponent {\n  render() {\n    const { data, isLoading } = this.props;\n    return (\n      <div>\n        <ResponsiveContainer height={300}>\n          <BarChart\n            height={300}\n            data={data}\n            margin={{\n              // top: 20,\n              // right: 50\n              // left: 30\n              // bottom: 5\n            }}\n          >\n            {/* <CartesianGrid /> */}\n            <XAxis tick={<XAxisTick />} dataKey=\"text\" />\n            <YAxis tickFormatter={tick => getShortNumber(tick)} />\n            <Tooltip cursor={false} content={<CustomToolTip />} />\n            <Legend />\n            <Bar dataKey=\"paid\" name=\"Paid\" stackId=\"a\" fill=\"#7CB5EC\" />\n            <Bar dataKey=\"l30\" name=\"< 30 days\" stackId=\"a\" fill=\"#75CF5B\" />\n            <Bar dataKey=\"g30\" name=\"> 30 days\" stackId=\"a\" fill=\"#F4A160\" />\n          </BarChart>\n        </ResponsiveContainer>\n        {\n          isLoading ?\n            <div className=\"graph-loader\">\n              <div className=\"spinner-border\" />\n            </div>\n            : null\n        }\n      </div>\n    );\n  }\n}\n\nfunction APInvoiceGraph(props) {\n  const [averagePaymentProjectionData, setAveragePaymentProjectionData] = useState([]);\n  const [selectedPaytab, setselectedPaytab] = useState(\"30days\"); //\n  const [startDate, setStartDate] = useState(props.startDate);\n  const [endDate, setEndDate] = useState(props.endDate);\n  const [currentDate, setCurrentDate] = useState(moment().format(\"MM/DD/YYYY\"));\n  const [isFetching, setIsFetching] = useState(true);\n\n  useEffect(() => {\n    const getAveragePaymentGraphData = (startDate, endDate) => {\n      let l30done, g30done, paiddone;\n\n      // < 30 days\n      let xAxisLavel = GetXLabelObjects(startDate, endDate, selectedPaytab);\n      let DATA = xAxisLavel;\n      setIsFetching(true);\n      const allLess30Promises = [];\n      xAxisLavel.forEach((x, i) => {\n        allLess30Promises.push(\n          instanceWithRetry.get(`apinvoice/aging/total?status=all&category=2&from_date='${x.start}'&to_date='${x.end}'`)\n        );\n      });\n\n      Promise.all(allLess30Promises)\n        .then(res => {\n          DATA = DATA.map((x, i) => ({ ...x, l30: get(res[i], `data.total`, 0) }));\n          l30done = true;\n          l30done && g30done && paiddone && setAveragePaymentProjectionData(DATA);\n          setIsFetching(false);\n        })\n        .catch(e => handleAPIError(e));\n\n      // > 30 days\n      const allGreater30Promises = [];\n      xAxisLavel.forEach((x, i) => {\n        allGreater30Promises.push(\n          instanceWithRetry.get(`apinvoice/aging/total?status=all&category=4&from_date='${x.start}'&to_date='${x.end}'`)\n        );\n      });\n\n      Promise.all(allGreater30Promises)\n        .then(res => {\n          DATA = DATA.map((x, i) => ({ ...x, g30: get(res[i], `data.total`, 0) }));\n          g30done = true;\n          l30done && g30done && paiddone && setAveragePaymentProjectionData(DATA);\n          setIsFetching(false);\n        })\n        .catch(e => handleAPIError(e));\n\n      // paid\n      const allPaidPromises = [];\n      xAxisLavel.forEach((x, i) => {\n        allPaidPromises.push(\n          instanceWithRetry.get(`apinvoice/aging/total?status=closed&from_date='${x.start}'&to_date='${x.end}'`)\n        );\n      });\n\n      Promise.all(allPaidPromises)\n        .then(res => {\n          DATA = DATA.map((x, i) => ({ ...x, paid: get(res[i], `data.total`, 0) }));\n          paiddone = true;\n          l30done && g30done && paiddone && setAveragePaymentProjectionData(DATA);\n          setIsFetching(false);\n        })\n        .catch(e => handleAPIError(e));\n    };\n\n    getAveragePaymentGraphData(startDate, endDate);\n  }, [startDate, endDate, selectedPaytab, currentDate]);\n\n  function switchSelectedTab(tab) {\n    switch (tab) {\n      case \"30days\":\n        setStartDate(\n          moment\n            ()\n            .subtract(30, \"days\")\n            .format(\"MM/DD/YYYY\")\n        );\n        break;\n      case \"6months\":\n        setStartDate(\n          moment\n            ()\n            .subtract(3, \"months\")\n            .format(\"MM/DD/YYYY\")\n        );\n        break;\n      case \"1year\":\n        setStartDate(\n          moment\n            ()\n            .subtract(1, \"years\")\n            .format(\"MM/DD/YYYY\")\n        );\n        break;\n      default:\n        break;\n    }\n    setselectedPaytab(tab);\n  }\n\n  return (\n    <div class=\"col-md-12\">\n      <div\n        class=\"graphbg\"\n        >\n        {props.setactiveKey && <div class=\"custchattabhead\">Total AP spend</div>}\n        <div class=\"custchattab1\">\n          <span\n            onClick={() => switchSelectedTab(\"1year\")}\n            className={`cursour-pointer ${selectedPaytab === \"1year\" && \"activec\"}`}\n          >\n            Year\n          </span>\n          <span\n            onClick={() => switchSelectedTab(\"6months\")}\n            className={`cursour-pointer ${selectedPaytab === \"6months\" && \"activec\"}`}\n          >\n            Quarter\n          </span>\n          <span\n            onClick={() => switchSelectedTab(\"30days\")}\n            className={`cursour-pointer ${selectedPaytab === \"30days\" && \"activec\"}`}\n          >\n            Month\n          </span>\n        </div>\n\n        <div\n          id=\"container1\"\n          // style={{ minWidth: \"310px\", height: \"400px\", margin: \"0px auto\", width: \"100%\", overflow: \"hidden\" }}\n          data-highcharts-chart={0}\n          className={props.setactiveKey && \"cursour-pointer\"}\n          onClick={() => {\n            const { setactiveKey } = props;\n            setactiveKey && setactiveKey(\"apinvoice\");\n          }}\n          >\n          <CustomChart data={averagePaymentProjectionData} isLoading={isFetching} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default APInvoiceGraph;\n","import XAxisTick from \"components/Recharts/XAxisTick\";\nimport CustomToolTip from \"components/Recharts/CustomTooltip\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { Area, AreaChart, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\nimport { handleAPIError } from \"handlers/setters\";\nimport CustomSpinner from \"components/Spinner\";\nimport { getShortNumber } from \"utils\";\nimport { GetXLabelObjects } from \"utils/graphDateFormat\";\nimport { instanceWithRetry } from \"../../actions/axiosInstance\";\n\nconst colorArray = [\"#2B7EF6\", \"#7CA82D\", \"#EF853A\", \"#DB504D\", \"#424348\", \"#90ED7D\", \"#3C861F\", \"#F9D7E0\"];\nclass CustomChart extends React.PureComponent {\n  render() {\n    const { data, categoryItem, isLoading } = this.props;\n    return (\n      <div style={{ height: 300 }}>\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <AreaChart\n            height={300}\n            data={data}\n            margin={{\n              left: 0,\n              right: 30\n            }}\n          >\n            <XAxis tick={<XAxisTick />}dataKey=\"text\" margin={{ bottom: 50 }} />\n            <YAxis tickFormatter={tick => getShortNumber(tick)} />\n            <Tooltip cursor={false} content={<CustomToolTip />} />\n            <Legend />\n            {\n              categoryItem.map((cat, i) => (\n                <Area type=\"monotone\" dataKey={cat.name} name={cat.name} stackId=\"1\" stroke={colorArray[i%8]} fill={colorArray[i%8]} />\n              ))\n            }\n          </AreaChart>\n        </ResponsiveContainer>\n        {\n          isLoading ?\n          <div className=\"graph-loader\">\n              <div className=\"spinner-border\" />\n          </div>\n          : null\n        }\n      </div>\n    );\n  }\n}\n\nfunction PayrollGraph(props) {\n  const [averagePaymentProjectionData, setAveragePaymentProjectionData] = useState([]);\n  const [selectedPaytab, setselectedPaytab] = useState(\"30days\"); //\n  const [startDate, setStartDate] = useState(props.startDate);\n  const [vendorCategoryList, setVendorCategoryList] = useState([]);\n  const [endDate, setEndDate] = useState(props.endDate);\n  const [isFetching, setIsFetching] = useState(true);\n\n  let setCatDetail = [];\n\n  useEffect(() => {\n    getVendorCategory();\n    setGraphData();\n  }, [startDate, endDate, selectedPaytab]);\n\n  const setGraphData = () => {\n    let XLabels = GetXLabelObjects(startDate, endDate, selectedPaytab, true);\n    selectedPaytab === \"30days\" && XLabels.reverse();\n    if (setCatDetail.length) {\n      const catDetail = setCatDetail.map(d => {\n        return XLabels.map((date, i) => {\n          if(d.data[i] !== 0) {\n            return {\n              ...date,\n              [d.categoryName]: d.data[i]\n            }\n          }\n        })\n      }).reduce((r, a) => {\n        a.forEach((b, i) => {\n          r[i] = r[i] ? r[i].concat(b) : [b]\n        });\n        return r;\n      }, []).map(data => data.reduce((r, a) => ({ ...r, ...a })));\n      setAveragePaymentProjectionData(catDetail);\n    }\n  }\n\n  const getVendorCategoryData = (dateRanges, category, categoryList) => {\n    const allPromises = [];\n    for (let i = 0; i < dateRanges.length; i++) {\n      allPromises.push(\n        instanceWithRetry.get(\n          `apinvoice/total?payment_plan=exclude&date_type=recommendation&to_date='${dateRanges[i].end}'&from_date='${dateRanges[i].start}'&status=closed&vendor_category_id=${category.id}`\n        )\n      );\n    }\n    Promise.all(allPromises)\n      .then(res => {\n        const resCategoryGraph = res.map(item => item.data.total ? Math.round(item.data.total) : 0);\n        setCatDetail.push({ categoryName: category.name, data: resCategoryGraph});\n        if(setCatDetail.length === categoryList.length) {\n          setIsFetching(false);\n          setGraphData();\n        }\n      })\n      .catch(e => handleAPIError(e));\n  }\n\n  const getVendorCategory = () => {\n    let XLabels = GetXLabelObjects(startDate, endDate, selectedPaytab, true);\n    selectedPaytab === \"30days\" && XLabels.reverse();\n    setIsFetching(true);\n    instanceWithRetry\n      .get(\"vendorcategory?per_page=1000\")\n      .then(res => {\n        const categoryList = res.data.result.filter(item => item.is_selected).concat({ id: 0, name: \"Others\" });\n        setVendorCategoryList(categoryList);\n        categoryList.forEach(item =>  getVendorCategoryData(XLabels, item, categoryList))\n      })\n      .catch(e => handleAPIError(e));\n  };\n\n  function switchSelectedTab(tab) {\n    switch (tab) {\n      case \"30days\":\n        setStartDate(\n          moment()\n            .format(\"MM/DD/YYYY\")\n        );\n        break;\n      case \"6months\":\n        setStartDate(\n          moment()\n            .subtract(3, \"months\")\n            .format(\"MM/DD/YYYY\")\n        );\n        break;\n      case \"1year\":\n        setStartDate(\n          moment()\n            .subtract(1, \"years\")\n            .format(\"MM/DD/YYYY\")\n        );\n        break;\n      default:\n        break;\n    }\n    setselectedPaytab(tab);\n  }\n\n  return (\n    <div class=\"col-md-12\">\n      <div class=\"graphbg\">\n        {props.setactiveKey && <div class=\"custchattabhead\">Spend Categories</div>}\n        <div class=\"custchattab1\">\n          <span\n            onClick={() => switchSelectedTab(\"1year\")}\n            className={`cursour-pointer ${selectedPaytab === \"1year\" && \"activec\"}`}\n          >\n            Year\n          </span>\n          <span\n            onClick={() => switchSelectedTab(\"6months\")}\n            className={`cursour-pointer ${selectedPaytab === \"6months\" && \"activec\"}`}\n          >\n            Quarter\n          </span>\n          <span\n            onClick={() => switchSelectedTab(\"30days\")}\n            className={`cursour-pointer ${selectedPaytab === \"30days\" && \"activec\"}`}\n          >\n            Month\n          </span>\n        </div>\n\n        <div\n          id=\"container1\"\n          style={{ minWidth: \"310px\", height: \"400px\", margin: \"0px auto\", width: \"100%\", overflow: \"hidden\" }}\n          data-highcharts-chart={0}\n          className={props.setactiveKey && \"cursour-pointer\"}\n          onClick={() => {\n            const { setactiveKey } = props;\n            setactiveKey && setactiveKey(\"payroll\");\n          }}\n          >\n          <CustomChart data={averagePaymentProjectionData} categoryItem={vendorCategoryList} isLoading={isFetching} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PayrollGraph;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { instanceWithRetry } from \"actions/axiosInstance\";\nimport \"assets/css/paymentdetails.css\";\nimport PieChartPlaceholder from \"components/Recharts/Placeholders/Piechart\";\nimport get from \"lodash/get\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { getFAWC, getShortNumber } from \"utils\";\nimport { betweenDays } from \"utils/dates\";\nimport CustomSpinner from \"components/Spinner\";\nimport { Cell, Label, Pie, PieChart, ResponsiveContainer, Sector, Legend, Tooltip } from \"recharts\";\nimport { useWindowSize } from \"handlers/getters\";\nimport CustomToolTip from \"components/Recharts/CustomTooltip\";\nimport PieChartTooltip from \"components/Recharts/PieChartTooltip\";\n\nconst renderActiveShape = (props) => {\n  const { cx, cy, innerRadius, outerRadius, startAngle, endAngle, fill } = props;\n\n  return (\n    <g>\n      <Sector\n        className=\"cursour-pointer\"\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius + 5}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n    </g>\n  );\n};\n\nconst DonutChart = ({ data = [], vendorData, onRecordClick, total = 0, selectedSection, setactiveKey, fullsize }) => {\n  const [activeindex, setactiveindex] = useState(null);\n  const [width, height] = useWindowSize();\n  \n  useEffect(() => {\n    (get(selectedSection, \"dataindex\", null) || get(selectedSection, \"dataindex\", null) === 0) &&\n      setactiveindex(get(selectedSection, \"dataindex\", null));\n  }, [selectedSection]);\n\n  function onPieEnter(data, index) {\n    !setactiveKey && setactiveindex(index);\n  }\n  function onPieLeave(data, index) {\n    !setactiveKey && setactiveindex(null || get(selectedSection, \"dataindex\", null));\n  }\n\n  return (\n    total &&\n    (width > 1260 || fullsize ? (\n      <ResponsiveContainer height={320} width={320}>\n        <PieChart>\n          <Pie\n            animationDuration={1000}\n            activeIndex={activeindex}\n            activeShape={renderActiveShape}\n            data={data}\n            innerRadius={60}\n            outerRadius={140}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            onClick={(e) => onRecordClick(e.payload.payload)}\n            onMouseEnter={onPieEnter}\n            onMouseLeave={onPieLeave}\n          >\n            <Label className=\"cursour-pointer\" width={30} position=\"center\" onClick={() => onRecordClick(null)}>\n              {`Total ${getShortNumber(total) || \"-\"}`}\n            </Label>\n            {data.map((entry, index) => (\n              <Cell key={entry} className=\"cursour-pointer\" fill={COLORS[entry.dataindex % COLORS.length]} />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    ) : (\n      <ResponsiveContainer height={320} width={320}>\n        <PieChart>\n          <Pie\n            animationDuration={1000}\n            activeIndex={activeindex}\n            activeShape={renderActiveShape}\n            data={data}\n            innerRadius={50}\n            outerRadius={120}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            onClick={(e) => onRecordClick(e.payload.payload)}\n            onMouseEnter={onPieEnter}\n            onMouseLeave={onPieLeave}\n            // label={(data) => {\n            //   return getShortNumber(data.value)\n            // }}\n          >\n            <Label className=\"cursour-pointer\" width={30} position=\"center\" onClick={() => onRecordClick(null)}>\n              {`Total ${getShortNumber(total) || \"-\"}`}\n            </Label>\n            {data.map((entry, index) => (\n              <Cell key={entry} className=\"cursour-pointer\" fill={COLORS[entry.dataindex % COLORS.length]} />\n            ))}\n          </Pie>\n          <Legend align=\"center\" verticalAlign=\"bottom\" />\n          {!fullsize && width <= 1260 && <Tooltip content={<PieChartTooltip />} />}\n        </PieChart>\n      </ResponsiveContainer>\n    ))\n  );\n};\n\nconst COLORS = [\"#2B7EF6\", \"#7CA82D\", \"#EF853A\", \"#DB504D\", \"#424348\", \"#90ED7D\", \"#3C861F\", \"#F9D7E0\"];\n\nconst dummyData = [\n  {\n    name: \"Current\",\n    dataindex: 0,\n    from_date: moment().format(\"MM/DD/YYYY\"),\n    // to_date: \"\",\n    is_future: true,\n    to_date: moment().add(\"days\", 365).format(\"MM/DD/YYYY\"),\n    color: COLORS[0],\n  },\n  {\n    name: \"1-30 Days\",\n    dataindex: 1,\n    from_date: moment().subtract(\"days\", 30).format(\"MM/DD/YYYY\"),\n    to_date: moment().subtract(\"days\", 1).format(\"MM/DD/YYYY\"),\n    color: COLORS[1],\n  },\n  {\n    name: \"31-60 days\",\n    dataindex: 2,\n    from_date: moment().subtract(\"days\", 60).format(\"MM/DD/YYYY\"),\n    to_date: moment().subtract(\"days\", 31).format(\"MM/DD/YYYY\"),\n    color: COLORS[2],\n  },\n  {\n    name: \"61-90 days\",\n    dataindex: 3,\n    from_date: moment().subtract(\"days\", 90).format(\"MM/DD/YYYY\"),\n    to_date: moment().subtract(\"days\", 61).format(\"MM/DD/YYYY\"),\n    color: COLORS[3],\n  },\n  {\n    name: \"> 90 days\",\n    dataindex: 4,\n    // from_date: \"\",\n    is_past: true,\n    from_date: moment().subtract(\"days\", 365).format(\"MM/DD/YYYY\"),\n    to_date: moment().subtract(\"days\", 91).format(\"MM/DD/YYYY\"),\n    color: COLORS[4],\n  },\n];\n\nlet PREV_URL = \"\";\n\nconst AgingChart = (props) => {\n  const { originalstartDate, originalendDate } = props;\n  const { showgraphs = true, setactiveKey, setstartDate, setendDate, setpage, fullsize } = props;\n  const [selectedSection, setselectedSection] = useState(null);\n  const [chartData, setchartData] = useState([]);\n  const [total, settotal] = useState(null);\n  const [showChart, setshowChart] = useState(false);\n  const [width, height] = useWindowSize();\n\n  let timer = null;\n\n  useEffect(() => {\n    if (!showgraphs || !originalstartDate || !originalendDate) {\n      return;\n    }\n    timer && clearTimeout(timer);\n    timer = setTimeout(getData, 200);\n    return () => {\n      PREV_URL = \"\";\n    };\n  }, [originalstartDate, originalendDate, showgraphs]);\n\n  function getData() {\n    const total_url = `apinvoice/total?status=open&from_date=${originalstartDate}&to_date=${originalendDate}`;\n    if (total_url === PREV_URL) {\n      return;\n    }\n    setshowChart(false);\n    settotal(null);\n    setchartData([]);\n    let apis = [];\n    instanceWithRetry.get(total_url).then((resp) => {\n      PREV_URL = total_url;\n      settotal(get(resp, \"data.total\", \"\"));\n      // setchartData([]);\n      // setshowChart(false);\n      dummyData.forEach((x, i) => {\n        x.is_past && (x.from_date = originalstartDate);\n        x.is_future && (x.to_date = originalendDate);\n        let days_to_add = betweenDays({\n          startdate: moment(x.from_date, \"MM/DD/YYYY\"),\n          enddate: moment(originalstartDate, \"MM/DD/YYYY\"),\n        });\n        days_to_add = days_to_add > 0 ? days_to_add : 0;\n\n        const from_end = betweenDays({\n          startdate: moment(x.from_date, \"MM/DD/YYYY\"),\n          enddate: moment(originalendDate, \"MM/DD/YYYY\"),\n        });\n\n        const to_start = betweenDays({\n          startdate: moment(originalstartDate, \"MM/DD/YYYY\"),\n          enddate: moment(x.to_date, \"MM/DD/YYYY\"),\n        });\n\n        let days_to_subtract = betweenDays({\n          startdate: moment(originalendDate, \"MM/DD/YYYY\"),\n          enddate: moment(x.to_date, \"MM/DD/YYYY\"),\n        });\n        days_to_subtract = days_to_subtract > 0 ? days_to_subtract : 0;\n\n        if (!(from_end < 0 || to_start < 0)) {\n          const updated_from_date = moment(x.from_date, \"MM/DD/YYYY\").add(\"days\", days_to_add).format(\"MM/DD/YYYY\");\n          // const is_past = betweenDays({ startdate: moment(), enddate: moment(updated_from_date) }) <= 0;\n          const updated_to_date = moment(x.to_date, \"MM/DD/YYYY\")\n            .subtract(\"days\", days_to_subtract)\n            .format(\"MM/DD/YYYY\");\n          // const is_future = betweenDays({ startdate: moment(updated_to_date), enddate: moment() }) <= 0;\n          apis.push({\n            ...x,\n            from_date: x.is_past ? originalstartDate : updated_from_date,\n            to_date: x.is_future ? originalendDate : updated_to_date,\n          });\n        }\n      });\n\n      const toMoment = (date) => moment(date, \"MM/DD/YYYY\");\n\n      // filter\n      // apis = apis.filter(\n      //   (x) =>\n      //     (x.dataindex === 0 ||\n      //     x.dataindex === 4 )\n\n      // );\n      Promise.all(\n        apis.map((x) =>\n          instanceWithRetry.get(\n            `apinvoice/total?status=open${x.from_date && `&from_date=${x.from_date}`}${\n              x.to_date && `&to_date=${x.to_date}`\n            }`\n          )\n        )\n      )\n        .then((resp) => {\n          setchartData(\n            apis.map((x, i) => ({\n              ...x,\n              value: get(resp, `[${i}].data.total`, 0),\n              color: COLORS[i % COLORS.length],\n              name: x.is_future\n                ? fullsize\n                  ? `${\n                      moment(x.from_date, \"MM/DD/YYYY\").format(\"MM/DD/YYYY\") === moment().format(\"MM/DD/YYYY\")\n                        ? \"Today\"\n                        : moment(x.from_date, \"MM/DD/YYYY\").format(\"MMM DD, Y\")\n                    } ${\n                      moment(x.to_date).format(\"MM/DD/YY\") !== moment().format(\"MM/DD/YY\")\n                        ? `- ${moment(x.to_date).format(\"MMM DD, Y\")}`\n                        : \"\"\n                    }`\n                  : \"Due\"\n                : x.is_past\n                ? x.name\n                : `Past ${betweenDays({ startdate: moment(x.to_date), enddate: moment() })} - ${betweenDays({\n                    startdate: moment(x.from_date),\n                    enddate: moment(),\n                  })} Days `,\n            }))\n          );\n          setshowChart(true);\n          setselectedSection(null);\n        })\n        .catch((e) => {\n          setshowChart(true);\n        });\n    });\n  }\n\n  function updateSection(from, to, sec) {\n    if (setstartDate && fullsize) {\n      props.setstartDate(from);\n      props.setendDate(to);\n      props.setpage(1);\n      setselectedSection(sec);\n    }\n  }\n\n  return (\n    <div className=\"col-md-12\">\n      <div>\n        {!props.fullsize && <h1 className=\"custchattabhead\">AP aging</h1>}\n        <div className=\"table100 pt-1\">\n          <div class=\"custchattab1 text-center w-100\"></div>\n          <div\n            className={setactiveKey && \"cursour-pointer\"}\n            onClick={() => {\n              setactiveKey && setactiveKey(\"apaging\");\n            }}\n          >\n            {showChart ? (\n              total ? (\n                <div className=\"col-md-12 d-flex justify-content-center text-left\">\n                  <span className=\"ml-3\">\n                    <DonutChart\n                      onRecordClick={(record) => {\n                        updateSection(\n                          get(record, \"from_date\", originalstartDate),\n                          get(record, \"to_date\", originalendDate),\n                          record\n                        );\n                      }}\n                      data={chartData}\n                      total={total}\n                      selectedSection={selectedSection}\n                      setactiveKey={setactiveKey}\n                      fullsize={props.fullsize}\n                    />\n                  </span>\n                  {(width > 1260 || props.fullsize) && (\n                    <span className={`mt-4 ${fullsize ? \"ml-4\" : \"\"}`}>\n                      <div className=\"bg-light-grey ml-2 pl-3 py-2 px-1\">\n                        <span\n                          onClick={() => {\n                            updateSection(originalstartDate, originalendDate, null);\n                          }}\n                        >\n                          {`${moment(originalstartDate, \"MM/DD/YYYY\").format(\"MMM DD, Y\")} - ${moment(\n                            originalendDate,\n                            \"MM/DD/YYYY\"\n                          ).format(\"MMM DD, Y\")}`}\n                        </span>\n                      </div>\n                      {chartData.map((x, i) => (\n                        <div className=\"col-md-12 py-2 px-1 text-truncate\">\n                          <span\n                            className={`ml-1 mr-1 donutchart-legend-dot`}\n                            style={{\n                              backgroundColor: `${get(x, \"line-color\", COLORS[x.dataindex % 8])}`,\n                            }}\n                          />\n                          <span\n                            className=\"cursour-pointer\"\n                            onClick={() => {\n                              updateSection(x.from_date, x.to_date, x);\n                            }}\n                          >\n                            {`${get(x, \"name\", \"-\")} `} ({getFAWC(get(x, \"value\", 0))})\n                          </span>\n                        </div>\n                      ))}\n                    </span>\n                  )}\n                </div>\n              ) : (\n                <PieChartPlaceholder />\n              )\n            ) : (\n              <CustomSpinner />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AgingChart;\n","import React, { useEffect } from \"react\";\nimport moment from \"moment\";\nimport VendorGraph from \"./vendorSpendingGraph\";\nimport APInvoiceGraph from \"./apInvoiceGraph\";\nimport PayrollGraph from \"./payrollGraph\";\nimport Agingchart from \"./Agingchart\";\n\nexport const Graphs = (props) => {\n  const startDate = moment().subtract(30, \"days\").format(\"MM/DD/YYYY\");\n  const endDate = moment().format(\"MM/DD/YYYY\");\n  useEffect(() => {}, [startDate, endDate, props]);\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-md-6\" style={{ minWidth: \"310px\", height: 420, margin: \"0px auto\", overflow: \"hidden\" }}>\n          <VendorGraph {...props} />\n        </div>\n        <div className=\"col-md-6\" style={{ minWidth: \"310px\", height: 420, margin: \"0px auto\", overflow: \"hidden\" }}>\n          <APInvoiceGraph {...props} />\n        </div>\n      </div>\n      <div className=\"row my-3\">\n        <div className=\"col-md-6\" style={{ minWidth: \"310px\", height: 420, margin: \"0px auto\", overflow: \"hidden\" }}>\n          <Agingchart\n            {...props}\n            setstartDate={props.setstartDate}\n            setendDate={props.setendDate}\n            setpage={props.setpage}\n            resetFilter={props.resetFilter}\n            originalstartDate={props.originalstartDate}\n            originalendDate={props.originalendDate}\n          />\n        </div>\n        <div className=\"col-md-6\" style={{ minWidth: \"310px\", height: 420, margin: \"0px auto\", overflow: \"hidden\" }}>\n          <PayrollGraph {...props} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Graphs;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport Autocomplete from \"components/Autocomplete\";\nimport DateRangePicker from \"components/DateRangePicker\";\nimport ClickAwayListener from \"components/ClickAwayListener\";\nimport \"containers/dashboard/dashboard.css\";\nimport * as FileSaver from \"file-saver\";\nimport { handleAPIError } from \"handlers/setters\";\nimport debounce from \"lodash/debounce\";\nimport get from \"lodash/get\";\nimport uniqBy from \"lodash/uniqBy\";\nimport moment from \"moment\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Tabs, Tab } from \"react-bootstrap\";\nimport { CSVLink } from \"react-csv\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport ReactTable from \"react-table-v6\";\nimport { getFAWC, getShortNumber, convertDecimalNo } from \"utils\";\nimport * as XLSX from \"xlsx\";\nimport { instanceWithRetry } from \"../../actions/axiosInstance\";\nimport Graphs from \"./graph\";\nimport { betweenDays } from \"utils/dates\";\nimport VendorGraph from \"./vendorSpendingGraph\";\nimport APInvoiceGraph from \"./apInvoiceGraph\";\nimport Agingchart from \"./Agingchart\";\nimport PayrollGraph from \"./payrollGraph\";\n\nlet GLOBAL_URL = \"\";\nlet DATES_CHANGED = false;\nexport const VendorsList = ({ props, history, changeSelection }) => {\n  const [rows, setrows] = useState([]);\n  const [showFilter, setshowFilter] = useState(false);\n  const [vendorList, setvendorList] = useState([]);\n  const [selectedVendor, setselectedVendor] = useState();\n  const [showexport, setshowexport] = useState(false);\n  const [isVendorFetching, setisVendorFetching] = useState(false);\n  const [isFetching, setIsfetching] = useState(true);\n  const [loadVendorListing, setloadVendorListing] = useState(false);\n  const [startDate, setstartDate] = useState(moment().subtract(365, \"days\").format(\"MM/DD/YYYY\"));\n  const [originalstartDate, setoriginalstartDate] = useState(moment().subtract(365, \"days\").format(\"MM/DD/YYYY\"));\n  const [endDate, setendDate] = useState(moment().add(365, \"days\").format(\"MM/DD/YYYY\"));\n  const [originalendDate, setoriginalendDate] = useState(moment().add(365, \"days\").format(\"MM/DD/YYYY\"));\n  const [is_dateupdated_here, setis_dateupdated_here] = useState(false);\n  const [interval, setinterval] = useState(30);\n  const [exportedData, setExportedData] = useState([]);\n  const [page, setpage] = useState(null);\n  const [per_page, setper_page] = useState(20);\n  const [sort_by, setsort_by] = useState(\"total_amount_due\");\n  const [sort_order, setsort_order] = useState(\"desc\");\n  const [id, setid] = useState(\"\");\n  const [exporting, setexporting] = useState(false);\n  const [showgraphs, setshowgraphs] = useState(false);\n  const [activeKey, setactiveKey] = useState(localStorage.getItem(\"vendor_activeTab\"));\n  const Today = moment().format(\"MM/DD/YYYY\");\n  const Yesterday = moment().subtract(1, \"days\").format(\"MM/DD/YYYY\");\n  const csvRef = useRef(null);\n\n  const showTabs = activeKey && activeKey != \"null\";\n\n  useEffect(() => {\n    // set window at top\n    window.scrollTo(0, 0);\n    let filters = localStorage.getItem(\"vendorsFilters\");\n    if (filters) {\n      filters = filters\n        .split(\"&\")\n        .filter((x) => x)\n        .map((x) => x.split(\"=\"));\n      filters.forEach((filter) => {\n        filter[0] === \"per_page\" && setper_page(filter[1]);\n        filter[0] === \"sort_by\" && setsort_by(filter[1]);\n        filter[0] === \"sort_order\" && setsort_order(filter[1]);\n        filter[0] === \"id\" && setid(filter[1]);\n        filter[0] === \"from_date\" && setstartDate(filter[1]);\n        filter[0] === \"to_date\" && setendDate(filter[1]);\n        filter[0] === \"from_date\" && setoriginalstartDate(filter[1]);\n        filter[0] === \"to_date\" && setoriginalendDate(filter[1]);\n        filter[0] === \"page\" && setpage(filter[1]);\n      });\n    } else {\n      setpage(1);\n    }\n    return () => {\n      GLOBAL_URL = \"\";\n    };\n  }, []);\n\n  useEffect(() => {\n    if (showFilter || !page) {\n      return;\n    }\n    const _url = getURL();\n    getData(_url);\n    setshowgraphs(true);\n  }, [page, per_page, selectedVendor, showFilter, sort_by, sort_order, id, startDate, endDate]);\n\n  function getURL(pagination = true) {\n    let URL = `&status=open${pagination && `&page=${page}&per_page=${per_page}`}`;\n    if (get(selectedVendor, \"id\", id)) {\n      URL = URL + `&supplier_id=${get(selectedVendor, \"id\", id)}`;\n    } else {\n      startDate && (URL = URL + `&from_date=${startDate}`);\n      endDate && (URL = URL + `&to_date=${endDate}`);\n    }\n    if (sort_by) {\n      URL = URL + `&sort_by=${sort_by}&sort_order=${sort_order}`;\n    }\n    return URL;\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"vendor_activeTab\", activeKey);\n    window.scrollTo(0, 0);\n  }, [activeKey]);\n\n  function getData(url) {\n    let URL = `apinvoice/grouped?${url}`; //`customer?page=${page}&per_page=${per_page}`;\n    if (GLOBAL_URL === URL) return;\n    GLOBAL_URL = URL;\n    setIsfetching(true);\n    setrows([]);\n    instanceWithRetry\n      .get(URL)\n      .then((response) => {\n        if (is_dateupdated_here) {\n          setoriginalendDate(null);\n          setoriginalstartDate(startDate);\n          setoriginalendDate(endDate);\n          setis_dateupdated_here(false);\n          localStorage.setItem(\n            \"vendorsFilters\",\n            url\n              .split(\"&\")\n              .filter((x) => x)\n              .map((x) => x.split(\"=\"))\n              .map((param) => ([\"from_date\"].includes(param[1]) ? [param[0], startDate] : param))\n              .map((param) => ([\"to_date\"].includes(param[1]) ? [param[0], endDate] : param))\n              .map((x) => x.join(\"=\"))\n              .join(\"&\")\n          );\n        }\n        let rows = get(response, \"data.result\", []).map((x) => ({\n          ...get(response, \"data.detail\", {}),\n          ...x,\n          amount_due: \"\",\n          amount_not_due: \"\",\n        }));\n        let updatedRows = [...rows];\n        let prev = betweenDays({ startdate: moment(startDate), enddate: moment(Yesterday) }) >= 0;\n        let aft = betweenDays({ startdate: moment(Today), enddate: moment(endDate) }) >= 0;\n\n        const getdue_dates = () => {\n          if (prev) {\n            return [startDate, aft ? Yesterday : endDate];\n          }\n          return [null, null];\n        };\n        const due_dates = getdue_dates();\n\n        const getnotdue_dates = () => {\n          if (aft) {\n            return [prev ? Today : startDate, endDate];\n          }\n          return [null, null];\n        };\n        const notdue_dates = getnotdue_dates();\n        let isdueupdated = !due_dates[0];\n        let isnotdueupdated = !notdue_dates[0];\n\n        function updateRows() {\n          if (isdueupdated && isnotdueupdated) {\n            setrows(updatedRows);\n            setIsfetching(false);\n          }\n        }\n\n        // amount due\n        due_dates[0] &&\n          Promise.all(\n            rows.map((x) =>\n              instanceWithRetry.get(\n                `apinvoice/grouped?status=open&supplier_id=${x.supplier_id}&from_date=${due_dates[0]}&to_date=${due_dates[1]}`\n              )\n            )\n          ).then((responses) => {\n            updatedRows = rows.map((x, i) => ({\n              ...x,\n              amount_due: get(responses, `[${i}].data.result[0].total_amount_due`, \"\"),\n            }));\n            isdueupdated = true;\n            updateRows();\n          });\n\n        // amount not due\n        notdue_dates[0] &&\n          Promise.all(\n            rows.map((x) =>\n              instanceWithRetry.get(\n                `apinvoice/grouped?status=open&supplier_id=${x.supplier_id}&from_date=${notdue_dates[0]}&to_date=${notdue_dates[1]}`\n              )\n            )\n          ).then((responses2) => {\n            updatedRows = updatedRows.map((x, i) => ({\n              ...x,\n              amount_not_due: get(responses2, `[${i}].data.result[0].total_amount_due`, \"\"),\n            }));\n            isnotdueupdated = true;\n            updateRows();\n          });\n      })\n      .catch((e) => handleAPIError(e));\n  }\n\n  const ExportXLSX = (csvData) => {\n    const filename = `vendor ${moment().format(\"MMMM Do YYYY-h:mm:ss-a\")}.xlsx`;\n    const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const ws = XLSX.utils.json_to_sheet(csvData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, filename);\n  };\n\n  function ExportCSV(data) {\n    if (!data.length) {\n      return [\n        {\n          Vendor: \"\",\n          \"Amount not due\": \"\",\n          \"Amount due\": \"\",\n          \"Total balance\": \"\",\n          \"Avg days late\": \"\",\n          \"Weighted(avg) days late\": \"\",\n          \"Payment terms\": \"\",\n        },\n      ];\n    }\n    const csvData = data.map((element) => ({\n      Vendor: get(element, \"name\", \"\"),\n      \"Amount not due\": convertDecimalNo(get(element, \"amount_not_due\", 0)),\n      \"Amount due\": convertDecimalNo(get(element, \"amount_due\", 0)),\n      \"Total balance\": convertDecimalNo(get(element, \"total_amount_due\", 0)),\n      \"Avg days late\": get(element, \"average_days_late\", \"\"),\n      \"Weighted(avg) days late\": get(element, \"weighted_avg_days_late\", \"\"),\n      \"Payment terms\": `Net ${get(element, \"terms\", \"\") || 0}`,\n    }));\n\n    return csvData;\n  }\n\n  const filterData = () => {\n    if (get(selectedVendor, \"id\", id)) {\n      window.open(`${window.location.origin}/vendors/${get(selectedVendor, \"id\", id)}`, \"_self\");\n      return;\n    }\n    setpage(1);\n    setshowFilter(false);\n  };\n\n  function Increment() {\n    setIsfetching(true);\n    setpage((prevState) => Number(prevState) + 1);\n  }\n\n  function Decrement() {\n    if (page > 1) {\n      setIsfetching(true);\n      setpage((prevState) => Number(prevState) - 1);\n    }\n  }\n\n  const searchVendor = (text) => {\n    if (text) {\n      setisVendorFetching(true);\n      instanceWithRetry\n        .get(`supplier/search?name=${text}&per_page=100`)\n        .then((res) => {\n          setvendorList(res.data.result);\n          setisVendorFetching(false);\n        })\n        .catch((e) => handleAPIError(e));\n    } else {\n      setselectedVendor(null);\n    }\n  };\n\n  const exportAllData = (flag) => {\n    let URL = `apinvoice/grouped?${getURL(false)}&per_page=1000`;\n    setexporting(true);\n    instanceWithRetry\n      .get(URL)\n      .then((response) => {\n        let rows = get(response, \"data.result\", []).map((x) => ({\n          ...get(response, \"data.detail\", {}),\n          ...x,\n          amount_due: \"\",\n          amount_not_due: \"\",\n        }));\n        let updatedRows = [...rows];\n        let prev = betweenDays({ startdate: moment(startDate), enddate: moment(Yesterday) }) >= 0;\n        let aft = betweenDays({ startdate: moment(Today), enddate: moment(endDate) }) >= 0;\n\n        const getdue_dates = () => {\n          if (prev) {\n            return [startDate, aft ? Yesterday : endDate];\n          }\n          return [null, null];\n        };\n        const due_dates = getdue_dates();\n\n        const getnotdue_dates = () => {\n          if (aft) {\n            return [prev ? Today : startDate, endDate];\n          }\n          return [null, null];\n        };\n        const notdue_dates = getnotdue_dates();\n        let isdueupdated = !due_dates[0];\n        let isnotdueupdated = !notdue_dates[0];\n\n        function updateRows() {\n          if (isdueupdated && isnotdueupdated) {\n            setExportedData(updatedRows);\n            setexporting(false);\n            if (flag === true) {\n              csvRef.current.link.click();\n            } else {\n              setExportedData(updatedRows);\n              ExportXLSX(ExportCSV(updatedRows));\n            }\n          }\n        }\n\n        // amount due\n        due_dates[0] &&\n          Promise.all(\n            rows.map((x) =>\n              instanceWithRetry.get(\n                `apinvoice/grouped?status=open&supplier_id=${x.supplier_id}&from_date=${due_dates[0]}&to_date=${due_dates[1]}`\n              )\n            )\n          ).then((responses) => {\n            updatedRows = rows.map((x, i) => ({\n              ...x,\n              amount_due: get(responses, `[${i}].data.result[0].total_amount_due`, \"\"),\n            }));\n            isdueupdated = true;\n            updateRows();\n          });\n\n        // amount not due\n        notdue_dates[0] &&\n          Promise.all(\n            rows.map((x) =>\n              instanceWithRetry.get(\n                `apinvoice/grouped?status=open&supplier_id=${x.supplier_id}&from_date=${notdue_dates[0]}&to_date=${notdue_dates[1]}`\n              )\n            )\n          ).then((responses2) => {\n            updatedRows = updatedRows.map((x, i) => ({\n              ...x,\n              amount_not_due: get(responses2, `[${i}].data.result[0].total_amount_due`, \"\"),\n            }));\n            isnotdueupdated = true;\n            updateRows();\n          });\n      })\n      .catch((e) => handleAPIError(e));\n  };\n\n  const resetFilter = () => {\n    setshowFilter(false);\n    setselectedVendor(null);\n    setid(\"\");\n    setpage(1);\n    setsort_by(\"total_amount_due\");\n    setsort_order(\"desc\");\n    setis_dateupdated_here(true);\n    setoriginalendDate(null);\n    setoriginalstartDate(moment().subtract(365, \"days\").format(\"MM/DD/YYYY\"));\n    setoriginalendDate(moment().add(365, \"days\").format(\"MM/DD/YYYY\"));\n    setstartDate(moment().subtract(365, \"days\").format(\"MM/DD/YYYY\"));\n    setendDate(moment().add(365, \"days\").format(\"MM/DD/YYYY\"));\n    setinterval(30);\n  };\n\n  const setAPISort = (sort_by_key) => {\n    setsort_by(sort_by_key);\n    setsort_order(sort_by_key === sort_by && sort_order === \"asc\" ? \"desc\" : \"asc\");\n    setpage(1);\n    setrows([]);\n  };\n\n  const debounceMethod = useRef(debounce((text) => searchVendor(text), 500)).current;\n\n  const columns = [\n    {\n      accessor: \"name\",\n      Header: () => (\n        <span>\n          Vendor\n          <span className=\"sort-icons\">\n            <i className=\"fas fa-caret-up\"></i>\n            <i className=\"fas fa-caret-down\"></i>\n          </span>\n        </span>\n      ),\n      Cell: (props) => (\n        <span\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <Link to={`vendors/${props.original.supplier_id}`}>\n            <span className=\"ml-3\">{props.value}</span>\n          </Link>\n        </span>\n      ),\n    },\n    {\n      Header: () => (\n        <div className=\"text-right\">\n          Amount not due\n          <span className=\"sort-icons\">\n            <i className=\"fas fa-caret-up\"></i>\n            <i className=\"fas fa-caret-down\"></i>\n          </span>\n        </div>\n      ),\n      accessor: \"amount_not_due\",\n      className: \"text-right pr-2\",\n      Cell: (props) => (\n        <span className=\"text-right\">\n          <span className=\"ml-3\">{getFAWC(props.value)}</span>\n        </span>\n      ),\n    },\n    {\n      Header: () => (\n        <div className=\"text-right\">\n          Amount due\n          <span className=\"sort-icons\">\n            <i className=\"fas fa-caret-up\"></i>\n            <i className=\"fas fa-caret-down\"></i>\n          </span>\n        </div>\n      ),\n      accessor: \"amount_due\",\n      className: \"text-right pr-2\",\n      Cell: (props) => (\n        <span className=\"text-right\">\n          <span className=\"ml-3\">{getFAWC(props.value)}</span>\n        </span>\n      ),\n    },\n    {\n      Header: () => (\n        <div\n          className=\"text-right\"\n          onClick={() => {\n            setAPISort(\"total_amount_due\");\n          }}\n        >\n          Total balance\n          <span className=\"sort-icons\">\n            <i className=\"fas fa-caret-up\"></i>\n            <i className=\"fas fa-caret-down\"></i>\n          </span>\n        </div>\n      ),\n      accessor: \"total_amount_due\",\n      className: \"text-right pr-2\",\n      Cell: (props) => (\n        <span className=\"text-right\">\n          <span className=\"ml-3\">{getFAWC(props.value)}</span>\n        </span>\n      ),\n    },\n    {\n      Header: () => (\n        <div\n          className=\"text-right\"\n          onClick={() => {\n            setAPISort(\"average_days_late\");\n          }}\n        >\n          Avg days late\n          <span className=\"sort-icons\">\n            <i className=\"fas fa-caret-up\"></i>\n            <i className=\"fas fa-caret-down\"></i>\n          </span>\n        </div>\n      ),\n      accessor: \"average_days_late\",\n      className: \"text-right pr-2\",\n      Cell: (props) => (\n        <span className=\"text-right\">\n          <span className=\"ml-3\">{getShortNumber(props.value, false)}</span>\n        </span>\n      ),\n    },\n    {\n      Header: () => (\n        <div\n          className=\"text-center\"\n          onClick={() => {\n            setAPISort(\"weighted_avg_days_late\");\n          }}\n        >\n          Weighted(avg) days late\n          <span className=\"sort-icons\">\n            <i className=\"fas fa-caret-up\"></i>\n            <i className=\"fas fa-caret-down\"></i>\n          </span>\n        </div>\n      ),\n      accessor: \"weighted_avg_days_late\",\n      className: \"text-center\",\n      Cell: (props) => (\n        <span className=\"text-right\">\n          <span className=\"ml-3\">{getShortNumber(props.value, false)}</span>\n        </span>\n      ),\n    },\n    {\n      Header: () => (\n        <div className=\"text-center\">\n          Payment terms\n          <span className=\"sort-icons\">\n            <i className=\"fas fa-caret-up\"></i>\n            <i className=\"fas fa-caret-down\"></i>\n          </span>\n        </div>\n      ),\n      accessor: \"terms\",\n      className: \"text-center\",\n      Cell: (props) => (\n        <span>\n          <span className=\"ml-3\">{`Net ${getShortNumber(props.value, false) || 0}`}</span>\n        </span>\n      ),\n    },\n  ];\n\n  const graphProps = {\n    ...props,\n    loadVendorList: setloadVendorListing,\n    originalstartDate: originalstartDate,\n    originalendDate: originalendDate,\n    setstartDate: setstartDate,\n    setendDate: setendDate,\n    setpage: setpage,\n    resetFilter: resetFilter,\n    showgraphs: showgraphs,\n  };\n\n  return (\n    <div className=\"row px-15 \" id=\"dashboardBody\">\n      <div className=\"col-md-12\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className={!showTabs ? \"d-none\" : \"\"}>\n                  <span\n                    onClick={() => {\n                      setactiveKey(\"\");\n                    }}\n                    className=\"pull-left pt-2 pr-3\"\n                    title=\"Back\"\n                  >\n                    <i\n                      className=\"fa fa-arrow-left\"\n                      style={{ color: \"#ddd\", marginRight: \"5px\", ariaHidden: true, cursor: \"pointer\" }}\n                    ></i>\n                  </span>\n                  <Tabs id=\"graphs\" activeKey={activeKey} onSelect={(k) => setactiveKey(k)}>\n                    <Tab eventKey=\"vendorSpending\" title=\"By vendors classification\">\n                      <div\n                        className=\"w-50 text-center\"\n                        style={{ minWidth: \"310px\", height: 380, margin: \"0px auto\" }}\n                      >\n                        <VendorGraph fullsize {...graphProps} />\n                      </div>\n                    </Tab>\n                    <Tab eventKey=\"apinvoice\" title=\"Total AP spend\">\n                      <div\n                        className=\"w-50 text-center\"\n                        style={{ minWidth: \"310px\", height: 380, margin: \"0px auto\" }}\n                      >\n                        <APInvoiceGraph fullsize {...graphProps} />\n                      </div>\n                    </Tab>\n                    <Tab eventKey=\"apaging\" title=\"AP aging\">\n                      <div\n                        className=\"w-50 text-center\"\n                        style={{ minWidth: \"310px\", height: 380, margin: \"0px auto\" }}\n                      >\n                        <Agingchart fullsize {...graphProps} />\n                      </div>\n                    </Tab>\n                    <Tab eventKey=\"payroll\" title=\"Spend Categories\">\n                      <div\n                        className=\"w-50 text-center\"\n                        style={{ minWidth: \"310px\", height: 380, margin: \"0px auto\" }}\n                      >\n                        <PayrollGraph fullsize {...graphProps} />\n                      </div>\n                    </Tab>\n                  </Tabs>\n                </div>\n                <div className={showTabs ? \"d-none\" : \"\"}>\n                  <Graphs {...graphProps} setactiveKey={setactiveKey} />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row mb-4\">\n              <div className=\"col-md-6\">\n                <div className=\"dropdown\" style={{ margin: \"0px\" }}>\n                  <span\n                    className=\"btn dropdown-toggle btn-primary\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                    onClick={() => setshowFilter(true)}\n                  >\n                    <i className=\"fa fa-sliders\" aria-hidden=\"true\"></i>&nbsp; Filter\n                  </span>\n                  {showFilter && (\n                    <ClickAwayListener\n                      onClickAway={() => {\n                        if (DATES_CHANGED) {\n                          setstartDate(originalstartDate);\n                          setendDate(originalendDate);\n                        }\n                        setshowFilter(false);\n                        DATES_CHANGED = false;\n                      }}\n                    >\n                      <div\n                        id=\"outerside\"\n                        className={`dropdown-menu filterdroplist p-2 ${showFilter && \"show\"}`}\n                        aria-labelledby=\"dropdownMenuLink\"\n                      >\n                        <div className=\"row\">\n                          <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                              <div>\n                                <label className=\"\">Vendor Name</label>\n                                <Autocomplete\n                                  suggestions={uniqBy(\n                                    vendorList.map((s) => ({ id: s.id, name: s.name })),\n                                    \"id\"\n                                  )}\n                                  getSelected={(item) => setselectedVendor(item)}\n                                  search={(text) => debounceMethod(text, \"supplier\")}\n                                  isLoading={isVendorFetching}\n                                  defaultValue={selectedVendor && selectedVendor.name}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                              <label>Due date</label>\n                              <div className=\"single-date-picker\" style={{ fontSize: 12, overflow: \"hidden\" }}>\n                                <DateRangePicker\n                                  startDate={moment(startDate)}\n                                  endDate={moment(endDate)}\n                                  getSelectedDates={(startDate, endDate, interval) => {\n                                    setstartDate(moment(startDate).format(\"MM/DD/YYYY\"));\n                                    setendDate(moment(endDate).format(\"MM/DD/YYYY\"));\n                                    setis_dateupdated_here(true);\n                                    setinterval(interval);\n                                    DATES_CHANGED = true;\n                                  }}\n                                  parentEl=\"#outerside\"\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-md-6\" />\n                          <div className=\"col-md-6\">\n                            <div className=\"setbtn\">\n                              <button type=\"reset\" className=\"btn resetbtn btn-light\" onClick={resetFilter}>\n                                Reset\n                              </button>\n                              <button type=\"submit\" className=\"btn applybtn btn-primary\" onClick={filterData}>\n                                Submit\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </ClickAwayListener>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-md-6\" style={{ textAlign: \"right\" }}>\n                <div className=\"dropdown\">\n                  <span\n                    className=\"btn dropdown-toggle btn-primary\"\n                    role=\"button\"\n                    id=\"\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                    onClick={() => setshowexport(true)}\n                  >\n                    Export {exporting && <i className=\"fa fa-spinner fa-spin\" />}\n                  </span>\n                  <ClickAwayListener onClickAway={setshowexport}>\n                    <div\n                      className={`dropdown-menu dropdown-menu-right payexpdroplist ${showexport && \"show\"}`}\n                      aria-labelledby=\"dropdownMenuLink\"\n                      id=\"\"\n                    >\n                      <CSVLink\n                        data={ExportCSV(exportedData)}\n                        ref={csvRef}\n                        filename={`vendors ${moment().format(\"MMMM Do YYYY-h:mm:ss-a\")}.csv`}\n                        style={{ display: \"none\" }}\n                      />\n                      <span\n                        style={{\n                          fontSize: 12,\n                          display: \"block\",\n                          textAlign: \"right\",\n                          marginRight: \"10px\",\n                          marginBottom: \"10px\",\n                          cursor: \"pointer\",\n                        }}\n                        onClick={() => exportAllData(true)}\n                      >\n                        Export CSV\n                      </span>\n                      <span\n                        style={{\n                          fontSize: 12,\n                          display: \"block\",\n                          textAlign: \"right\",\n                          marginRight: \"10px\",\n                          cursor: \"pointer\",\n                        }}\n                        onClick={exportAllData}\n                      >\n                        Export Excel\n                      </span>\n                    </div>\n                  </ClickAwayListener>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <ReactTable\n                  noDataText={isFetching ? \"\" : \"No data found\"}\n                  minRows={rows.length || 1}\n                  loading={isFetching}\n                  sortable={true}\n                  resizable={true}\n                  showPagination={false}\n                  columns={columns}\n                  data={rows}\n                  defaultSorted={[\n                    {\n                      id: sort_by,\n                      desc: sort_order === \"desc\",\n                    },\n                  ]}\n                  getTrProps={(state, rowInfo, column) => {\n                    return {\n                      onClick: (e) => changeSelection(rowInfo.original),\n                    };\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"filterthree\">\n                <div className=\"pull-right\">\n                  <button\n                    className=\"btn btn-primary mr-2 width-94px\"\n                    disabled={page === 1 || !page}\n                    onClick={Decrement}\n                  >\n                    Previous\n                  </button>\n                  <button\n                    className=\"btn btn-primary width-94px\"\n                    disabled={rows && rows.length !== 20}\n                    onClick={Increment}\n                  >\n                    Next\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VendorsList);\n","import React from \"react\";\nimport get from \"lodash/get\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemButton,\n  AccordionItemHeading,\n  AccordionItemPanel\n} from \"react-accessible-accordion\";\nimport { setemailData } from \"components/Email/EmailCreator\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { getFormattedDate } from \"utils/dates\";\nimport { instanceWithRetry } from \"../../actions/axiosInstance\";\nimport { handleAPIError } from \"handlers/setters\";\nimport TokenManager from \"utils/TokenManager\";\nimport AddContactModal from \"components/AddContactModal\";\nimport fe_config from \"constants/Configs\";\nimport NotesList from \"components/List/NotesList\";\nimport Toaster from \"components/Toaster\";\nimport SelectEditorCell from \"components/Table/SelectEditorCell\";\nimport TextEditorCell from \"components/Table/TextEditorCell\";\n\nconst vendorCategories = [\n  { name: \"Critical\", value: 1 },\n  { name: \"High\", value: 2 },\n  { name: \"Medium\", value: 3 },\n  { name: \"Low\", value: 4 }\n];\n\nexport default class CustomerDetailSidebar extends React.Component {\n  state = {\n    preExpanded: \"\",\n    showContactModal: false\n  };\n\n  handleContactModal = flag => this.setState({ showContactModal: flag });\n\n  updateCustomer = postData => {\n    const { vendorid } = this.props;\n    instanceWithRetry\n      .put(`supplier?id=${vendorid}`, postData)\n      .then(response => {\n        Toaster(\"Updated successfully\", \"success\");\n      })\n      .catch(e => handleAPIError(e));\n  };\n\n  expandAndOpen = number => {\n    this.setState(\n      {\n        preExpanded: number\n      },\n      this.props.handleToggleCollapse(false)\n    );\n  };\n\n  render() {\n    const {\n      collapse,\n      vendorid,\n      vendorData,\n      getdata,\n      onEmailSave,\n      setshowNoteModal,\n      handleToggleCollapse,\n      setisinvoicelevelnote,\n      notesUpdated,\n      setnotesUpdated,\n      vendorCategoryList,\n    } = this.props;\n    const { preExpanded, showContactModal } = this.state;\n    const name = get(vendorData, \"result[0].name\", \"-\");\n    const paymentTerms = get(vendorData, \"detail.payment_terms\", \"-\");\n    const region = get(vendorData, \"result[0].region\", \"-\");\n    if (!vendorData) {\n      return <div />;\n    }\n    return (\n      <React.Fragment>\n        {collapse ? (\n          <div className=\"col-md-1 collapsable-panel\">\n            <div className=\"card\">\n              <div\n                className=\"leftbaricon\"\n                onClick={() => {\n                  this.setState({ preExpanded: \"\" });\n                  handleToggleCollapse(!collapse);\n                }}\n              >\n                <OverlayTrigger placement=\"left\" overlay={<Tooltip>Expand</Tooltip>}>\n                  <i className=\"fa fa-chevron-left\" />\n                </OverlayTrigger>\n              </div>\n              <div>\n                <div onClick={() => this.expandAndOpen(0)}>\n                  <OverlayTrigger placement=\"left\" overlay={<Tooltip>Company</Tooltip>}>\n                    <i className=\"onlyicon fa fa-info-circle cursor-pointer\" aria-hidden=\"true\" />\n                  </OverlayTrigger>\n                </div>\n                {fe_config.MODE === \"DEV\" && (\n                  <div onClick={() => this.expandAndOpen(1)}>\n                    <OverlayTrigger placement=\"left\" overlay={<Tooltip>Payment Method</Tooltip>}>\n                      <i className=\"onlyicon fa fa-usd cursor-pointer\" aria-hidden=\"true\" />\n                    </OverlayTrigger>\n                  </div>\n                )}\n                {fe_config.MODE === \"DEV\" && (\n                  <div onClick={() => this.expandAndOpen(2)}>\n                    <OverlayTrigger placement=\"left\" overlay={<Tooltip>Contact Person</Tooltip>}>\n                      <i className=\"onlyicon fa fa-user cursor-pointer\" aria-hidden=\"true\" />\n                    </OverlayTrigger>\n                  </div>\n                )}\n                <div onClick={() => this.expandAndOpen(3)}>\n                  <OverlayTrigger placement=\"left\" overlay={<Tooltip>Notes</Tooltip>}>\n                    <i className=\"onlyicon fa fa-pencil cursor-pointer\" aria-hidden=\"true\" />\n                  </OverlayTrigger>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div class=\"right-col\">\n            <OverlayTrigger placement=\"top\" overlay={<Tooltip>Send email</Tooltip>}>\n              <i\n                className=\"fa fa-envelope px-2 cursour-pointer text-3F6289 cfa-rounded-circle\"\n                style={{ fontSize: 22 }}\n                onClick={() => {\n                  setemailData({\n                    show: true,\n                    to: get(vendorData, \"detail.email\", \"\"),\n                    onSave: onEmailSave\n                  });\n                }}\n              />\n            </OverlayTrigger>\n            <OverlayTrigger placement=\"top\" overlay={<Tooltip>Add notes</Tooltip>}>\n              <i\n                className=\"fa fa-sticky-note px-2 cursour-pointer text-3F6289 cfa-rounded-circle\"\n                style={{ fontSize: 22 }}\n                onClick={() => {\n                  setshowNoteModal(true);\n                  setisinvoicelevelnote(false);\n                }}\n              />\n            </OverlayTrigger>\n            <div class=\"card bg-transparent\">\n              <div\n                className=\"leftbaricon\"\n                onClick={() => {\n                  this.setState({ preExpanded: \"\" });\n                  handleToggleCollapse(!collapse);\n                }}\n              >\n                <OverlayTrigger placement=\"left\" overlay={<Tooltip>Collapse</Tooltip>}>\n                  <i className=\"fa fa-chevron-right\" />\n                </OverlayTrigger>\n              </div>\n              <Accordion\n                allowMultipleExpanded\n                allowZeroExpanded\n                className={`details-accordion preExpand-${preExpanded}`}\n              >\n                <AccordionItem className=\"accordion_card_1\">\n                  <AccordionItemHeading onClick={() => this.setState({ preExpanded: \"\" })}>\n                    <AccordionItemButton className=\"bg-white px-3 py-3 mb-2 cursor-pointer accordion__button\">\n                      <strong>Company</strong> <i className=\"more-less fa fa-chevron-down pull-right\" />{\" \"}\n                      <i className=\"more-less fa fa-chevron-up pull-right\" />\n                    </AccordionItemButton>\n                  </AccordionItemHeading>\n                  <AccordionItemPanel className=\"pt-2 mb-2 card\">\n                    <div class=\"col-md-12 mb-2\">\n                      <label>\n                        <strong>Name:</strong>\n                      </label>\n                      <div>{name}</div>\n                    </div>\n                    <div class=\"col-md-12 mb-2\">\n                      <label>\n                        <strong>Vendor Category:</strong>\n                      </label>\n                      <div>\n                        <SelectEditorCell\n                          value={get(vendorData, \"detail.vendor_category_id\", \"-\")}\n                          options={vendorCategoryList.map(d => ({ name:d.name, value: d.id }))}\n                          updateValue={value => {\n                            const apiPoint = \"supplier\";\n                            instanceWithRetry\n                              .put(\n                                `${apiPoint}?id=${vendorid}`,\n                                {\n                                  category: value\n                                },\n                                {\n                                  auth: {\n                                    username: TokenManager.get(),\n                                    password: Math.random().toString(20)\n                                  }\n                                }\n                              )\n                              .then(() => {\n                                Toaster(\"Updated successfully\", \"success\");\n                                getdata();\n                              })\n                              .catch(e => handleAPIError(e));\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div class=\"col-md-12 mb-2\">\n                      <label>\n                        <strong>Classification:</strong>\n                      </label>\n                      <div>\n                        <SelectEditorCell\n                          value={get(vendorData, \"detail.classification\", \"-\")}\n                          options={vendorCategories}\n                          updateValue={value => {\n                            // const type = item.data.type;\n                            // const apiPoint = type === 'vendor' ? 'supplier' : 'arinvoice';\n                            const apiPoint = \"supplier\";\n                            instanceWithRetry\n                              .put(`${apiPoint}?id=${vendorid}`, {\n                                classification: value\n                              })\n                              .then(() => {\n                                Toaster(\"Updated successfully\", \"success\");\n                                getdata();\n                              })\n                              .catch(e => handleAPIError(e));\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div class=\"col-md-12 mb-2\">\n                      <label>\n                        <strong>Region:</strong>\n                      </label>\n                      <div>\n                        <input\n                          type=\"text\"\n                          defaultValue={region}\n                          onBlur={e => this.updateCustomer({ region: e.target.value })}\n                          className=\"ccat\"\n                        />\n                        <span className=\"penedit\">\n                          <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                        </span>\n                      </div>\n                    </div>\n                    <div class=\"col-md-12 mb-2\">\n                      <label>\n                        <strong>Payment terms:</strong>\n                      </label>\n                      <div>{paymentTerms}</div>\n                    </div>\n                    <div class=\"col-md-12 mb-2\">\n                      <label>\n                        <strong>Account no:</strong>\n                      </label>\n                      <div>-</div>\n                    </div>\n                    <div class=\"col-md-12 mb-2\">\n                      <label>\n                        <strong>Email:</strong>\n                      </label>\n                      <div>\n                        <TextEditorCell\n                          value={get(vendorData, \"detail.email\", \"-\")}\n                          updateValue={value => this.updateCustomer({ email: value })}\n                        />\n                      </div>\n                    </div>\n                  </AccordionItemPanel>\n                </AccordionItem>\n                {fe_config.MODE === \"DEV\" && (\n                  <AccordionItem className=\"accordion_card_2\">\n                    <AccordionItemHeading onClick={() => this.setState({ preExpanded: \"\" })}>\n                      <AccordionItemButton className=\"bg-white px-3 py-3 mb-2 cursor-pointer accordion__button\">\n                        <strong>Payment Method</strong> <i className=\"more-less fa fa-chevron-down pull-right\" />{\" \"}\n                        <i className=\"more-less fa fa-chevron-up pull-right\" />\n                      </AccordionItemButton>\n                    </AccordionItemHeading>\n                    <AccordionItemPanel className=\"pt-2 mb-2 card\">\n                      <div className=\"px-2 py-2\">\n                        <select className=\"form-control\">\n                          <option>A</option>\n                          <option>B</option>\n                        </select>\n                      </div>\n                    </AccordionItemPanel>\n                  </AccordionItem>\n                )}\n                {fe_config.MODE === \"DEV\" && (\n                  <AccordionItem className=\"accordion_card_3\">\n                    <AccordionItemHeading onClick={() => this.setState({ preExpanded: \"\" })}>\n                      <AccordionItemButton className=\"bg-white px-3 py-3 mb-2 cursor-pointer accordion__button\">\n                        <strong>Contact Person</strong> <i className=\"more-less fa fa-chevron-down pull-right\" />{\" \"}\n                        <i className=\"more-less fa fa-chevron-up pull-right\" />\n                      </AccordionItemButton>\n                    </AccordionItemHeading>\n                    <AccordionItemPanel className=\"pt-2 mb-2 card accordion_card_3\">\n                      <div className=\"notes px-2\">\n                        <div>\n                          <strong>Name:</strong> Prashant{\" \"}\n                        </div>\n                        <div>\n                          <strong>Email:</strong> prashant@gmail.com\n                        </div>\n                        <div>\n                          <strong>Mobile:</strong> +91 9876543210\n                        </div>\n                      </div>\n                      <div className=\"px-2\">\n                        <button\n                          className=\"btn btn-sm btn-primary pull-right mb-2\"\n                          onClick={() => this.handleContactModal(true)}\n                        >\n                          Add New\n                        </button>\n                      </div>\n                    </AccordionItemPanel>\n                  </AccordionItem>\n                )}\n                <AccordionItem className=\"accordion_card_4\">\n                  <AccordionItemHeading onClick={() => this.setState({ preExpanded: \"\" })}>\n                    <AccordionItemButton className=\"bg-white px-3 py-3 cursor-pointer accordion__button\">\n                      <strong>Notes</strong> <i className=\"more-less fa fa-chevron-down pull-right\" />{\" \"}\n                      <i className=\"more-less fa fa-chevron-up pull-right\" />\n                    </AccordionItemButton>\n                  </AccordionItemHeading>\n                  <AccordionItemPanel className=\"pt-2 bg-white px-3 card\">\n                    <NotesList\n                      type=\"vendors\"\n                      id={vendorid}\n                      onUpdate={() => {}}\n                      notesUpdated={notesUpdated}\n                      setnotesUpdated={setnotesUpdated}\n                    />\n                  </AccordionItemPanel>\n                </AccordionItem>\n              </Accordion>\n            </div>\n            <AddContactModal show={showContactModal} onHide={this.handleContactModal} />\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport \"assets/css/paymentdetails.css\";\nimport filterarrow from \"assets/images/filter-arrow.png\";\nimport ClickAwayListener from \"components/ClickAwayListener\";\nimport { resetconfirmationboxData, setconfirmationboxData } from \"components/ConfirmationBox\";\nimport { resetemail, setemailData } from \"components/Email/EmailCreator\";\nimport PaymentPlanModal from \"components/PaymentPlanModal\";\nimport DateModal from \"components/Popups/Date\";\nimport TextAreaModal from \"components/Popups/TextArea\";\nimport PieChartPlaceholder from \"components/Recharts/Placeholders/Piechart\";\nimport CustomSpinner from \"components/Spinner\";\nimport Toaster from \"components/Toaster\";\nimport fe_config from \"constants/Configs\";\nimport * as FileSaver from \"file-saver\";\nimport { handleAPIError } from \"handlers/setters\";\nimport get from \"lodash/get\";\nimport moment from \"moment\";\nimport { default as React, useEffect, useState } from \"react\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport TokenManager from \"utils/TokenManager\";\nimport { CSVLink } from \"react-csv\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport ReactTable from \"react-table-v6\";\nimport { Cell, Label, Pie, PieChart, Sector } from \"recharts\";\nimport { convertAmount, convertDecimalNo, getFAWC, getShortNumber } from \"utils\";\nimport { getFormattedDate } from \"utils/dates\";\nimport * as XLSX from \"xlsx\";\nimport { instanceMultipart, instanceWithRetry } from \"../../actions/axiosInstance\";\nimport VendorDetailSidebar from \"./VendorDetailSidebar\";\n\nconst renderActiveShape = (props) => {\n  const { cx, cy, innerRadius, outerRadius, startAngle, endAngle, fill } = props;\n\n  return (\n    <g>\n      <Sector\n        className=\"cursour-pointer\"\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius + 5}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n    </g>\n  );\n};\n\nconst DonutChart = ({ data = [], vendorData, onRecordClick, total = 0, selectedSection }) => {\n  const [activeindex, setactiveindex] = useState(null);\n\n  useEffect(() => {\n    (get(selectedSection, \"dataindex\", null) || get(selectedSection, \"dataindex\", null) === 0) &&\n      setactiveindex(get(selectedSection, \"dataindex\", null));\n  }, [selectedSection]);\n\n  function onPieEnter(data, index) {\n    setactiveindex(index);\n  }\n  function onPieLeave(data, index) {\n    setactiveindex(null || get(selectedSection, \"dataindex\", null));\n  }\n\n  return (\n    <PieChart width={320} height={320}>\n      <Pie\n        animationDuration={1000}\n        activeIndex={activeindex}\n        activeShape={renderActiveShape}\n        data={data}\n        innerRadius={60}\n        outerRadius={140}\n        fill=\"#8884d8\"\n        dataKey=\"value\"\n        onClick={(e) => {\n          onRecordClick(e.payload.payload);\n        }}\n        onMouseEnter={onPieEnter}\n        onMouseLeave={onPieLeave}\n      >\n        <Label className=\"cursour-pointer\" width={30} position=\"center\" onClick={() => onRecordClick(null)}>\n          {`Total ${getShortNumber(total) || \"-\"}`}\n        </Label>\n        {data.map((entry, index) => (\n          <Cell className=\"cursour-pointer\" fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n};\n\nconst COLORS = [\"#2B7EF6\", \"#7CA82D\", \"#EF853A\", \"#DB504D\", \"#424348\", \"#90ED7D\", \"#3C861F\", \"#F9D7E0\"];\n\nfunction VendorDetails(props) {\n  const { history, selectedpayment, match, location } = props;\n  const [showNoteModal, setshowNoteModal] = useState(false);\n  const [isinvoicelevelnote, setisinvoicelevelnote] = useState(false);\n  const [showpayIQDateModal, setshowpayIQDateModal] = useState(false);\n  const [invoiceList, setinvoiceList] = useState([]);\n  const [last12MonthTotal, setlast12MonthTotal] = useState(null);\n  const [isFetching, setisFetching] = useState(true);\n  const [last12MonthPaid, setlast12MonthPaid] = useState(null);\n  const [vendorData, setvendorData] = useState(null);\n  const [page, setpage] = useState(1);\n  const [showexport, setshowexport] = useState(false);\n  const [notesUpdated, setnotesUpdated] = useState(false);\n  const [pageMaxCount, setPageMaxCount] = useState(20);\n  const [vendorid, setvendorid] = useState(get(match, \"params.id\", \"\"));\n  const [fulldata, setfulldata] = useState(null);\n  const [toggleCollapse, setToggleCollapse] = useState(true);\n  const [showPlanModal, setPlanModal] = useState(false);\n  const [paymentPlanList, setPaymentPlanList] = useState([]);\n  const [showChart, setshowChart] = useState(false);\n  const [editPlan, setEditPlan] = useState(null);\n  const [sort_by, setsort_by] = useState(\"total_amount_due\");\n  const [sort_order, setsort_order] = useState(\"desc\");\n  const today = moment().format(\"MM/DD/YYYY\");\n  const [vendorCategoryList, setVendorCategoryList] = useState([]);\n  const [activeKey, setactiveKey] = useState(get(location, \"search\", \"\") ? \"paymentPlan\" : \"invoiceList\");\n  const todayMinusYear = moment().subtract(\"year\", 1).format(\"MM/DD/YYYY\");\n  const tomorrow = moment().add(\"day\", 1).format(\"MM/DD/YYYY\");\n  const tomorrowPlusYear = moment().add(\"year\", 1).format(\"MM/DD/YYYY\");\n  const chartData = [\n    {\n      name: \"Paid\",\n      value: Math.abs(last12MonthPaid || 0),\n      dataindex: 0,\n      urlparams: `&status=closed&from_date=${todayMinusYear}&to_date=${today}`,\n    }, //paid\n    {\n      name: \"Balance\",\n      value: Math.abs(get(vendorData, \"Outstanding Balance\", 0)),\n      dataindex: 1,\n      urlparams: `&status=open&from_date=${tomorrow}&to_date=${tomorrowPlusYear}`,\n    }, //balance\n    {\n      name: \"Overdue\",\n      value: Math.abs(get(vendorData, \"Overdue Balance\", 0)),\n      dataindex: 2,\n      urlparams: `&status=open&from_date=${todayMinusYear}&to_date=${today}`,\n    }, //overdue\n  ];\n  const [selectedSection, setselectedSection] = useState();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    setselectedSection(chartData[2]);\n  }, []);\n\n  function handleToggleCollapse(flag) {\n    window.localStorage.setItem(\"vendorCollapse\", flag);\n    setToggleCollapse(flag);\n  }\n\n  useEffect(() => {\n    if (match != null && match.params != null && match.params.id != null && vendorid) {\n      getdata();\n    }\n  }, [history, match, selectedpayment, today, todayMinusYear, vendorid]);\n\n  function getdata() {\n    Promise.all([\n      instanceWithRetry.get(`supplier/report?id=${vendorid}`),\n      instanceWithRetry.get(\n        `apinvoice/total?from_date=${todayMinusYear}&to_date=${today}&supplier_id=${match.params.id}&status=all`\n      ),\n      instanceWithRetry.get(\n        `apinvoice/total?from_date=${todayMinusYear}&to_date=${today}&supplier_id=${match.params.id}&status=closed`\n      ),\n      instanceWithRetry.get(`supplier?id=${vendorid}`),\n    ])\n      .then((responses) => {\n        setvendorData(get(responses, \"[0].data\", {}));\n        setlast12MonthTotal(get(responses, \"[1].data.total\", \"\"));\n        setlast12MonthPaid(get(responses, \"[2].data.total\", \"\"));\n        setfulldata(get(responses, \"[3].data\", \"\"));\n        setshowChart(true);\n      })\n      .catch((e) => handleAPIError(e));\n    getPaymentPlan();\n    getVendorCategory();\n  }\n\n  useEffect(() => {\n    if (!vendorData || !vendorid) {\n      return;\n    }\n    let rows = [];\n    setisFetching(true);\n    if (page === 1 && !selectedSection) {\n      let URL = `apinvoice?supplier_id=${vendorid}&status=open&per_page=100`;\n      instanceWithRetry\n        .get(URL)\n        .then((response) => {\n          rows = [...get(response, \"data.result\", [])];\n          URL = `apinvoice?supplier_id=${vendorid}&status=closed&page=${page}&per_page=${pageMaxCount}`;\n          instanceWithRetry\n            .get(URL)\n            .then((response2) => {\n              rows = [...rows, ...get(response2, \"data.result\", [])].slice(0, 20);\n              setinvoiceList(rows);\n              setisFetching(false);\n            })\n            .catch((e) => handleAPIError(e));\n        })\n        .catch((e) => handleAPIError(e));\n    } else {\n      let URL = `apinvoice?supplier_id=${vendorid}&page=${page}&per_page=${pageMaxCount}`;\n      if (selectedSection) {\n        URL = `${URL}${get(selectedSection, \"urlparams\", \"\")}&sort_by=${sort_by}&sort_order=${sort_order}`;\n      } else {\n        URL = `${URL}&status=closed`;\n      }\n      instanceWithRetry\n        .get(URL)\n        .then((response2) => {\n          rows = [...rows, ...get(response2, \"data.result\", [])].slice(0, 20);\n          if (!get(rows, \"[0]\", \"\") && selectedSection.name !== \"Paid\") {\n            selectedSection.name === \"Overdue\" && setselectedSection(chartData[1]);\n            selectedSection.name === \"Balance\" && setselectedSection(null);\n          } else {\n            setinvoiceList(rows);\n            setisFetching(false);\n          }\n        })\n        .catch((e) => handleAPIError(e));\n    }\n  }, [sort_by, sort_order, page, pageMaxCount, vendorid, vendorData, selectedSection, paymentPlanList]);\n\n  const setAPISort = (sort_by_key) => {\n    if (!selectedSection) {\n      return;\n    }\n    setsort_by(sort_by_key);\n    setsort_order(sort_by_key === sort_by && sort_order === \"desc\" ? \"asc\" : \"desc\");\n    setpage(1);\n    setinvoiceList([]);\n    setisFetching(true);\n  };\n\n  const getPaymentPlan = (reload) => {\n    instanceWithRetry\n      .get(`paymentplan`)\n      .then((response) => {\n        const data = get(response, \"data.result\", []).filter((item) => item.supplierid === Number(vendorid) && item.is_payment_plan);\n        setPaymentPlanList(data);\n        if (reload) {\n          const temp = vendorData;\n          setvendorData(null);\n          setvendorData(temp);\n        }\n      })\n      .catch((e) => handleAPIError(e));\n  };\n\n  const getVendorCategory = () => {\n    instanceWithRetry\n      .get(\"vendorcategory?per_page=1000\")\n      .then((response) => {\n        setVendorCategoryList(response.data.result);\n      })\n      .catch((e) => handleAPIError(e));\n  };\n\n  function Increment() {\n    if (page * pageMaxCount < 1000) {\n      setpage((prevState) => prevState + 1);\n    }\n  }\n  function Decrement() {\n    if (page > 1) {\n      setpage((prevState) => prevState - 1);\n    }\n  }\n\n  const ExportXLSX = (csvData) => {\n    const filename = `${get(vendorData, \"Vendor Name\", \"\")} ${moment().format(\"MMMM Do YYYY-h:mm:ss-a\")}.xlsx`;\n    const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const ws = XLSX.utils.json_to_sheet(csvData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, filename);\n  };\n\n  function ExportCSV(data) {\n    const csvData = data.map((element) => ({\n      Invoice: get(element, \"invoice_number\", \"\"),\n      \"PayIQ Date\": get(element, \"recommendation\", \"\"),\n      \"Due Date\": !get(element, \"due_date\", \"\") ? \"\" : moment(get(element, \"due_date\", \"\")).format(\"YYYY/MM/DD\"),\n      \"Amount due\": convertDecimalNo(get(element, \"total_amount_due\", 0)),\n      Status: get(element, \"status\", \"\"),\n      Email: get(element, \"\", \"\"),\n      // Payment Term: get(element, \"\", \"\")\n    }));\n\n    return csvData;\n  }\n\n  function fastForwardPayiq(by) {\n    const allselectedinvoices = invoiceList.filter((x) => x.isselected);\n    const allpromises = allselectedinvoices.map((x) =>\n      instanceWithRetry.put(`/apinvoice?id=${x.id}`, {\n        recommendation_date: moment().add(1, by).format(\"MM/DD/YYYY\"),\n      })\n    );\n    Promise.all(allpromises).then(() => {\n      setshowpayIQDateModal(false);\n      Toaster(\"Updated successfully\", \"success\");\n      const temp = vendorData;\n      setvendorData(null);\n      setvendorData(temp);\n      setinvoiceList(invoiceList.map((x) => ({ ...x, isselected: false })));\n      localStorage.setItem(\"refresh_reports\", true);\n    });\n  }\n\n  const isrowselected = invoiceList && invoiceList.find((x) => x.isselected);\n\n  function deletePayIq() {\n    setconfirmationboxData({\n      variant: \"warning\",\n      msg: \"Are you sure you want to delete this record?\",\n      onSave: () => {\n        resetconfirmationboxData();\n        const allselectedinvoices = invoiceList.filter((x) => x.isselected);\n        instanceWithRetry.delete(`apinvoice`, { data: { ids : allselectedinvoices.map(x => x.id) } }).then(() => {\n          const temp = vendorData;\n          setvendorData(null);\n          setvendorData(temp);\n          setinvoiceList(invoiceList.map((x) => ({ ...x, isselected: false })));\n          localStorage.setItem(\"refresh_reports\", true);\n        })\n        .catch(() => {\n          Toaster(\"invoices cannot be deleted\", \"error\")\n        });\n      }\n    })\n  }\n\n  const planTableColumns = [\n    {\n      Header: () => <span>ID</span>,\n      width: 50,\n      className: \"ml-3\",\n      accessor: \"id\",\n      Cell: (data) => <span>{data.value}</span>,\n    },\n    {\n      Header: () => <span className=\"ml-3\">Installments</span>,\n      accessor: \"installments\",\n      Cell: (data) => {\n        return (\n          <table className=\"pr-4\" style={{ maxWidth: 300 }}>\n            <tr className=\"mb-2\">\n              <td>\n                <strong>No</strong>\n              </td>\n              <td>\n                <strong>Date</strong>\n              </td>\n              <td className=\"text-right\">\n                <strong>Amount</strong>\n              </td>\n            </tr>\n            {get(data, \"original.installments\", []).map((d, i) => (\n              <tr className=\"mb-2\">\n                <td className=\"width-94px\">#{i + 1}</td>\n                <td className=\"width-94px\">{moment(d[1]).format(\"MM/DD/YYYY\")}</td>\n                <td className=\"width-94px text-right\">{getFAWC(d[2])}</td>\n              </tr>\n            ))}\n          </table>\n        );\n      },\n    },\n    {\n      Header: () => <span className=\"ml-3\">Invoices</span>,\n      accessor: \"invoices\",\n      Cell: (data) => {\n        return (\n          <div className=\"ml-3\">\n            {get(data, \"original.invoices\", []).map((d, i) => (\n              <React.Fragment>\n                <Link to={`/payables/${d}`} onClick={(e) => e.stopPropagation()} target=\"_blank\">\n                  <span className=\"t-link\">\n                    {get(\n                      invoiceList.find((i) => i.id == d),\n                      \"invoice_number\",\n                      \"\"\n                    )}\n                  </span>\n                </Link>\n                {i + 1 !== get(data, \"original.invoices\", []).length && \",\"}\n                <br />\n              </React.Fragment>\n            ))}\n          </div>\n        );\n      },\n    },\n    {\n      Header: \"\",\n      accessor: \"id\",\n      Cell: (props) => (\n        <span className=\"\">\n          <i\n            className=\"fa fa-trash-o ml-5\"\n            aria-hidden=\"true\"\n            onClick={(e) => {\n              e.stopPropagation();\n              const { original } = props;\n              setconfirmationboxData({\n                variant: \"warning\",\n                msg: \"Are you sure you want to delete?\",\n                onSave: () => {\n                  resetconfirmationboxData();\n\n                  instanceWithRetry.delete(`paymentplan?id=${original.id}`).then(() => {\n                    Toaster(\"Deleted successfully\", \"success\");\n                    getPaymentPlan();\n                    localStorage.setItem(\"refresh_reports\", true);\n                    // getInvoice\n                  });\n                },\n              });\n            }}\n          />\n        </span>\n      ),\n    },\n  ];\n\n  const columns = [\n    {\n      Header: (\n        <input\n          className=\"md-checkbox\"\n          type=\"checkbox\"\n          onChange={() => {\n            const newvalue = !(invoiceList && !invoiceList.find((x) => !x.isselected));\n            setinvoiceList(invoiceList.map((x) => ({ ...x, isselected: newvalue })));\n          }}\n          checked={get(invoiceList, \"[0]\", \"\") && !invoiceList.find((x) => !x.isselected)}\n        />\n      ),\n      accessor: \"isselected\",\n      Cell: (props) => (\n        <div\n          onClick={(e) => {\n            e.stopPropagation();\n            const newvalue = !props.value;\n            const updatedinvoiceList = [...invoiceList];\n            updatedinvoiceList[props.index][\"isselected\"] = newvalue;\n            setinvoiceList(updatedinvoiceList);\n          }}\n        >\n          <input\n            className=\"md-checkbox\"\n            style={{ marginLeft: 15 }}\n            type=\"checkbox\"\n            defaultChecked={props.value}\n            checked={props.value}\n          />\n        </div>\n      ),\n      sortable: false,\n      filterable: false,\n      width: 50,\n    },\n    {\n      Header: () => (\n        <div\n          className=\"cursour-pointer ml-4\"\n          onClick={() => {\n            setAPISort(\"invoice_number\");\n          }}\n        >\n          Invoice\n          <span className=\"sort-icons\">\n            <i className=\"fas fa-caret-up\"></i>\n            <i className=\"fas fa-caret-down\"></i>\n          </span>\n        </div>\n      ),\n      width: 200,\n      accessor: \"invoice_number\",\n      Cell: (data) => {\n        return (\n          <div>\n            <span>{get(data, \"original.invoice_number\", \"\")}</span>\n          </div>\n        );\n      },\n    },\n    {\n      Header: () => (\n        <span>\n          PayIQ date\n          <span className=\"sort-icons\">\n            <i className=\"fas fa-caret-up\"></i>\n            <i className=\"fas fa-caret-down\"></i>\n          </span>\n        </span>\n      ),\n      accessor: \"recommendation\",\n      width: 140,\n      Cell: (data) => {\n        return (\n          <div>\n            {getFormattedDate(get(data, \"value\", \"\"))}\n            {get(data, \"original.reco_date_overridden\", \"\") ? <i className=\"fa fa-check text-success m-1\" /> : \"\"}\n          </div>\n        );\n      },\n      // Cell: data => getFormattedDate(get(data, \"value\", \"\")) || \"-\"\n    },\n    {\n      Header: () => (\n        <span\n          className=\"cursour-pointer\"\n          onClick={() => {\n            setAPISort(get(selectedSection, \"name\", \"\") === \"Paid\" ? \"date_closed\" : \"due_date\");\n          }}\n        >\n          {(get(selectedSection, \"name\", \"\") === \"Paid\" && \"Closed date\") ||\n            (get(selectedSection, \"name\", \"\") === \"Overdue\" && \"Due date\") ||\n            \"Due/Closed date\"}{\" \"}\n          <span className=\"sort-icons\">\n            <i className=\"fas fa-caret-up\"></i>\n            <i className=\"fas fa-caret-down\"></i>\n          </span>\n        </span>\n      ),\n      accessor: \"due_date\",\n      width: 140,\n      Cell: (data) => {\n        if (get(data, \"original.date_closed\", \"\")) {\n          return getFormattedDate(get(data, \"original.date_closed\", \"\"));\n        } else {\n          return getFormattedDate(get(data, \"original.due_date\", \"\"));\n        }\n      },\n    },\n    {\n      Header: () => (\n        <span\n          className=\"cursour-pointer\"\n          onClick={() => {\n            const sortkey = get(selectedSection, \"name\", \"\") === \"Overdue\" ? \"total_amount_due\" : \"invoice_amount\";\n            setAPISort(sortkey);\n          }}\n        >\n          {get(selectedSection, \"name\", \"\") === \"Overdue\" ? \"Amount Due\" : !get(selectedSection, \"name\", \"\") ? \"Amount\" : \"Invoice Amount\"}\n          <span className=\"sort-icons\">\n            <i className=\"fas fa-caret-up\"></i>\n            <i className=\"fas fa-caret-down\"></i>\n          </span>\n        </span>\n      ),\n      width: 120,\n      accessor: get(selectedSection, \"name\", \"\") === \"Overdue\" ? \"total_amount_due\" : \"invoice_amount\",\n      className: \"text-right pr-2\",\n      Cell: (data) => getFAWC(get(data, \"value\", \"\")),\n    },\n    {\n      Header: () => (\n        <div className=\"text-center\">\n          Payment method <img src={filterarrow} alt=\" \" />\n        </div>\n      ),\n      accessor: \"test\",\n      className: \"text-center\",\n      Cell: (data) => get(data, \"test\", \"-\"),\n    },\n    {\n      Header: () => (\n        <div className=\"text-center\">\n          Status <img src={filterarrow} alt=\" \" />\n        </div>\n      ),\n      accessor: \"status\",\n      Cell: (data) => <div className=\"text-center\">{get(data, \"original.status\", \"Schedule payment\")}</div>,\n    },\n  ];\n\n  const prePopulatedBody = () => {\n    const selectedInvoices = invoiceList.filter((x) => x.isselected);\n    let res = \"\";\n    let total = 0,\n      list = \"\";\n    selectedInvoices.forEach((invoice) => {\n      list = `${list} <li> Invoice number: ${invoice.invoice_number}, Due date: ${getFormattedDate(\n        invoice.due_date\n      )}, Amount due: ${getShortNumber(invoice.total_amount_due)} </li>`;\n      total = total + invoice.total_amount_due;\n    });\n    res = `Invoices, <ul> ${list} </ul> <p> Total: ${getShortNumber(total)} </p>`;\n    return res;\n  };\n\n  const ispayplandisabled = get(\n    invoiceList.filter((x) => x.isselected).filter((x) => x.status !== \"Open\" || x.payment_plan_id),\n    \"[0]\",\n    \"\"\n  );\n\n  const tableProps = isrowselected\n    ? {\n        TheadComponent: () => null,\n      }\n    : {};\n\n  function onEmailSave(to, subject, body, files, cc) {\n    const postData = { to, subject, message: body, cc };\n    let bodyFormData = new FormData();\n    bodyFormData.set(\"metadata\", JSON.stringify(postData));\n    files.forEach((file) => {\n      bodyFormData.append(\"files[]\", file, file.name);\n    });\n\n    instanceMultipart\n      .post(`sendemail?supplier_id=${vendorid}`, bodyFormData)\n      .then(() => {\n        resetemail();\n        Toaster(`An email was sent to ${to}`, \"success\");\n        instanceWithRetry\n          .put(`/supplier/note`, {\n            date: moment().format(\"MM/DD/YYYY\"),\n            note: `An email was sent to ${to} \\n Subject: ${subject}`,\n            supplier_id: vendorid,\n          })\n          .then(() => {\n            setnotesUpdated(true);\n            setinvoiceList(invoiceList.map((x) => ({ ...x, isselected: false })));\n          });\n      })\n      .catch((e) => handleAPIError(e));\n  }\n\n  const chartTotal =\n    (last12MonthPaid || 0) + get(vendorData, \"Outstanding Balance\", 0) + get(vendorData, \"Overdue Balance\", 0);\n\n  return (\n    <div className=\"row px-15\" id=\"dashboardBody\">\n      <TextAreaModal\n        header=\"Add Note\"\n        show={showNoteModal}\n        handleClose={() => setshowNoteModal(false)}\n        handleSubmit={(value) => {\n          if (isinvoicelevelnote) {\n            const allselectedinvoices = invoiceList.filter((x) => x.isselected);\n            const allpromises = allselectedinvoices.map((x) =>\n              instanceWithRetry.put(`/supplier/note`, {\n                date: moment().format(\"MM/DD/YYYY\"),\n                note: value,\n                invoice_id: JSON.stringify(x.id),\n                supplier_id: vendorid,\n              })\n            );\n            Promise.all(allpromises).then(() => {\n              setshowNoteModal(false);\n              Toaster(\"Notes added\", \"success\");\n              setnotesUpdated(true);\n              setinvoiceList(invoiceList.map((x) => ({ ...x, isselected: false })));\n            });\n          } else {\n            instanceWithRetry\n              .put(`/supplier/note`, {\n                date: moment().format(\"MM/DD/YYYY\"),\n                note: value,\n                supplier_id: vendorid,\n              })\n              .then(() => {\n                setshowNoteModal(false);\n                Toaster(\"Notes added\", \"success\");\n                setnotesUpdated(true);\n                setinvoiceList(invoiceList.map((x) => ({ ...x, isselected: false })));\n              });\n          }\n        }}\n      />\n      <DateModal\n        header=\"Update PayIQ Date\"\n        show={showpayIQDateModal}\n        handleClose={() => setshowpayIQDateModal(false)}\n        handleSubmit={(value) => {\n          const allselectedinvoices = invoiceList.filter((x) => x.isselected);\n          const allpromises = allselectedinvoices.map((x) =>\n            instanceWithRetry.put(`/apinvoice?id=${x.id}`, {\n              recommendation_date: moment(value).format(\"MM/DD/YYYY\"),\n              reco_date_override: true,\n            })\n          );\n          Promise.all(allpromises).then(() => {\n            setshowpayIQDateModal(false);\n            Toaster(\"Updated successfully\", \"success\");\n            const temp = vendorData;\n            setvendorData(null);\n            setvendorData(temp);\n            setinvoiceList(invoiceList.map((x) => ({ ...x, isselected: false })));\n            localStorage.setItem(\"refresh_reports\", true);\n          });\n        }}\n      />\n      <div className={toggleCollapse ? \"slide-left\" : \"slide-right\"}>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"titletranshist\" style={{ fontSize: \"18px\", paddingBottom: \"15px\", float: \"left\" }}>\n                  <span\n                    onClick={() => {\n                      props.location.hash === \"#reports\" ? props.history.push(`/reports`) : history.goBack();\n                    }}\n                    title=\"Back\"\n                  >\n                    <i\n                      className=\"fa fa-arrow-left\"\n                      style={{ color: \"#ddd\", marginRight: \"5px\", ariaHidden: true, cursor: \"pointer\" }}\n                    ></i>\n                  </span>\n                  &nbsp;{get(vendorData, \"Vendor Name\", \"\")}\n                </div>\n              </div>\n            </div>\n\n            {showChart ? (\n              chartTotal ? (\n                <div className=\"row\">\n                  <div className=\"col-md-12 d-flex justify-content-center pl-2\">\n                    <DonutChart\n                      onRecordClick={(record) => {\n                        setpage(1);\n                        setselectedSection(record);\n                      }}\n                      data={chartData}\n                      total={chartTotal}\n                      selectedSection={selectedSection}\n                    />\n                    <span className=\"mt-3 ml-2\">\n                      {chartData.map((x, i) =>\n                        get(x, \"value\", \"\") ? (\n                          <div\n                            className=\"col-md-12 p-2 cursour-pointer\"\n                            onClick={() => {\n                              setpage(1);\n                              setselectedSection(x);\n                            }}\n                          >\n                            <span\n                              className={`ml-2 mr-2 donutchart-legend-dot`}\n                              style={{\n                                backgroundColor: `${get(x, \"line-color\", COLORS[i % 8])}`,\n                              }}\n                            />\n                            <span>\n                              {`${get(x, \"name\", \"-\")} `}({getFAWC(get(x, \"value\", \"\"))})\n                            </span>\n                          </div>\n                        ) : (\n                          \"\"\n                        )\n                      )}\n                    </span>\n                  </div>\n                </div>\n              ) : (\n                <PieChartPlaceholder />\n              )\n            ) : (\n              <CustomSpinner isfullscreen />\n            )}\n            <Tabs activeKey={activeKey} onSelect={(k) => setactiveKey(k)}>\n              <Tab eventKey=\"invoiceList\" title=\"Invoice List\">\n                <div className=\"row mt-3\">\n                  <div className=\"col-md-12\">\n                    <div className=\"titletranshist\">\n                      <div className=\"pull-left\">Vendor Invoices</div>\n                      <div className=\"dropdown pull-right mb-2\">\n                        <span\n                          className=\"btn dropdown-toggle btn-primary\"\n                          role=\"button\"\n                          id=\"\"\n                          data-toggle=\"dropdown\"\n                          aria-haspopup=\"true\"\n                          aria-expanded=\"false\"\n                          onClick={() => setshowexport(true)}\n                        >\n                          Export\n                        </span>\n                        <ClickAwayListener onClickAway={setshowexport}>\n                          <div\n                            className={`dropdown-menu dropdown-menu-right payexpdroplist ${showexport && \"show\"}`}\n                            aria-labelledby=\"dropdownMenuLink\"\n                            id=\"\"\n                          >\n                            <CSVLink\n                              data={ExportCSV(invoiceList)}\n                              filename={`${get(vendorData, \"Vendor Name\", \"\")} ${moment().format(\n                                \"MMMM Do YYYY-h:mm:ss-a\"\n                              )}.csv`}\n                            >\n                              Export CSV\n                            </CSVLink>\n                            <span\n                              className=\"cursour-pointer\"\n                              style={{ fontSize: 12, float: \"right\", marginRight: \"10px\" }}\n                              onClick={() => ExportXLSX(ExportCSV(invoiceList))}\n                            >\n                              Export Excel\n                            </span>\n                          </div>\n                        </ClickAwayListener>\n                      </div>\n                    </div>\n                    <br />\n                    {isrowselected && (\n                      <div\n                        style={{\n                          // height: 92,\n                          borderRadius: 4,\n                        }}\n                        className=\"pl-1 custom-table-header w-100 btn-group row\"\n                      >\n                        <span className=\"pull-left mt-3 pt-1 col-md-1\" style={{ width: 54 }}>\n                          <div\n                            onClick={(e) => {\n                              const newvalue = !(invoiceList && !invoiceList.find((x) => !x.isselected));\n                              setinvoiceList(invoiceList.map((x) => ({ ...x, isselected: newvalue })));\n                            }}\n                          >\n                            <input\n                              className=\"md-checkbox\"\n                              style={{ marginLeft: 16, marginTop: 1 }}\n                              type=\"checkbox\"\n                              checked={get(invoiceList, \"[0]\", \"\") && !invoiceList.find((x) => !x.isselected)}\n                            />\n                          </div>\n                        </span>\n                        <span className=\"col-md-9 pb-2 pl-0 sm-custom-spacing\">\n                          {/* // Keeping this code for now  */}\n                          <span\n                            onClick={() => !ispayplandisabled && setshowpayIQDateModal(true)}\n                            className={`btn btn-sm btn-primary ${ispayplandisabled && \"disabled\"}`}\n                            data-toggle=\"modal\"\n                            data-target=\"#myModal\"\n                          >\n                            <i className=\"fa fa-calendar mr-1\" aria-hidden=\"true\" />\n                            PayIQ Date\n                          </span>\n                          {/* <OverlayTrigger placement=\"top\" overlay={<Tooltip>Update PayIQ</Tooltip>}>\n                            <i\n                              onClick={() => !ispayplandisabled && setshowpayIQDateModal(true)}\n                              className={`pt-2 fa-fw fa fa-calendar ${\n                                ispayplandisabled ? \"text-secondary\" : \"text-primary\"\n                              }`}\n                            />\n                          </OverlayTrigger> */}\n\n                          <span\n                            onClick={() => {\n                              setshowNoteModal(true);\n                              setisinvoicelevelnote(true);\n                            }}\n                            className=\"btn btn-sm btn-primary\"\n                            data-toggle=\"modal\"\n                            data-target=\"#myModal2\"\n                          >\n                            <i className=\"fa fa-pencil mr-1\" aria-hidden=\"true\" /> Notes{\" \"}\n                          </span>\n                          {/* <OverlayTrigger placement=\"top\" overlay={<Tooltip>Notes</Tooltip>}>\n                            <i\n                              onClick={() => {\n                                setshowNoteModal(true);\n                                setisinvoicelevelnote(true);\n                              }}\n                              className={`pt-2 fa-fw fa fa-pencil ${false ? \"text-secondary\" : \"text-primary\"}`}\n                            />\n                          </OverlayTrigger> */}\n\n                          <span\n                            onClick={() => {\n                              setemailData({\n                                show: true,\n                                to: get(fulldata, \"detail.email\", \"\"),\n                                body: prePopulatedBody(),\n                                onSave: onEmailSave,\n                              });\n                            }}\n                            className=\"btn btn-sm btn-primary\"\n                            data-toggle=\"modal\"\n                            data-target=\"#myModal5\"\n                          >\n                            <i className=\"fa fa-envelope mr-1\" aria-hidden=\"true\" /> Email{\" \"}\n                          </span>\n                          {/* <OverlayTrigger placement=\"top\" overlay={<Tooltip>Email</Tooltip>}>\n                            <i\n                              onClick={() => {\n                                setemailData({\n                                  show: true,\n                                  to: get(fulldata, \"detail.email\", \"\"),\n                                  body: prePopulatedBody(),\n                                  onSave: onEmailSave,\n                                });\n                              }}\n                              className={`pt-2 fa-fw fas fa-envelope ${false ? \"text-secondary\" : \"text-primary\"}`}\n                            />\n                          </OverlayTrigger> */}\n\n                          {fe_config.MODE === \"DEV\" && (\n                            <span\n                              onClick={() => {\n                                props.history.push(\"/vendors/payments\");\n                              }}\n                              className=\"btn btn-sm btn-primary\"\n                            >\n                              <i className=\"far fa-credit-card mr-1\" /> Make payment{\" \"}\n                            </span>\n                          )}\n                          {/* {fe_config.MODE === \"DEV\" && (\n                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>Make Payment</Tooltip>}>\n                              <i\n                                onClick={() => {\n                                  props.history.push(\"/vendors/payments\");\n                                }}\n                                className={`pt-2 fa-fw fas fa-credit-card ${false ? \"text-secondary\" : \"text-primary\"}`}\n                              />\n                            </OverlayTrigger>\n                          )} */}\n                          <span\n                            onClick={() => !ispayplandisabled && setPlanModal(true)}\n                            className={`btn btn-sm btn-primary ${ispayplandisabled && \"disabled\"}`}\n                          >\n                            <i className=\"far fa-calendar-plus mr-1\" /> Payment plan{\" \"}\n                          </span>\n                          {/* <br /> */}\n                          {/* <OverlayTrigger placement=\"top\" overlay={<Tooltip>Payment Plan</Tooltip>}>\n                            <i\n                              onClick={() => !ispayplandisabled && setPlanModal(true)}\n                              className={`pt-2 fa-fw fas fa-calendar-plus ${\n                                ispayplandisabled ? \"text-secondary\" : \"text-primary\"\n                              }`}\n                            />\n                          </OverlayTrigger> */}\n\n                          <span\n                            onClick={() => !ispayplandisabled && fastForwardPayiq(\"week\")}\n                            className={`btn btn-sm btn-primary ${ispayplandisabled && \"disabled\"}`}\n                          >\n                            <i className=\"fas fa-play mr-1\" /> Week{\" \"}\n                          </span>\n                          {/* <OverlayTrigger placement=\"top\" overlay={<Tooltip>PayIQ Week</Tooltip>}>\n                            <i\n                              onClick={() => !ispayplandisabled && fastForwardPayiq(\"week\")}\n                              className={`pt-2 fa-fw fas fa-play ${ispayplandisabled ? \"text-secondary\" : \"text-primary\"}`}\n                            />\n                          </OverlayTrigger> */}\n\n                          <span\n                            onClick={() => !ispayplandisabled && fastForwardPayiq(\"month\")}\n                            className={`btn btn-sm btn-primary ${ispayplandisabled && \"disabled\"}`}\n                          >\n                            <i className=\"fas fa-forward mr-1\" /> Month{\" \"}\n                          </span>\n                          {TokenManager.getIsPayAdmin() && <span\n                            onClick={deletePayIq}\n                            className={`btn btn-sm btn-primary ${!TokenManager.getIsPayAdmin && \"disabled\"}`}\n                          >\n                            <i\n                              class=\"fa fa-trash-o\"\n                              aria-hidden=\"true\"\n                              style={{ fontSize: \"15px\" }}\n                            /> Delete invoice{\" \"}\n                          </span>}\n                          {/* <OverlayTrigger placement=\"top\" overlay={<Tooltip>PayIQ Month</Tooltip>}>\n                            <i\n                              onClick={() => !ispayplandisabled && fastForwardPayiq(\"month\")}\n                              className={`pt-2 fa-fw fas fa-forward ${\n                                ispayplandisabled ? \"text-secondary\" : \"text-primary\"\n                              }`}\n                            />\n                          </OverlayTrigger> */}\n                        </span>\n                        <span className=\"col-md-2\">\n                          <span className=\"total-amount-wrapper in-col mt-2\">\n                            <strong>Total: </strong>\n                            <span>\n                              {convertAmount(\n                                Math.round(\n                                  invoiceList\n                                    .filter((d) => d.isselected)\n                                    .reduce((a, b) => +a + +(b.total_amount_due || b.invoice_amount), 0)\n                                )\n                              )}\n                            </span>\n                          </span>\n                        </span>\n                      </div>\n                    )}\n                    <br />\n                    <div className=\"payablenewtable paytable table-responsive\" style={{ overflowY: \"hide\" }}>\n                      <ReactTable\n                        {...tableProps}\n                        minRows={invoiceList.length > 20 ? 20 : invoiceList.length}\n                        resizable={true}\n                        showPagination={false}\n                        noDataText={isFetching ? \"\" : \"No data found\"}\n                        loading={isFetching}\n                        getTrProps={(state, rowInfo, column) => ({\n                          onClick: (e) => {\n                            window.open(\n                              `${window.location.origin}/payables/${get(rowInfo.original, \"id\", \"-\")}`,\n                              \"_self\"\n                            );\n                          },\n                        })}\n                        columns={columns}\n                        data={invoiceList || []}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"filterthree\">\n                    <div className=\"pull-right\">\n                      <button\n                        className=\"btn btn-primary mr-2 width-94px\"\n                        disabled={page === 1}\n                        onClick={Decrement}\n                      >\n                        Previous\n                      </button>\n                      <button\n                        className=\"btn btn-primary width-94px\"\n                        disabled={invoiceList && invoiceList.length < 20}\n                        onClick={Increment}\n                      >\n                        Next\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </Tab>\n              <Tab eventKey=\"paymentPlan\" title=\"Payment Plan\">\n                <div className=\"payablenewtable paytable table-responsive mt-3\" style={{ overflowY: \"hide\" }}>\n                  <ReactTable\n                    noDataText=\"No data found\"\n                    minRows={paymentPlanList.length > 20 ? 20 : paymentPlanList.length}\n                    resizable={true}\n                    showPagination={false}\n                    getTrProps={(state, rowInfo, column) => ({\n                      onClick: (e) => {\n                        setEditPlan(rowInfo.original);\n                        setPlanModal(true);\n                      },\n                    })}\n                    columns={planTableColumns}\n                    data={paymentPlanList}\n                  />\n                </div>\n              </Tab>\n            </Tabs>\n          </div>\n        </div>\n      </div>\n      <VendorDetailSidebar\n        vendorData={fulldata}\n        onEmailSave={onEmailSave}\n        setshowNoteModal={setshowNoteModal}\n        vendorid={vendorid}\n        getdata={getdata}\n        collapse={toggleCollapse}\n        handleToggleCollapse={handleToggleCollapse}\n        setisinvoicelevelnote={setisinvoicelevelnote}\n        notesUpdated={notesUpdated}\n        setnotesUpdated={setnotesUpdated}\n        vendorCategoryList={vendorCategoryList}\n      />\n      <PaymentPlanModal\n        invoices={\n          editPlan\n            ? invoiceList.filter((x) => x.status === \"Open\")\n            : invoiceList.filter((x) => x.isselected && x.status === \"Open\" && !x.payment_plan_id)\n        }\n        show={showPlanModal}\n        onHide={setPlanModal}\n        getPaymentPlan={getPaymentPlan}\n        prevData={editPlan}\n        setEditPlan={setEditPlan}\n        setactiveKey={setactiveKey}\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VendorDetails);\n","import React, { useState } from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport '../dashboard/dashboard.css';\nimport './vendors.css';\nimport Payments from \"containers/payments\";\nimport VendorList from \"./vendorList\";\nimport VendorDetails from \"./vendorDetails\";\n\nfunction Vendors(props) {\n    document.title = \"Vendors - Payference\";\n\n    const { history, match } = props;\n    const [selectedpayment, setselectedpayment] = useState(null);\n\n    function changeSelection(data) {\n        setselectedpayment(data);\n        history.push(`vendors/${data.supplier_id}`);\n    }\n\n    return (\n        <Switch>\n          <Route exact path=\"/vendors/payments\" component={() => <Payments {...props} />} />\n            <Route\n                path={`/vendors/:id`}\n                component={() => <VendorDetails {...props} selectedpayment={selectedpayment} />}\n            />\n            <Route path={`${match.path}`} component={() => <VendorList {...props} changeSelection={changeSelection} />} />\n        </Switch>\n    );\n}\n\nconst mapStateToProps = state => ({ login: state.payables });\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Vendors));\n\n\n"],"sourceRoot":""}