{"version":3,"sources":["containers/login/login.js"],"names":["Login","state","showPassword","email","value","isFocused","error","password","formError","onSubmit","e","preventDefault","target","elements","setState","axios","get","Configs","API_URL","auth","username","then","response","TokenManager","set","data","token","setUserName","URL","getUserId","instance","resp","datatemp","setUserData","window","localStorage","setItem","props","history","push","status","location","reload","catch","onChange","name","onBlurr","togglePassword","prevPath","this","sessionStorage","getItem","userdata","JSON","parse","getUserData","clear","document","title","className","alt","src","logo","height","width","style","color","condition","cx","focused","type","id","placeholder","onFocus","onBlur","autoComplete","position","right","role","onClick","cursor","fontSize","to","Component","connect","login"],"mappings":"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","file":"static/js/19.89be6ba7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport cx from \"classnames\";\nimport logo from \"assets/images/logo.jpg\";\nimport If from \"components/If\";\nimport Configs from \"constants/Configs\";\nimport TokenManager from \"utils/TokenManager\";\n\nimport \"./style.scss\";\nimport get from \"lodash/get\";\nimport { instance } from \"actions/axiosInstance\";\nclass Login extends Component {\n  state = {\n    showPassword: false,\n    email: {\n      value: \"\",\n      isFocused: false,\n      error: \"\"\n    },\n    password: {\n      value: \"\",\n      isFocused: false,\n      error: \"\"\n    },\n    formError: \"\"\n  };\n\n  componentDidMount() {\n    if (TokenManager.get()) {\n      let prevPath =\n        get(this.props, \"location.state.from\", \"\") || sessionStorage.getItem(\"loggedOutInSameSession\") || \"/dashboard\";\n      const userdata = JSON.parse(TokenManager.getUserData());\n      if (get(userdata, \"client_id\", \"\") != 10 && prevPath === \"/signup\") {\n        // user is in trail\n        prevPath = \"/dashboard\";\n      } else if (window.sessionStorage.getItem(\"loggedoutUser\") != get(userdata, \"id\", \"\")) {\n        // different user logged in\n        window.sessionStorage.clear();\n        prevPath = \"/dashboard\";\n      }\n      this.props.history.push(prevPath === \"/login\" ? \"/dashboard\" : prevPath);\n      return;\n    }\n    localStorage.clear();\n    document.title = \"Login - Payference\";\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { email, password } = e.target.elements;\n\n    this.setState(\n      {\n        email: {\n          value: email.value,\n          isFocused: false,\n          error: !email.value ? \"required\" : \"\"\n        },\n        password: {\n          value: password.value,\n          isFocused: false,\n          error: !password.value ? \"required\" : \"\"\n        }\n      },\n      () => {\n        const { email, password } = this.state;\n        if (email.value && password.value) {\n          axios\n            .get(`${Configs.API_URL}token`, {\n              auth: {\n                username: this.state.email.value,\n                password: this.state.password.value\n              }\n            })\n            .then(response => {\n              TokenManager.set(response.data.token, response.data[\"expires at\"]);\n              TokenManager.setUserName(this.state.email.value, response.data[\"id\"]);\n\n              let URL = `/client/user?id=${TokenManager.getUserId()}`;\n              instance.get(URL).then(resp => {\n                const datatemp = {\n                  ...response.data,\n                  ...get(resp, \"data.result[0]\", {})\n                };\n                TokenManager.setUserData(datatemp);\n                window.localStorage.setItem(\"loggedin\", get(datatemp, \"id\", \"\"));\n                if (get(datatemp, \"client_id\", \"\") == 10) {\n                  this.props.history.push(\"/signup\");\n                } else if (!response.data.status) {\n                  this.props.history.push(\"/reset-password\");\n                } else {\n                  window.location.reload();\n                }\n              });\n            })\n            .catch(error => {\n              this.setState({\n                formError: \"Invalid Credentials please try again.\"\n              });\n            });\n        }\n      }\n    );\n  };\n\n  onChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: {\n        value,\n        isFocused: true,\n        error: !value ? \"required\" : \"\"\n      }\n    });\n  };\n\n  onBlurr = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: {\n        value,\n        isFocused: false,\n        error: this.state[name].error\n      }\n    });\n  };\n\n  togglePassword = () => {\n    this.setState({\n      showPassword: !this.state.showPassword\n    });\n  };\n\n  render() {\n    const { showPassword, email, password, formError } = this.state;\n\n    return (\n      <div className=\"loginpage-container\">\n        <div className=\"logo\">\n          <img alt=\"loading\" src={logo} height=\"60\" width=\"60\" />\n          <span style={{ color: \"white\" }}> Payference </span>\n        </div>\n        <div className=\"form-widget\">\n          <h2 className=\"title t-global\">Sign In</h2>\n          <If condition={formError}>\n            <span className=\"form-error\">{formError}</span>\n          </If>\n          <form onSubmit={this.onSubmit}>\n            <div className={cx(\"clearfix field-wrapper\", { \"label-active\": email.isFocused })}>\n              <label className={cx(\"float-left\", { focused: email.isFocused })}>\n                <span className={cx(\"label\", { focused: email.isFocused })}>Username</span>\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder={!email.isFocused ? \"Username\" : \"\"}\n                  onFocus={this.onChange}\n                  onChange={this.onChange}\n                  onBlur={this.onBlurr}\n                  autoComplete=\"off\"\n                />\n              </label>\n              <div className=\"float-right\">\n                <span className=\"helptxt\">{email.error}</span>\n              </div>\n            </div>\n            <div className={cx(\"clearfix field-wrapper\", { \"label-active\": password.isFocused })}>\n              <label className={cx(\"float-left\", { focused: password.isFocused })}>\n                <span className={cx(\"label\", { focused: password.isFocused })}>Password</span>\n                <input\n                  id=\"password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  placeholder={!password.isFocused ? \"Password\" : \"\"}\n                  onFocus={this.onChange}\n                  onChange={this.onChange}\n                  onBlur={this.onBlurr}\n                  name=\"password\"\n                  autoComplete=\"off\"\n                />\n              </label>\n              <div className=\"float-right\">\n                <span className=\"helptxt\">{password.error}</span>\n                <span\n                  style={{ position: \"absolute\", right: 0 }}\n                  className=\"show-hide-toggle\"\n                  role=\"presentation\"\n                  onClick={this.togglePassword}\n                >\n                  {showPassword ? (\n                    <i className=\"fa fa-eye\" style={{ cursor: \"pointer\", fontSize: \"15px\" }} title=\"Show Password\" />\n                  ) : (\n                    <i\n                      className=\"fa fa-eye-slash\"\n                      style={{ cursor: \"pointer\", fontSize: \"15px\" }}\n                      title=\"Show Password\"\n                    />\n                  )}\n                </span>\n              </div>\n            </div>\n            <div className=\"link-wrapper clearfix\">\n              <Link to=\"/forgot-password\" className=\"forgot-password float-right t-global\">\n                Forgot your password?\n              </Link>\n            </div>\n            <button className=\"button bg-primary-gradient\" type=\"submit\">\n              Login\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ login: state });\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"],"sourceRoot":""}