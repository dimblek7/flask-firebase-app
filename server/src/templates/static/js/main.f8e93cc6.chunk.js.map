{"version":3,"sources":["handlers/setters.js","utils/TokenManager.js","components/Toaster.js","components/DynamicForm/Functions/setters.js","components/DynamicForm/Fields/Text.js","components/DynamicForm/Fields/Textarea.js","components/DynamicForm/Fields/Integer.js","components/DynamicForm/Fields/Float.js","components/DynamicForm/Fields/Date.js","components/DynamicForm/Fields/Time.js","components/DynamicForm/Fields/DateTime.js","components/DynamicForm/Fields/Select.js","components/DynamicForm/Fields/MultiSelect.js","components/DynamicForm/Fields/CheckBox.js","components/DynamicForm/Fields/Radio.js","components/DynamicForm/Fields/ImageInput.js","components/DynamicForm/Fields/GroupSelect.js","components/DynamicForm/Functions/getters.js","components/DynamicForm/index.js","utils/dates.js","components/SingleDatePicker.js","components/TextareaDropBox.js","components/Email/EmailInput.js","components/Email/EmailCreator.js","components/Table/SelectEditorCell.js","components/DNDContainer.js","handlers/getters.js","constants/Configs/index.js","components/DynamicForm/KEYS.js","constants/ReducersTypes.js","components/DynamicForm/Data/initjson.js","components/ConfirmationBox.js","containers/login/reducer.js","containers/dashboard/reducer.js","containers/payables/reducer.js","containers/receivables/reducer.js","containers/settings/reducer.js","reducers/auth.js","reducers/global.js","combineReducers.js","store.js","components/ClickAwayListener.js","components/Snackbar.js","containers/login/index.js","containers/signup/advanced.js","containers/signup/basic.js","components/CustomPlaidLink.js","containers/signup/linkaccounts.js","containers/signup/index.js","containers/forgetPassword/index.js","containers/resetPassword/index.js","containers/backlog/index.js","containers/purchaseBacklog/index.js","containers/customers/index.js","containers/reports/index.js","containers/insights/index.js","containers/settings/payroll/Currency.js","containers/settings/payroll/Entity.js","containers/settings/payroll/FundingDate.js","containers/settings/payroll/PaySchedule.js","actions/global.js","components/header.js","components/leftnav.js","containers/dashboard/index.js","containers/payables/index.js","containers/payroll/index.js","containers/receivables/index.js","containers/settings/index.js","containers/settings/data/integrations.js","containers/settings/data/jobtable.js","containers/settings/data/backgroundjobs.js","containers/settings/data/index.js","containers/settings/company/profiledetail.js","components/Table/NumberEditorCell.js","containers/settings/company/accounts.js","containers/settings/company/users.js","containers/settings/company/reportConfig.js","containers/settings/company/permissions.js","containers/settings/company/index.js","containers/settings/payables/index.js","containers/settings/profile/profiledetail.js","containers/settings/profile/notification.js","containers/settings/profile/password.js","containers/settings/profile/index.js","containers/settings/receivables/EmailTemplate.js","containers/settings/receivables/CustomTable.js","containers/settings/receivables/index.js","containers/vendors/index.js","routes/navWrapper.js","routes/index.js","index.js","assets/images/logo.jpg","constants/regex.js","utils/index.js","actions/axiosInstance.js","components/Autocomplete.js","components/If.js","components/Preview/DocViewer.js","components/Preview/index.js","components/Table/TextEditorCell.js"],"names":["logout","window","location","pathname","sessionStorage","setItem","TokenManager","getUserId","localStorage","remove","setTimeout","open","origin","handleAPIError","e","console","log","JSON","stringify","get","includes","getItem","idToken","expired_at","SESSION_LENGTH","fe_config","MODE","expired_at_in_seconds","Math","round","Date","getTime","removeItem","userName","userid","userData","parse","loggedInUserData","getUserData","Toaster","message","type","time","toast","success","position","POSITION","TOP_RIGHT","autoClose","error","info","setDynamicForm","data","ReducersTypes","DYNAMIC_FORM","payload","addDynamicForm","ADD_DYNAMIC_FORM","TextComp","props","React","useState","focused","field","updateData","value","iserr","placeholder","label","helperText","className","disabled","maxLength","id","inputClass","fielddata","labelClass","onChange","event","target","maxlength","TextAreaComp","IntegerComp","min","max","tempprops","parseInt","FloatComp","parseFloat","DateComp","SingleDatePicker","labelFormat","startDate","moment","undefined","getSelectedDates","date","newvalue","format","TimeComp","DateTimeComp","SelectComponent","options","selectedOption","isDisabled","map","x","name","MultiSelectComp","idonly","handleChange","checked","onClick","RadioComp","labelclass","iconclass","setFocused","variant","onFocus","onBlur","Component","find","opt","displayvalue","fetchAllFormsFunction","store","createstore","getState","showAllErrorsFunction","formKey","myForm","forms","formIndex","findIndex","form","fields","showAllErr","dispatch","fetchMyForm","deleteMyForm","filter","validateMyForm","forEach","errorText","DynamicForm","getField","bind","this","RESULT","PROPS","typeid","KEYS","Text","TextArea","Integer","Float","Time","DateTime","Select","CheckBox","Radio","MultiSelect","ImageInput","GroupSelect","numberOfColumns","fieldClass","numberOfColumnsClass","1","2","3","connect","state","dynamicformReducer","bindActionCreators","getUTCDate","utc","getFormattedDate","ip_format","op_format","ts_str","ts","timeformat","str_ts","str","toDate","betweenDays","startdate","enddate","isMoment","res","duration","diff","asDays","getDates","setState","nextProps","parentEl","selectedDates","singleDatePicker","endDate","autoApply","onApply","picker","style","background","cursor","padding","border","minWidth","TextareaDropBox","onDrop","onTextChange","charLimit","body","useDrop","accept","NativeTypes","FILE","drop","item","monitor","collect","isOver","canDrop","isActive","ref","editor","ClassicEditor","config","toolbar","getData","EmailInput","trim","isValid","items","getEmailId","toString","handleKeyDown","evt","key","preventDefault","handleDelete","i","handlePaste","emails","clipboardData","match","toBeAdded","email","isInList","isEmail","emailRegEx","test","Chip","size","onDelete","cx","onKeyDown","onPaste","setemailData","EMAIL_DATA","resetemail","EMAIL_RESET","show","from","to","cc","subject","onSave","files","fetchingInvoices","updatedFiles","totalSize","file","Modal","backdrop","onHide","Header","closeButton","Title","Body","split","pattern","DNDContainer","length","data-cy","multiple","document","getElementById","click","title","filetTypes","fileName","Card","height","isbase64","previewInNewTab","convertDecimalNo","content","URL","createObjectURL","index","d","removeFiles","Footer","Button","SelectEditorCell","editmode","showpencil","setEditMode","mode","updateValue","newprops","iscellcomponent","onClickAway","onSubmit","selected","focus","onMouseEnter","onMouseLeave","backend","HTML5Backend","children","getUrlExtension","url","pop","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","slice","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","push","blob","Blob","useWindowSize","setSize","useLayoutEffect","updateSize","innerWidth","innerHeight","addEventListener","removeEventListener","Development","SIGNUP","LOGIN","AUTH","DASHBOARD","PAYABLES","NAVIGATION","NAVIGATION_RESET","PAYMENT_METHODS","RECEIVABLES","SETTINGS","UPDATE_RECEIVABLES_DATA","SNACKBAR_DATA","SNACKBAR_MSG","SNACKBAR_RESET","CONFIRMATION_BOX","CONFIRMATION_BOX_RESET","PREVIEW_DOCUMENT","RESET_PREVIEW_DOCUMENT","required","defaultValue","customiserr","setconfirmationboxData","resetconfirmationboxData","confirmationbox","msg","handleClose","reason","zIndex","autofocus","login","action","dashboard","payablesData","receivablesData","isFetching","payables","receivables","settings","auth","token","initsnackbar","initconfirmationbox","initnavigation","openleftnav","initemail","getUserEmail","initpreview","ext","snackbar","count","navigation","preview","combineReducers","global","middleware","thunk","createLogger","collapsed","createStore","reducers","applyMiddleware","ClickAwayListener","wrapperRef","useRef","handleClickOutside","current","contains","useEffect","useOutsideAlerter","useStyles","makeStyles","theme","root","width","marginTop","spacing","close","variantBackgrounds","warning","bgclass","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","aria-hidden","PageRef","lazy","C","p","fallback","Child","Page","Advanced","postdata","setpostdata","update","alt","src","logo","color","changeActiveIndex","company_type","industry","phone","employee_size","apspend","erp_software","postData","getUserName","bodyFormData","FormData","set","instanceMultipart","post","then","response","catch","err","Login","showPassword","isFocused","company","password","confirmPassword","formError","axios","Configs","API_URL","username","setUserName","instance","resp","datatemp","setUserData","passwordRegEx","onBlurr","togglePassword","showConfirmPassword","autoComplete","right","role","fontSize","CustomPlaidLink","saveAccounts","public_token","selectedAccounts","isselected","accounts","account_id","put","showModal","setallaccounts","acc","allaccounts","handleClick","handleOnSuccess","metadata","getAccount","transactions","columns","accessor","Cell","stopPropagation","updatedallaccounts","marginLeft","defaultChecked","sortable","filterable","noDataText","minRows","resizable","showPagination","clientName","env","PLAID_env","product","publicKey","PLAID_publicKey","onExit","handleOnExit","onSuccess","classNaCustomPlaidLinkme","Linkaccounts","showpopup","setshowpopup","setshowModal","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","minHeight","activeIndexClasses","0","classes","styles","activeIndex","Carousel","slide","indicators","Item","ForgotPassword","elements","alert","history","If","condition","ResetPassword","urlToken","getParameterByName","chechPasswordEquality","checkPasswordStrength","random","status","Entity","method","clear","paddingBottom","float","marginRight","href","marginBottom","textAlign","POSTDATA","currency","allentities","line","isLoading","updatepostdata","deleteRecord","delete","getdata","records","renderEditableRow","prevData","Fragment","colspan","entity","setNavigation","searchList","setSearchList","isSearchFetching","setIsSearchFetching","debounceMethod","debounce","text","search","instanceWithRetry","final","result","sort","a","b","model_type","routes","Autocomplete","suggestions","uniqBy","s","display_string","inputClassName","inputWrapperClassName","getSelected","toLowerCase","NAV","ilink","route","localStorageKey","subStorages","subNav","withRouter","clearOtherLocalStorages","currentlocalStorageKey","element","storeKey","currentPage","Accordion","defaultActiveKey","el","Toggle","as","eventKey","activeClassName","isdisabled","Tooltip","placement","data-placement","Collapse","Integrations","apQueryEP","setApQueryEp","arQueryEP","setArQueryEp","obQueryEP","setObQueryEp","erp","setERP","account","netSuiteKey","consumerSecret","tokenKey","tokenSecret","netSuite","setNetSuiteConfig","getIsAdmin","getIntegration","erp_endpoint_ap","erp_endpoint_ar","erp_endpoint_ob","erp_type","ns_account","ns_consumer_key","ns_consumer_secret","ns_token_key","ns_token_secret","encodeValues","repeat","substr","requestObject","initialState","editLine","editableData","second","minute","hour","day","day_of_week","daysList","CustomTable","resetState","addNewRow","submitEntry","onInput","renderRows","reloadListing","header","colSpan","Backgroundjobs","getJobs","jobs","Data","expand","hash","address","companyData","setCompanyData","setIsProcessing","setIsPageLoading","user","getValue","department","NumberEditorCell","getShortNumber","PREV_URL","account_number","client_id","setAccount","accountData","setAccountData","selectedDate","setselectedDate","setIsFetching","setShow","auto_convert_currencies","setauto_convert_currencies","base_currency","setbase_currency","scrollIntoView","temp_accounts_data","amount","recordid","rows","thisaccdata","bank_account_id","sortBy","clearAccount","bankname","accountno","routingno","prevState","TextEditorCell","original","left","subtract","top","add","getFAWC","reduce","Number","updatebalance","v","updatedAccData","multiplier","convertedvalue","toFixed","updatedaccountData","data-target","margin","ismanual","pageSize","loading","getTrGroupProps","rowInfo","column","bankDetails","Plaid","create","usermodel","setUser","addInProgress","setaddInProgress","isexpanded","setisexpanded","selectedUser","setselectedUser","isAdmin","newPassword","userPassword","setUserPassword","isProcessing","setShowConfirmPassword","showError","setshowError","getUser","onChangeNewUser","onBlurrNewUser","class","roles","weekCount","setWeekCount","startDay","setWeekStartDay","reportInterval","setreportInterval","monthCount","setMonthCount","weekActualsCount","setWeekActualsCount","monthActualsCount","setMonthActualsCount","getCompany","report_num_weeks","report_start_day_of_week","report_num_months","report_interval","report_num_actuals_weeks","report_num_actuals_months","toLocaleLowerCase","htmlFor","ExportCSV","Supplier","InvoiceNo","DueDate","Recommendation","InvoiceDate","AmountDue","PayableSettings","setshowExport","flag","showexport","getVendorCategory","isVendorCategoryLoading","vendorCategoryList","is_selected","selectedData","internal_id","isExistingId","some","readOnly","paginate","array","page_size","page_number","handlePagination","currPage","newPage","replace","disablePrev","disableNext","filename","csvData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","FileSaver","ExportXLSX","invoiceOption","for","isPageLoading","initjson","updatedpostData","arr","selectedShift","outputconverter","currentPassword","path","component","EmailTemplateModal","prevProps","defaultData","snapshot","handleModal","days","period","customer_id","template_id","reminderType","is_recurring","ar_age_in_days","frequency_in_days","showEmailModal","corporate_entity_id","is_enabled","selectedCustomer","handleEmailModal","companyList","customerList","emailTemplateList","isCustomerListLoading","searchCustomer","dummyArray","fill","dropdownData","customer","abs","getName","customerListNames","patch","deleteEntry","handleAddNewRow","requestType","isEqual","submitEmailTemplateEntry","renderRecurranceTable","addNewRecurranceRow","rowData","hidePagination","ceil","getCompanyLevelReminder","getEmailTemplates","getGlobalReminder","globalReminder","receivable_rem_enabled","getCustomerCategory","isCustCategoryLoading","customerCategoryList","getCustomerNames","getCompanyNames","companyListing","remindersData","reverse","emailTemplateData","toggleGlobalAutoReminder","customerListing","inputNumbers","querySelectorAll","invalidChars","recurringTableHeader","NavWrapper","exact","payroll","customers","vendors","reports","insights","backlog","PurchaseBacklog","profile","payablesSettings","receivablesSettings","PaySchedule","FundingDate","Currency","ProtectedRoute","rest","render","isAfterWarnEvent","API_IN_PROGRESS","Root","events","warn","resetTimeout","storageChange","reload","newValue","warnTimeout","clearTimeout","logoutTimeout","getExpiredAt","REFRESH_TOKEN_TIME","warnTime","logoutTime","hasFocus","destroy","ConfirmationBox","EmailCreator","Preview","signup","forgetPassword","resetPassword","configure","draggable","ReactDOM","module","exports","getFormattedNumber","num","skiproundoff","isnumfloat","isNaN","toLocaleString","kFormatter","sign","mFormatter","bFormatter","appendCurrency","toShort","isnegative","results","RegExp","exec","decodeURIComponent","convertAmount","isNegative","roundAmount","isInteger","BASE_URL","transformURL","param","join","setAuthorizationToken","ConvertHeadersForBackend","headers","Authorization","baseURL","transformRequest","interceptors","request","use","Promise","reject","originalRequest","resolve","retryRequest","userInput","currentTarget","activeSuggestion","showSuggestions","hide","typing","filteredSuggestions","keyCode","scrollList","querySelector","ul","elHeight","clientHeight","scrollTop","viewport","elOffset","firstTimeFetch","suggestionsListComponent","suggestion","ImgView","docUrl","overflow","objectFit","PdfView","PptView","DocView","DocViewer","getDocViewFromExt","setPreview","resetPreview","doc","write","encodeURI"],"mappings":"qHAAA,gGAGaA,EAAS,WAEa,WAA7BC,OAAOC,SAASC,WAClBF,OAAOG,eAAeC,QAAQ,yBAA0BJ,OAAOC,SAASC,UACxEF,OAAOG,eAAeC,QAAQ,gBAAiBC,IAAaC,cAG9DN,OAAOO,aAAaH,QAAQ,YAAaC,IAAaC,aACtDD,IAAaG,SAEbC,YAAW,WACoB,WAA7BT,OAAOC,SAASC,UAAyBF,OAAOU,KAAP,UAAeV,OAAOC,SAASU,OAA/B,UAA+C,WACvF,MAGQC,EAAiB,SAACC,GAE7BC,QAAQC,IAAI,UAAWC,KAAKC,UAAUJ,IAClCK,IAAIL,EAAG,UAAW,KAAKM,SAAS,QAAQpB,M,oJCfzBM,E,mGAEjB,OAAOE,aAAaa,QAAQ,U,0BAGnBC,EAASC,GAClB,GAAID,EAAS,CAEX,IAAME,EAAoC,SAAnBC,IAAUC,KAAmB,MAA+B,KAC/EC,EAAwBC,KAAKC,OAAM,IAAIC,MAAOC,WAAaP,EAC/DhB,aAAaH,QAAQ,aAAcsB,GACnCnB,aAAaH,QAAQ,OAAQiB,M,+BAK/Bd,aAAawB,WAAW,U,kCAGPC,EAAUC,GACvBD,IACFzB,aAAaH,QAAQ,WAAY4B,GACjCzB,aAAaH,QAAQ,SAAU6B,M,kCAIhBC,GACbA,GACF3B,aAAaH,QAAQ,mBAAoBY,KAAKC,UAAUiB,M,oCAI1D,OAAO3B,aAAaa,QAAQ,qBAAuB,O,qCAInD,IAAMc,EAAWlB,KAAKmB,MAAM5B,aAAaa,QAAQ,qBAAuB,MACxE,OAAOF,IAAIgB,EAAU,QAAS,M,mCAI9B,IAAME,EAAmBpB,KAAKmB,MAAM9B,EAAagC,eACjD,OAAOnB,IAAIkB,EAAkB,QAAS,IAAIjB,SAAS,UAAYD,IAAIkB,EAAkB,QAAS,IAAIjB,SAAS,aAAqD,IAAtCD,IAAIkB,EAAkB,OAAQ,KAAmD,IAAtClB,IAAIkB,EAAkB,OAAQ,M,sCAInM,IAAMA,EAAmBpB,KAAKmB,MAAM9B,EAAagC,eACjD,OAAOnB,IAAIkB,EAAkB,QAAS,IAAIjB,SAAS,c,oCAInD,OAAOZ,aAAaa,QAAQ,c,qCAG5B,OAAOb,aAAaa,QAAQ,gB,kCAG5B,OAAOb,aAAaa,QAAQ,c,sCC/DhC,iBA6BekB,IA1BC,SAACC,EAASC,EAAMC,GAC9B,OAAQD,GACN,IAAK,UACHE,IAAMC,QAAQJ,EAAS,CACrBK,SAAUF,IAAMG,SAASC,UACzBC,UAAWN,GAAQ,MAErB,MACF,IAAK,QACHC,IAAMM,MAAMT,EAAS,CACnBK,SAAUF,IAAMG,SAASC,UACzBC,UAAWN,GAAQ,MAErB,MACF,IAAK,OACHC,IAAMO,KAAKV,EAAS,CAClBK,SAAUF,IAAMG,SAASC,UACzBC,UAAWN,GAAQ,MAErB,MACF,QACEC,YAAM,6B,mKCtBCQ,EAAiB,SAACC,GAAD,MAAW,CACrCX,KAAMY,IAAcC,aACpBC,QAASH,IAGEI,EAAiB,SAACJ,GAAD,MAAW,CACvCX,KAAMY,IAAcI,iBACpBF,QAASH,I,aCLE,SAASM,EAASC,GAAQ,IAAD,EACRC,IAAMC,UAAS,GADP,mBAC/BC,EAD+B,KAE9BC,GAF8B,KAERJ,EAAtBI,OAAOC,EAAeL,EAAfK,WAFuB,EAalCD,EATFE,aAJoC,MAI5B,GAJ4B,IAalCF,EARFG,aALoC,MAK5B,aAL4B,IAalCH,EAPFI,mBANoC,MAMtB,GANsB,IAalCJ,EANFK,aAPoC,MAO5B,GAP4B,IAalCL,EALFM,kBARoC,MAQvB,GARuB,KAalCN,EAJFO,UAIEP,EAHFQ,iBAVoC,WAalCR,EAFFS,iBAXoC,MAWxB,KAXwB,IAalCT,EADFU,UAZoC,MAY/B,OAZ+B,EAiBtC,IAAMC,EAAaR,EAAM,CAAES,UAAWZ,IAAW,0BAA4B,eACvEa,EAAaV,EAAM,CAAES,UAAWZ,IAAW,cAAgB,GAEjE,OACE,6BACE,yBAAKO,UAAS,UAAKM,IAAeR,GAClC,2BACEE,UAAWI,EACXjC,KAAK,OACLgC,GAAIA,EACJI,SAbN,SAAsBC,GACpBd,EAAW,CAAES,GAAIV,EAAMU,GAAIR,MAAOa,EAAMC,OAAOd,SAa3CE,YAAaA,EACbF,MAAOA,EACPhB,MAAOiB,EAAM,CAAES,UAAWZ,IAC1BM,WAAYP,GAAWO,EACvBE,SAAUA,EACVS,UAAWR,KCjCJ,SAASS,EAAatB,GAAQ,IAAD,EACZC,IAAMC,UAAS,GADH,mBAElCE,GAFkC,UAEZJ,EAAtBI,OAAsBJ,EAAfK,WAUXD,EARFE,MAQEF,EAPFG,MAOEH,EANFd,MAMEc,EALFI,YAKEJ,EAJFK,MAIEL,EAHFM,WAGEN,EAFFO,UAEEP,EADFQ,SAKF,OAAO,KChBM,SAASW,EAAYvB,GAAQ,IAAD,EACXC,IAAMC,UAAS,GADJ,mBAClCC,EADkC,KAEjCC,GAFiC,KAEXJ,EAAtBI,OAAOC,EAAeL,EAAfK,WAF0B,EAarCD,EATFE,aAJuC,MAI/B,GAJ+B,IAarCF,EARFG,aALuC,MAK/B,aAL+B,IAarCH,EAPFI,mBANuC,MAMzB,GANyB,IAarCJ,EANFK,aAPuC,MAO/B,GAP+B,IAarCL,EALFM,kBARuC,MAQ1B,qBAR0B,KAarCN,EAJFO,UAIEP,EAHFQ,SAGER,EAFFoB,YAXuC,MAWjC,EAXiC,IAarCpB,EADFqB,WAZuC,MAYjC,KAZiC,EA8BzC,IAAMC,EAAS,eAAQ1B,GACvByB,IAAQC,EAAUD,IAAMA,GACxBD,IAAQE,EAAUF,IAAMA,GACxB,IAAMT,EAAaR,EAAM,CAAES,UAAWZ,IAAW,0BAA4B,eACvEa,EAAaV,EAAM,CAAES,UAAWZ,IAAW,cAAgB,GAEjE,OACE,6BACE,yBAAKO,UAAS,UAAKM,IAAeR,GAClC,2BACEE,UAAWI,EACXjC,KAAK,SACLoC,SA3BN,SAAsBC,GACpBd,EAAW,CAAES,GAAIV,EAAMU,GAAIR,MAAOa,EAAMC,OAAOd,MAAQqB,SAASR,EAAMC,OAAOd,OAAS,QA2BlFE,YAAaA,EACbF,MAAOA,EACPhB,MAAOiB,EAAM,CAAES,UAAWZ,IAC1BoB,IAAKA,EACLC,IAAKA,EACLf,WAAYP,GAAWO,KChDhB,SAASkB,EAAU5B,GAAQ,IAAD,EACTC,IAAMC,UAAS,GADN,mBAChCC,EADgC,KAE/BC,GAF+B,KAETJ,EAAtBI,OAAOC,EAAeL,EAAfK,WAFwB,EAanCD,EATFE,aAJqC,MAI7B,GAJ6B,IAanCF,EARFG,aALqC,MAK7B,aAL6B,IAanCH,EAPFI,mBANqC,MAMvB,GANuB,IAanCJ,EANFK,aAPqC,MAO7B,GAP6B,IAanCL,EALFM,kBARqC,MAQxB,qBARwB,KAanCN,EAJFO,UAIEP,EAHFQ,SAGER,EAFFoB,YAXqC,MAW/B,EAX+B,IAanCpB,EADFqB,WAZqC,MAY/B,KAZ+B,EA8BvC,IAAMC,EAAS,eAAQ1B,GACvByB,IAAQC,EAAUD,IAAMA,GACxBD,IAAQE,EAAUF,IAAMA,GAExB,IAAMT,EAAaR,EAAM,CAAES,UAAWZ,IAAW,0BAA4B,eACvEa,EAAaV,EAAM,CAAES,UAAWZ,IAAW,cAAgB,GAEjE,OACE,6BACE,yBAAKO,UAAS,UAAKM,IAAeR,GAClC,2BACEE,UAAWI,EACXjC,KAAK,SACLoC,SA5BN,SAAsBC,GACpBd,EAAW,CAAES,GAAIV,EAAMU,GAAIR,MAAOa,EAAMC,OAAOd,MAAQuB,WAAWV,EAAMC,OAAOd,OAAS,QA4BpFE,YAAaA,EACbF,MAAOA,EACPhB,MAAOiB,EAAM,CAAES,UAAWZ,IAC1BoB,IAAKA,EACLC,IAAKA,EACLf,WAAYP,GAAWO,KAMxB,I,0BCpDQ,SAASoB,EAAS9B,GAC/B,IADsC,EAGRC,IAAMC,UAAS,GAHP,mBAI9BE,GAJ8B,UAIRJ,EAAtBI,OAAOC,EAAeL,EAAfK,WAJuB,EAclCD,EARFE,aANoC,MAM5B,GAN4B,IAclCF,EAPFG,aAPoC,MAO5B,aAP4B,KAclCH,EANFI,YAMEJ,EALFK,cAToC,MAS5B,GAT4B,KAclCL,EAJFM,WAIEN,EAHFoB,IAGEpB,EAFFqB,IAEErB,EADFO,kBAboC,MAaxB,GAbwB,EAoBnBJ,EAAM,CAAES,UAAWZ,IAAtC,IACMa,EAAaV,EAAM,CAAES,UAAWZ,IAAW,cAAgB,GAEjE,OACE,yBAAKO,UAAS,UAAKA,EAAL,wBACZ,yBAAKA,UAAS,UAAKM,IAAeR,GAClC,kBAACsB,EAAA,EAAD,CACEC,YAAY,eACZC,UAAW3B,EAAQ4B,IAAO,IAAI/D,KAAKmC,SAAU6B,EAC7CC,iBAAkB,SAACC,GAAD,OAbFC,EAayBD,EAAKE,OAAO,mBAZzDlC,EAAW,CAAES,GAAIV,EAAMU,GAAIR,MAAOgC,IADpC,IAAsBA,MCnBT,SAASE,EAASxC,GAAQ,IAAD,EACRC,IAAMC,UAAS,GADP,mBAE9BE,GAF8B,UAERJ,EAAtBI,OAAsBJ,EAAfK,WAC8FD,EAArGE,MAAqGF,EAAzFG,MAAyFH,EAAlEI,YAAkEJ,EAAhDK,MAAgDL,EAApCM,WAAoCN,EAAnBO,UAK1F,OAAO,KCRM,SAAS8B,EAAazC,GAAQ,IAAD,EACZC,IAAMC,UAAS,GADH,mBAElCE,GAFkC,UAEZJ,EAAtBI,OAAsBJ,EAAfK,WASXD,EAPFE,MAOEF,EANFG,MAMEH,EALFI,YAKEJ,EAJFK,MAIEL,EAHFM,WAGEN,EAFFoB,IAEEpB,EADFqB,IAOF,OAAO,KAsBF,ICeQiB,EAtDgB,SAAA1C,GAAU,IAAD,EACRC,IAAMC,UAAS,GADP,mBAC/BC,EAD+B,KAG9BC,GAH8B,KAGRJ,EAAtBI,OAAOC,EAAeL,EAAfK,WAHuB,EAYlCD,EAPFE,aALoC,MAK5B,GAL4B,IAYlCF,EANFG,aANoC,MAM5B,aAN4B,IAYlCH,EALFI,mBAPoC,MAOtB,SAPsB,IAYlCJ,EAJFK,aARoC,MAQ5B,SAR4B,IAYlCL,EAHFM,kBAToC,MASvB,GATuB,IAYlCN,EAFFuC,eAVoC,MAU1B,GAV0B,IAYlCvC,EADFQ,gBAXoC,SAkBtC,IAAMG,EAAaR,EAAM,CAAES,UAAWZ,IAAW,0BAA4B,eACvEa,EAAaV,EAAM,CAAES,UAAWZ,IAAW,cAAgB,GAEjE,OACE,6BACE,yBAAKO,UAAS,UAAKM,IAAeR,GAClC,4BACEE,UAAWI,EACXG,SAZN,SAAsB0B,GACpBxF,QAAQC,IAAI,mBAAoBuF,GAChCvC,EAAW,CAAES,GAAIV,EAAMU,GAAIR,MAAOsC,EAAexB,OAAOd,SAWpDE,YAAaA,EACblB,MAAOiB,EAAM,CAAES,UAAWZ,IAC1BM,WAAYP,GAAWO,EACvBmC,WAAYjC,EACZA,SAAUA,EACVN,MAAOA,GAEP,4BAAQA,MAAM,IAAd,UACCqC,EAAQG,KAAI,SAAAC,GAAC,OACZ,4BAAQzC,MAAOyC,EAAEjC,IAAKiC,EAAEC,YCWnBC,EA/CgB,SAAAjD,GAAU,IAAD,EACRC,IAAMC,UAAS,GADP,mBAG9BE,GAH8B,UAGRJ,EAAtBI,OAAsBJ,EAAfK,WAUXD,EARFE,MAQEF,EAPFG,MAOEH,EANFI,YAMEJ,EALFK,MAKEL,EAJFM,WAIEN,EAHFuC,QAGEvC,EAFFQ,SAEER,EADF8C,OAUF,OAAO,MCtBM,SAASnD,EAASC,GAAO,IAE9BI,EAAsBJ,EAAtBI,MAAOC,EAAeL,EAAfK,WAFuB,EAUlCD,EANFE,aAJoC,WAUlCF,EALFG,aALoC,MAK5B,aAL4B,IAUlCH,EAJFI,mBANoC,MAMtB,GANsB,IAUlCJ,EAHFK,aAPoC,MAO5B,GAP4B,KAUlCL,EAFFM,WAEEN,EADFQ,iBAToC,SAYtC,SAASuC,EAAahC,IACnBP,GAAYP,EAAW,CAAES,GAAIV,EAAMU,GAAIR,OAAQA,IAGlD,OACE,6BACE,2BACExB,KAAK,WACLoC,SAAUiC,EACV3C,YAAaA,EACbF,MAAOA,EACP8C,QAAS9C,EACTM,SAAUA,EACVtB,MAAOiB,EAAM,CAAES,UAAWZ,MAE5B,uBAAGO,UAAU,kBAAkB0C,QAASF,GACrC1C,IC7BM,SAAS6C,EAAUtD,GAAO,IAE/BI,EAAsBJ,EAAtBI,MAAsBJ,EAAfK,WAUXD,EARFE,MAQEF,EAPFG,MAOEH,EANFI,YAMEJ,EALFK,MAKEL,EAJFM,WAIEN,EAHFmD,WAGEnD,EAFFoD,UAEEpD,EADFQ,SAMF,OAAO,KChBM,SAASb,EAASC,GAAQ,IAAD,EACRC,IAAMC,UAAS,GADP,mBAC/BC,EAD+B,KACtBsD,EADsB,KAE9BrD,EAAsBJ,EAAtBI,MAAOC,EAAeL,EAAfK,WAFuB,EAGwDD,EAAtFE,aAH8B,MAGtB,GAHsB,IAGwDF,EAA1EG,aAHkB,MAGV,aAHU,IAGwDH,EAAlDI,mBAHN,MAGoB,GAHpB,IAGwDJ,EAAhCK,aAHxB,MAGgC,GAHhC,IAGwDL,EAApBM,kBAHpC,MAGiD,GAHjD,EAOtC,OACE,6BACE,6BAAMD,GACN,yCACE3B,KAAK,OACL6B,UAAU,qBACV+C,QAAQ,WACRpD,MAAOA,EACPY,SAXN,SAAsBC,GACpBd,EAAW,CAAES,GAAIV,EAAMU,GAAIR,MAAOa,EAAMC,OAAOd,SAW3CE,YAAaA,EACblB,MAAOiB,EAAM,CAAES,UAAWZ,IAC1BM,WAAYP,EAAUO,EAAa,IAC/BV,EATN,CAUE2D,QAAS,kBAAMF,GAAW,IAC1BG,OAAQ,kBAAMH,GAAW,QAM1B,ICSQI,EApCU,SAAA7D,GAAU,IAAD,EACFC,IAAMC,UAAS,GADb,mBAGxBE,GAHwB,UAGFJ,EAAtBI,OAHwB,GAGFJ,EAAfK,WACuFD,EAA9FE,cAJwB,MAIhB,GAJgB,EAIsEF,EAAlFG,MAAkFH,EAA3DI,YAA2DJ,EAAzCK,MAAyCL,EAA7BM,WAMzE,IAAMkC,EANgGxC,EAAZuC,QAM3DmB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,cAAgB1D,KAG/D,OAFAlD,QAAQC,IAAI,mBAAoBuF,GAEzB,M,gBCZIqB,EAAwB,WACnC,IAAMC,EAAQC,IAAYC,WAC1B,OAAO5G,IAAI0G,EAAO,2BAA4B,KAUnCG,EAAwB,SAAAC,GACnC,IAAIC,EACEC,EAAQP,IACRQ,EAAYD,EAAME,WAAU,SAAAC,GAAI,OAAIA,EAAKL,UAAYA,KAQ3D,OAPkB,GAAdG,KACFF,EAASC,EAAMC,IACRG,OAASL,EAAOK,OAAO9B,KAAI,SAAA1C,GAAK,sBAAUA,EAAV,CAAiByE,YAAY,OACpEL,EAAMC,GAAaF,GAErBJ,IAAYW,SAAS,CAAEhG,KAAMY,IAAcC,aAAcC,QAAS,CAAE4E,WAE7DD,EAAOK,Q,kCCGT,IAAMG,EDrBsB,SAAAT,GACjC,IAAMJ,EAAQC,IAAYC,WAE1B,OADY5G,IAAI0G,EAAO,2BAA4B,IAAIJ,MAAK,SAAAa,GAAI,OAAIA,EAAKL,UAAYA,MCoB1EU,EDeuB,SAAAV,GAClC,IAAMJ,EAAQC,IAAYC,WACpBI,EAAQhH,IAAI0G,EAAO,2BAA4B,IAAIe,QAAO,SAAAN,GAAI,OAAIA,EAAKL,UAAYA,KACzFH,IAAYW,SAAS,CAAEhG,KAAMY,IAAcC,aAAcC,QAAS,CAAE4E,YChBzDU,EDHyB,SAAC,GAAiB,IAAfZ,EAAc,EAAdA,QACjCM,EAASP,EAAsBC,GACrC,GAAIM,EAAQ,CACV,IAAItF,EAAQ,GAQZ,OAPAsF,EAAOO,SAAQ,SAAA/E,GACTA,EAAMG,MAAM,CAAES,UAAWZ,MAAad,IACxCA,EAAQc,EAAMgF,WAAa,8BAC3BxG,YAAQU,EAAO,SACf+E,EAAsBC,OAGnB,CAAEhF,QAAOsF,UAElB,MAAO,CAAEtF,MAAO,gCCCZ+F,E,YACJ,WAAYrF,GAAQ,IAAD,8BACjB,4CAAMA,KACDsF,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKlF,WAAa,EAAKA,WAAWkF,KAAhB,gBAHD,E,iFAME,IAAD,EACoBC,KAAKxF,MAAnC4E,EADU,EACVA,OAAQN,EADE,EACFA,QAASpD,EADP,EACOA,SACpB6D,EAAYT,IAAapD,GAG5BsE,KAAKxF,MAAMH,eAAe,CAAE2E,MAAO,CAAC,CAAEI,SAAQN,gB,oCAIvB,IAAdxD,EAAa,EAAbA,GAAIR,EAAS,EAATA,MAAS,EAEMkF,KAAKxF,MAA3BsE,EAFgB,EAEhBA,QAASpD,EAFO,EAEPA,SACjB,GAAIA,EACFA,EAASZ,OACJ,CACL,IAAMmF,EAASjI,IAAIgI,KAAKxF,MAAO,2BAA4B,IAAI8C,KAAI,SAAA6B,GAAI,sBAClEA,EADkE,CAErEC,OACED,EAAKL,UAAYA,EACbK,EAAKC,OAAO9B,KAAI,SAAA1C,GAAK,4BAChBA,GADgB,mBAElBU,EAAKR,GAFa,sBAGZF,EAAMU,KAAOA,EAAKR,EAAQF,EAAME,OAHpB,OAKrBqE,EAAKC,YAEbY,KAAKxF,MAAMR,eAAe,CAAEgF,MAAOiB,O,6CAIf,IAAD,EACSD,KAAKxF,MAA3BsE,EADa,EACbA,QADa,EACJpD,UACF8D,EAAaV,K,kCAGG,IAAtBlE,EAAqB,EAArBA,MAAOyE,EAAc,EAAdA,WACVa,EAAQ,CACZtF,QACAC,WAAYmF,KAAKnF,WACjBwE,cAEF,OAAQzE,EAAMuF,QACZ,KAAKC,IAAKC,KACR,OAAO,kBAAC9F,EAAa2F,GACvB,KAAKE,IAAKE,SACR,OAAO,kBAACxE,EAAiBoE,GAC3B,KAAKE,IAAKG,QACR,OAAO,kBAACxE,EAAgBmE,GAC1B,KAAKE,IAAKI,MACR,OAAO,kBAACpE,EAAc8D,GACxB,KAAKE,IAAKzH,KACR,OAAO,kBAAC2D,EAAa4D,GACvB,KAAKE,IAAKK,KACR,OAAO,kBAACzD,EAAakD,GACvB,KAAKE,IAAKM,SACR,OAAO,kBAACzD,EAAiBiD,GAC3B,KAAKE,IAAKO,OACR,OAAO,kBAACA,EAAeT,GACzB,KAAKE,IAAKQ,SACR,OAAO,kBAAC,EAAiBV,GAC3B,KAAKE,IAAKS,MACR,OAAO,kBAAC/C,EAAcoC,GACxB,KAAKE,IAAKU,YACR,OAAO,kBAACA,EAAoBZ,GAC9B,KAAKE,IAAKW,WACR,OAAO,kBAAC,EAAeb,GACzB,KAAKE,IAAKY,YACR,OAAO,kBAACA,EAAgBd,GAC1B,QACE,OAAO,Q,+BAIH,IAAD,SACoDF,KAAKxF,MAAxDsE,EADD,EACCA,QAASpD,EADV,EACUA,SAAU0D,EADpB,EACoBA,OADpB,IAC4B6B,uBAD5B,MAC8C,EAD9C,EAED9B,EAAOzD,EAAW,CAAE0D,UAAWG,EAAYT,GAC3CoC,EAAaC,EAAqBF,GACxC,OACE,yBAAK9F,UAAU,OACZnD,IAAImH,EAAM,SAAU,IAAI7B,KAAI,SAAA1C,GAAK,OAChC,yBAAKO,UAAW+F,GACd,yBAAK/F,UAAU,SAAS,EAAK2E,SAAS,CAAElF,QAAOyE,WAAYrH,IAAImH,EAAM,YAAa,gB,GAxFpEd,aAgGpB8C,EAAuB,CAC3BC,EAAG,iBACHC,EAAG,gBACHC,EAAG,iBAaUC,iBAVf,SAAyBC,GACvB,MAAO,CACLC,mBAAoBD,EAAMC,uBAI9B,SAA4BnC,GAC1B,OAAOoC,YAAmB,CAAE1H,iBAAgBK,kBAAkBiF,KAGjDiC,CAA6C1B,I,iCC7J5D,+LAQa8B,EAAa,SAAA9E,GACxB,GAAIA,EAAM,CAER,MAA8C,iBAAvCH,IAAOkF,IAAI/E,GAAME,OADR,eAEyB,OAAvCL,IAAOkF,IAAI/E,GAAME,OAFH,eAGyB,SAAvCL,IAAOkF,IAAI/E,GAAME,OAHH,cAIZ,GACAL,IAAOkF,IAAI/E,GAAME,OALL,cAOlB,OAAO,MAGI8E,EAAmB,SAAChF,GAAoC,IAA9BiF,EAA6B,uDAAjB,aACjD,GAAIjF,EAAM,CACR,IAAIkF,EAAY,aAChB,MAA0C,iBAAnCrF,IAAOG,GAAME,OAAOgF,IACU,OAAnCrF,IAAOG,GAAME,OAAOgF,IACe,SAAnCrF,IAAOG,GAAME,OAAOgF,GAClB,GACArF,IAAOG,EAAMiF,GAAW/E,OAAOgF,GAErC,OAAO,MASF,SAASC,EAAT,GAAoD,IAAlCC,EAAiC,EAAjCA,GAAiC,IAA7BC,kBAA6B,MAAhB,aAAgB,EACxD,OAAKD,EACEvF,IAAOuF,GAAIlF,OAAOmF,GADT,GAIX,SAASC,EAAT,GAAqD,IAAnCC,EAAkC,EAAlCA,IAAkC,IAA7BF,kBAA6B,MAAhB,aAAgB,EACzD,OAAKE,EACE1F,IAAO0F,EAAKF,GAChBG,SACAzJ,UAHc,GAMZ,SAAS0J,EAAT,GAAoE,IAAD,IAA5CC,iBAA4C,MAAhC7F,MAAgC,MAAtB8F,eAAsB,MAAZ9F,MAAY,EACxE8F,EAAU9F,IAAO+F,SAASD,GAAWA,EAAU9F,IAAO8F,GACtDD,EAAY7F,IAAO+F,SAASF,GAAaA,EAAY7F,IAAO6F,GAC5D,IACMG,EADWhG,IAAOiG,SAASH,EAAQI,KAAKL,IACzBM,SACrB,OAAO1G,SAASuG,K,gICjDZnG,G,mBACJ,WAAY/B,GAAQ,IAAD,8BACjB,4CAAMA,KAqBRsI,SAAW,YAAoB,IAAjBrG,EAAgB,EAAhBA,UACZ,EAAKsG,SACH,CACEtG,cAEF,kBAAM,EAAKjC,MAAMoC,iBAAiB,EAAK4E,MAAM/E,eAxB/C,EAAK+E,MAAQ,CACX/E,eAAWE,GAJI,E,iFASjBqD,KAAK+C,SAAS,CACZtG,UAAWuD,KAAKxF,MAAMiC,UAAYC,IAAOsD,KAAKxF,MAAMiC,gBAAaE,M,gDAI3CqG,GACrBhD,KAAKxF,MAAMiC,WAAauG,EAAUvG,WACnCuD,KAAK+C,SAAS,CACZtG,UAAWuG,EAAUvG,UAAYC,IAAOsG,EAAUvG,gBAAaE,M,+BAc3D,IAAD,OACCF,EAAcuD,KAAKwB,MAAnB/E,UADD,EAG2BuD,KAAKxF,MAA/ByI,EAHD,EAGCA,SACFlG,EAJC,EAGWP,aArCD,aAuCX0G,EAAgBzG,EAAS,UAAMC,IAAOD,GAAWM,OAAOA,IAAY,GAC1E,OACE,yBAAK5B,UAAU,QAAQG,GAAG,mBACxB,kBAAC,IAAD,CACEH,UAAU,QACV8H,SAAUA,EACVE,kBAAkB,EAClB1G,UAAWA,EACX2G,QAAS3G,EACT4G,WAAS,EACTC,QAAS,SAAC3L,EAAG4L,GAAJ,OAAe,EAAKT,SAASS,KAEtC,yBACEpI,UAAU,QACVG,GAAG,YACHkI,MAAO,CACLC,WAAY,OACZC,OAAQ,UACRC,QAAS,WACTC,OAAQ,iBACRC,SAAU,MAGZ,uBAAG1I,UAAU,kCACZ+H,EAAgB,8BAAOA,GAAwB,0BAAM/H,UAAU,kBAAkB4B,GAClF,uBAAG5B,UAAU,4C,GA9DMkD,cAsEhB9B,O,0OClCAuH,EArCS,SAAAtJ,GAAU,IACxBuJ,EAA0CvJ,EAA1CuJ,OAAmBC,GAAuBxJ,EAAlCyJ,UAAkCzJ,EAAvBwJ,cAAcE,EAAS1J,EAAT0J,KADV,EAEKC,YAAQ,CAC1CC,OAAQ,CAACC,IAAYC,MACrBC,KAF0C,SAErCC,EAAMC,GACLV,GACFA,EAAO,CAACS,OAAMhK,QAAOiK,aAGzBC,QAAS,SAAAD,GAAO,MAAK,CACnBE,OAAQF,EAAQE,SAChBC,QAASH,EAAQG,cAXU,0BAEtBA,EAFsB,EAEtBA,QAASD,EAFa,EAEbA,OAAUJ,EAFG,KAczBM,EAAWD,GAAWD,EAC5B,OACE,yBAAKG,IAAKP,EAAMpJ,UAAU,SACvB0J,EACC,yBAAK1J,UAAU,iEAAiEqI,MAAO,CAAE,OAAU,QAAS,OAAU,oBAAtH,mBAIE,kBAAC,IAAD,CACEuB,OAAQC,IACR/K,KAAMiK,GAAc,GACpBe,OAAQ,CACNC,QAAS,CAAC,UAAW,IAAK,OAAQ,SAAU,eAAgB,iBAE9DxJ,SAAU,SAACC,EAAOoJ,GAChB,IAAM9K,EAAO8K,EAAOI,UACpBnB,EAAa/J,Q,iGC9BNmL,E,YACjB,WAAY5K,GAAQ,IAAD,8BACf,4CAAMA,KAQV4D,OAAS,WACL,IAAMtD,EAAQ,EAAK0G,MAAM1G,MAAMuK,OAE3BvK,GAAS,EAAKwK,QAAQxK,IACtB,EAAKiI,SAAS,CACVwC,MAAM,GAAD,mBAAM,EAAK/D,MAAM+D,OAAjB,CAAwB,EAAK/D,MAAM1G,QACxCA,MAAO,KACR,kBAAM,EAAKN,MAAMgL,WAAW,EAAKhL,MAAMS,MAAO,EAAKuG,MAAM+D,MAAME,gBAhBvD,EAoBnBC,cAAgB,SAAAC,GACR,CAAC,QAAS,MAAO,KAAK1N,SAAS0N,EAAIC,OACnCD,EAAIE,iBACJ,EAAKzH,WAvBM,EA2BnBT,aAAe,SAAAgI,GACX,EAAK5C,SAAS,CACVjI,MAAO6K,EAAI/J,OAAOd,MAClBhB,MAAO,QA9BI,EAkCnBgM,aAAe,SAAAtB,GACX,EAAKzB,SAAS,CACVwC,MAAO,EAAK/D,MAAM+D,MAAM9F,QAAO,SAAAsG,GAAC,OAAIA,IAAMvB,OAC3C,kBAAM,EAAKhK,MAAMgL,WAAW,EAAKhL,MAAMS,MAAO,EAAKuG,MAAM+D,MAAME,gBArCnD,EAwCnBO,YAAc,SAAAL,GACVA,EAAIE,iBAEJ,IACMI,EADQN,EAAIO,cAAcf,QAAQ,QACnBgB,MAAM,sCAE3B,GAAIF,EAAQ,CACR,IAAMG,EAAYH,EAAOxG,QAAO,SAAA4G,GAAK,OAAI,EAAKf,QAAQe,MAEtD,EAAKtD,SAAS,CACVwC,MAAM,GAAD,mBAAM,EAAK/D,MAAM+D,OAAjB,YAA2Ba,MACjC,kBAAM,EAAK5L,MAAMgL,WAAW,EAAKhL,MAAMS,MAAO,EAAKuG,MAAM+D,MAAME,iBAnDvD,EAuDnBH,QAAU,SAACe,GACP,IAAIvM,EAAQ,KAUZ,OARI,EAAKwM,SAASD,KACdvM,EAAK,UAAMuM,EAAN,6BAGJ,EAAKE,QAAQF,KACdvM,EAAK,UAAMuM,EAAN,oCAGLvM,IACA,EAAKiJ,SAAS,CAAEjJ,WACT,IApEI,EA0EnBwM,SAAW,SAACD,GAAD,OAAW,EAAK7E,MAAM+D,MAAMtN,SAASoO,IA1E7B,EA4EnBE,QAAU,SAACF,GAAD,OAAWG,IAAWC,KAAKJ,IA1EjC,EAAK7E,MAAQ,CACT+D,MAAO/K,EAAM6L,OAAS,GACtBvL,MAAO,GACPhB,MAAO,MALI,E,sEA8ET,IAAD,SAKDkG,KAAKwB,MAHL+D,EAFC,EAEDA,MACAzL,EAHC,EAGDA,MACAgB,EAJC,EAIDA,MAEJ,OACI,oCACKyK,EAAMjI,KAAI,SAAAkH,GAAI,OACX,0BAAMrJ,UAAU,oCAAoCyK,IAAKpB,GACrD,kBAACkC,EAAA,EAAD,CAAMzL,MAAOuJ,EAAMmC,KAAK,QAAQC,SAAU,kBAAM,EAAKd,aAAatB,UAI1E,2BACIrJ,UAAW0L,IAAG,mBAAoB,CAAE/M,QAASA,IAC7CgB,MAAOA,EACPE,YAAY,sBACZoD,OAAQ4B,KAAK5B,OACb0I,UAAW9G,KAAK0F,cAChBhK,SAAUsE,KAAKrC,aACfoJ,QAAS/G,KAAKgG,mB,GApGMvL,IAAM4D,W,2ECSvC,IAAM2I,EAAe,SAAC/M,GAC3ByE,IAAMY,SAAS,CACbhG,KAAMY,IAAc+M,WACpB7M,QAASH,KAIAiN,EAAa,WACxBxI,IAAMY,SAAS,CACbhG,KAAMY,IAAciN,eAuOT5F,iBAJS,SAACC,GAAD,MAAY,CAClC6E,MAAO7E,EAAM6E,SAGyB,KAAzB9E,EAnOf,SAAsB/G,GAAQ,IAAD,EAKvBA,EAHF6L,MAASe,EAFgB,EAEhBA,KAFgB,KAEVC,KAFU,EAECC,WAFD,MAEM,GAFN,MAEUC,UAFV,MAEe,GAFf,MAEmBC,eAFnB,MAE6B,GAF7B,MAEiCtD,YAFjC,MAEwC,GAFxC,EAE4CuD,EAF5C,EAE4CA,OAF5C,IAEoDC,aAFpD,MAE4D,GAF5D,MAEgEC,wBAFhE,SAGzBtB,EAEE7L,EAFF6L,MAHyB,EAKvB7L,EADFyJ,iBAJyB,MAIb,IAJa,EAe3B,SAASvI,EAASkK,EAAK9K,GACrB,IAAMb,EAAI,eAAQoM,EAAR,eAAgBT,EAAM9K,IAChCkM,EAAa/M,GASf,SAAS8J,EAAT,GAA2C,IAAzBS,EAAwB,EAAxBA,KAEZoD,GAFoC,EAAlBpN,MAAkB,EAAXiK,QAEb,sBAAOiD,GAAP,YAAiB1P,IAAIwM,EAAM,QAAS,OAChDqD,EAAY,EAIhB,GAHAD,EAAajI,SAAQ,SAACmI,GACpBD,GAAwBC,EAAKnB,QAE3BkB,EANY,QAOdzO,YAAQ,kCAAmC,aAD7C,CAIA,IAAMa,EAAI,eAAQoM,EAAR,CAAeqB,MAAOE,IAChCZ,EAAa/M,IAGf,OACE,kBAAC8N,EAAA,EAAD,CACEX,KAAMA,EACNT,KAAK,KACLqB,SAAS,SACTC,OAAQ,WAENf,KAEF/L,UAAU,QAEV,kBAAC4M,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,CAAajN,UAAU,MAAvB,cAEF,kBAAC4M,EAAA,EAAMM,KAAP,KACE,yBAAK7E,MAAO,CAAE,UAAa,qBAAsB,UAAa,QAAUrI,UAAU,iBAChF,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,oCAAf,MACA,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CAAYkL,MAAOiB,EAAE,YAAOA,EAAGgB,MAAM,MAAQ,GAAI9C,WAAY9J,EAAUT,MAAM,SAGjF,yBAAKE,UAAU,sCACb,yBAAKA,UAAU,oCAAf,MACA,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CAAYkL,MAAOkB,EAAE,YAAOA,EAAGe,MAAM,MAAQ,GAAI9C,WAAY9J,EAAUT,MAAM,SAGjF,yBAAKE,UAAU,sCACb,yBAAKA,UAAU,aACb,2BACE7B,KAAK,OACL0B,YAAY,UACZG,UAAU,mBACVO,SAAU,SAAC/D,GAAD,OAAO+D,EAAS,UAAW/D,EAAEiE,OAAOd,QAC9CA,MAAO0M,EACPe,QAAS,2EAIf,yBAAKpN,UAAU,OACb,kBAACqN,EAAA,EAAD,KACE,kBAAC,EAAD,CACEzE,OAAQA,EACRlI,UAAWoI,EACXD,aAAc,SAACE,GAAD,OAAUA,GAAQxI,EAAS,OAAQwI,IACjDA,KAAMA,KAGV,yBAAK/I,UAAU,0CACZ+I,EAAKuE,SAAWxE,GAAa,oDAA0BA,KAI5D,2BACEyE,UAAQ,SACRpP,KAAK,OACLgC,GAAG,SACHH,UAAU,SACVwN,UAAQ,EACRjN,SAAU,SAAC/D,GACToM,EAAO,CAAES,KAAM7M,EAAEiE,YAGrB,yBAAKT,UAAU,4BACb,6CAEE,uBACEA,UAAU,uCACV0C,QAAS,WACP+K,SAASC,eAAe,UAAUC,SAEpCC,MAAM,sBAIXpB,EACC,yBAAKxM,UAAU,YACb,yBAAKA,UAAU,yCAAf,0BAC2B,uBAAGA,UAAU,8CAI1C,yBAAKA,UAAU,YACZuM,EAAMpK,KAAI,SAACwK,EAAM/B,GAChB,IAAMiD,EAAa,CACjB,IAAO,wCACP,KAAQ,2CACR,IAAO,2CACP,IAAO,2CACP,KAAQ,4CACR,IAAO,6CAEHC,EAAWnB,EAAKtK,KAAK8K,MAAM,KAAKR,EAAKtK,KAAK8K,MAAM,KAAKG,OAAS,GACpE,OACE,kBAACS,EAAA,EAAD,CAAM/N,UAAU,0CAA0CgO,OAAO,MAC7DrB,EAAKsB,SAoBL,yBACEvL,QAAS,WACPwL,YAAgBvR,KAAKmB,MAAMjB,IAAI8P,EAAM,UAAW,KAAM,SAGxD,yBAAK3M,UAAU,gBACb,0BAAMA,UAAU,qBAAqB8N,GACrC,0BAAM9N,UAAU,qBAAqBmO,YAAiBxB,EAAKyB,QAAQd,OAAO,KAA1E,OAEF,yBAAKtN,UAAU,aACb,uBAAGA,UAAS,UAAK6N,EAAWC,GAAYD,EAAWC,GAAY,eAAnD,aAEd,yBAAK9N,UAAU,aA/BjB,6BACE,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,qBAAqB8N,GACrC,0BAAM9N,UAAU,qBAAqBmO,YAAiBxB,EAAKnB,KAAK,KAAhE,OAEF,yBACExL,UAAU,YACV0C,QAAS,WACHiK,EAAKsB,SACPC,YAAgBvR,KAAKmB,MAAMjB,IAAI8P,EAAM,UAAW,KAAM,OAEtDuB,YAAgBG,IAAIC,gBAAgB3B,GAAO,WAI/C,uBAAG3M,UAAS,UAAK6N,EAAWC,GAAYD,EAAWC,GAAY,eAAnD,cAmBlB,kBAACC,EAAA,EAAKb,KAAN,KACE,kBAACa,EAAA,EAAK7I,KAAN,KACE,yBAAKlF,UAAU,WACb,yBAAKA,UAAU,0BACb,0BAAM4N,MAAOjB,EAAKtK,MAAOsK,EAAKtK,OAEhC,yBAAKrC,UAAU,YACb,uBACE+I,KAAK,oBACL/I,UAAU,yCACV0C,QAAS,kBAlKrC,SAAqB6L,GACnB,IAAM9B,EAAeF,EAAMjI,QAAO,SAACkK,EAAG5D,GAAJ,OAAUA,IAAM2D,KAC5CzP,EAAI,eAAQoM,EAAR,CAAeqB,MAAOE,IAChCZ,EAAa/M,GA+J4B2P,CAAY7D,iBAanD,kBAACgC,EAAA,EAAM8B,OAAP,KACE,yBAAK1O,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC2O,EAAA,EAAD,CACE1O,UAAWkM,IAAOE,IAAYtD,EAC9BhG,QAAQ,UACR/C,UAAU,kBACVuN,UAAQ,YACR7K,QAAS,WACF2J,EAGOtD,EAIZuD,EAAOH,EAAIE,EAAStD,EAAMwD,EAAOH,GAH/BnO,YAAQ,4BAA6B,SAHrCA,YAAQ,uBAAwB,WAPtC,gB,uJC7NS2Q,E,2MACnBvI,MAAQ,CAAEwI,UAAU,EAAOlP,MAAO9C,IAAI,EAAKwC,MAAMM,OAAQmP,YAAY,G,EAMrEC,YAAc,SAAAC,GACZ,EAAKpH,SAAS,CAAEiH,SAAUG,EAAMF,YAAY,IADxB,IAEZnP,EAAU,EAAK0G,MAAf1G,OACPA,IAAU,EAAKN,MAAMM,OAAkB,GAATA,IAAe,EAAKN,MAAM4P,YAAYtP,I,mFANrEkF,KAAK+C,SAAS,CAAEjI,MAAOkF,KAAKxF,MAAMM,U,gDASVuP,GACpBrK,KAAKwB,MAAM1G,QAAUuP,EAASvP,OAChCkF,KAAK+C,SAAS,CAAEjI,MAAOuP,EAASvP,U,+BAI1B,IAAD,SACsCkF,KAAKxF,MAD3C,IACC8P,uBADD,SAC0BnN,EAD1B,EAC0BA,QAD1B,EAEiC6C,KAAKwB,MAArCwI,EAFD,EAECA,SAAUlP,EAFX,EAEWA,MAAOmP,EAFlB,EAEkBA,WACnBzM,EAAOxF,IACXmF,EAAQmB,MAAK,SAAAC,GAAG,OAAIA,EAAIzD,OAASA,KACjC,OACA,IAEF,OAAOkP,EACL,kBAAC,IAAD,CAAmBO,YAAavK,KAAKkK,aACnC,0BAAM/O,UAAU,OAAOqP,SAAU,kBAAM,EAAKN,aAAY,KACtD,4BAAQ5O,GAAG,gBAAgBH,UAAU,iBAAiBO,SAAU,SAAA/D,GAAC,OAAI,EAAKoL,SAAS,CAAEjI,MAAOnD,EAAEiE,OAAOd,UACnG,4BAAQM,UAAQ,EAACqP,UAAQ,EAAC3P,MAAM,IAAhC,UACCqC,EAAQG,KAAI,SAAAiB,GAAG,OACd,4BAAQzD,MAAOyD,EAAIzD,MAAO2P,SAAU3P,GAASyD,EAAIzD,OAAQyD,EAAIf,YAMrE,yBACErC,UAAU,OACV0C,QAAS,WACP,EAAKkF,SAAS,CAAEiH,UAAU,IAAQ,WAChCpB,SAASC,eAAe,iBAAiB6B,YAG7CC,aAAc,WACZ,EAAK5H,SAAS,CAAEkH,YAAY,KAE9BW,aAAc,WACZ,EAAK7H,SAAS,CAAEkH,YAAY,MAG7BzM,GAAQ,KACP8M,GAAmBL,GACnB,0BAAM9O,UAAU,QACd,uBAAGA,UAAU,2B,GAxDqBV,IAAM4D,Y,iCCJpD,sCAgBemK,IAXM,SAAAhO,GAAK,OACtB,kBAAC,IAAD,CAAaqQ,QAASC,KACjBtQ,EAAMuQ,Y,4KCYR,SAASC,EAAgBC,GAC9B,OAAOA,EACJ3C,MAAM,SAAS,GACfA,MAAM,KACN4C,MACA7F,OAcE,SAAS8F,EAAWC,GAIzB,IAJkE,IAAhCC,EAA+B,uDAAnB,GAAIC,EAAe,uDAAL,IACtDC,EAAiBC,KAAKJ,GACtBK,EAAa,GAEVC,EAAS,EAAGA,EAASH,EAAe9C,OAAQiD,GAAUJ,EAAW,CAIxE,IAHA,IAAMK,EAAQJ,EAAeI,MAAMD,EAAQA,EAASJ,GAE9CM,EAAc,IAAIC,MAAMF,EAAMlD,QAC3B1C,EAAI,EAAGA,EAAI4F,EAAMlD,OAAQ1C,IAChC6F,EAAY7F,GAAK4F,EAAMG,WAAW/F,GAGpC,IAAMgG,EAAY,IAAIC,WAAWJ,GACjCH,EAAWQ,KAAKF,GAGlB,IAAMG,EAAO,IAAIC,KAAKV,EAAY,CAACnS,KAAM+R,IACzC,OAAOa,EAGF,SAASE,IAAiB,IAAD,EACN1R,mBAAS,CAAC,EAAG,IADP,mBACvBiM,EADuB,KACjB0F,EADiB,KAU9B,OARAC,2BAAgB,WACd,SAASC,IACPF,EAAQ,CAACvV,OAAO0V,WAAY1V,OAAO2V,cAIrC,OAFA3V,OAAO4V,iBAAiB,SAAUH,GAClCA,IACO,kBAAMzV,OAAO6V,oBAAoB,SAAUJ,MACjD,IACI5F,I,4ECpET,oBAOMrO,EAA2DsU,EAClDtU,O,4ECRA,KACb+H,KAAM,EACN1H,KAAM,EACN+H,SAAU,EACVF,MAAO,EACPC,KAAM,EACNE,OAAQ,EACRL,SAAU,EACVC,QAAS,EACTM,MAAO,EACPD,SAAU,GACVE,YAAa,GACbC,WAAY,GACZC,YAAa,K,oDCbf,kCAAO,IAAM9G,EAAgB,CAC3B2S,OAAQ,SACRC,MAAO,QACPC,KAAM,OACNC,UAAW,YACXC,SAAU,WACVC,WAAY,aACZC,iBAAkB,mBAClBC,gBAAiB,kBACjBC,YAAa,cACbC,SAAU,WACVC,wBAAyB,0BACzBC,cAAe,gBACfC,aAAc,eACdC,eAAgB,iBAChBC,iBAAkB,mBAClBC,uBAAwB,yBACxB3G,WAAY,aACZE,YAAa,cACbhN,aAAc,eACdG,iBAAkB,mBAClBuT,iBAAkB,mBAClBC,uBAAwB,2B,mTCtBX,KACb3N,OAAQ,KACR7E,GAAI,KACJR,MAAO,KACPiT,UAAU,EACV5Q,QAAS,KACTnC,YAAa,QACbC,MAAO,GACPC,WAAY,GACZ8S,aAAc,GACd5S,UAAU,EACViC,YAAY,EACZtC,MAAO,YAAoB,IAAjBS,EAAgB,EAAhBA,UACA6D,EAA6C7D,EAA7C6D,WAAY0O,EAAiCvS,EAAjCuS,SAAUjT,EAAuBU,EAAvBV,MAAOmT,EAAgBzS,EAAhByS,YACrC,SAAIA,IAA8C,IAA/BA,EAAY,CAAEzS,mBAEtB6D,IAAc0O,GAAajT,GAA0B,mBAAVA,GAAiC,IAAVA,M,4EChBjF,kIAMaoT,EAAyB,SAAAjU,GACpCyE,IAAMY,SAAS,CACbhG,KAAMY,IAAcyT,iBACpBvT,QAASH,KAIAkU,EAA2B,WACtCzP,IAAMY,SAAS,CACbhG,KAAMY,IAAc0T,0BAoCTrM,iBAJS,SAAAC,GAAK,MAAK,CAChC4M,gBAAiB5M,EAAM4M,mBAGe,KAAzB7M,EAhCf,SAAwB/G,GAAQ,IAAD,EAGzBA,EADF4T,gBAF2B,IAERC,WAFQ,MAEF,GAFE,EAEE5G,EAFF,EAEEA,OAEzB6G,EAAc,SAAC3S,EAAO4S,GACX,cAAXA,GAGJJ,KAGF,OACE,kBAAC,IAAD,CAAO/G,KAAc,KAARiH,EAAYpG,OAAQqG,EAAanT,UAAU,OAAOqI,MAAO,CAAEgL,OAAQ,OAC9E,kBAAC,IAAMnG,KAAP,KACE,yBAAKlN,UAAU,eAAekT,GAC9B,0BAAMlT,UAAU,0CACd,kBAAC,IAAD,CAAQ+C,QAAQ,YAAYL,QAASyQ,EAAanT,UAAU,YAA5D,UAGA,kBAAC,IAAD,CAAQ+C,QAAQ,UAAUuQ,WAAS,EAACtT,UAAU,qBAAqB0C,QAAS4J,GAA5E,kB,6ECtBK,GAAEiH,MAdI,WAKf,IAJJlN,EAIG,uDAJK,CACNvH,KAAM,SAER0U,EACG,uCACH,OAAQA,EAAOrV,MACb,KAAKY,IAAc4S,MACjB,MAAO,CAAE7S,KAAM0U,EAAOvU,QAAQH,MAChC,QACE,OAAOuH,KCgBEoN,EA5BG,WAOZ,IANJpN,EAMG,uDANK,CACNqN,aAAc,GACdC,gBAAiB,GACjBC,YAAY,GAEdJ,EACG,uCACH,OAAQA,EAAOrV,MACb,IAAK,mBACH,OAAO,eACFkI,EADL,CAEEqN,aAAcF,EAAOvU,QAAQH,KAC7B8U,WAAYJ,EAAOI,aAGvB,IAAK,sBACH,OAAO,eACFvN,EADL,CAEEsN,gBAAiBH,EAAOvU,QAAQH,KAChC8U,WAAYJ,EAAOI,aAGvB,QACE,OAAOvN,ICRE,GAAEwN,SAdO,WAKlB,IAJJxN,EAIG,uDAJK,CACNvH,KAAM,iBAER0U,EACG,uCACH,OAAQA,EAAOrV,MACb,KAAKY,IAAc+S,SACjB,MAAO,CAAEhT,KAAM0U,EAAOvU,QAAQH,MAChC,QACE,OAAOuH,KCIE,GAAEyN,YAdU,WAKrB,IAJJzN,EAIG,uDAJK,CACNvH,KAAM,oBAER0U,EACG,uCACH,OAAQA,EAAOrV,MACb,KAAKY,IAAcmT,YACjB,MAAO,CAAEpT,KAAM0U,EAAOvU,QAAQH,MAChC,QACE,OAAOuH,KCIE,GAAE0N,SAdO,WAKlB,IAJJ1N,EAIG,uDAJK,CACNvH,KAAM,iBAER0U,EACG,uCACH,OAAQA,EAAOrV,MACb,KAAKY,IAAcoT,SACjB,MAAO,CAAErT,KAAM0U,EAAOvU,QAAQH,MAChC,QACE,OAAOuH,KCIE,GAAE2N,KAdG,WAKd,IAJJ3N,EAIG,uDAJK,CACN4N,MAAO,KAETT,EACG,uCACH,OAAQA,EAAOrV,MACb,KAAKY,IAAc6S,KACjB,MAAO,CAAE9S,KAAM0U,EAAOvU,QAAQH,MAChC,QACE,OAAOuH,K,gBCTP6N,EAAY,eACb,CACDhB,IAAK,GACLnQ,QAAS,SAiBPoR,EAAmB,eACpB,CACDjB,IAAK,GACLnQ,QAAS,OACTuJ,OAAQ,OAeN8H,EAAc,eACf,CACDC,aAAa,IAeXC,EAAS,eACV,CACDrI,MAAM,EACNC,KAAM,GACNC,GAAI,GACJC,GAAIpQ,IAAauY,eACjBlI,QAAS,GACTtD,KAAM,GACNwD,MAAO,KAgCLiI,EAAc,CAClBvI,MAAM,EACN9N,KAAM,GACNW,KAAM,GACNuD,KAAM,GACN4L,UAAU,EACVwG,IAAK,IAiBQ,GACbC,SAjHe,WAAmC,IAAlCrO,EAAiC,uDAAzB6N,EAAcV,EAAW,uCACjD,OAAQA,EAAOrV,MACb,KAAKY,IAAcuT,aACjB,MAAO,CAAEY,IAAKM,EAAOvU,SACvB,KAAKF,IAAcsT,cACjB,OAAO,eAAKhM,EAAZ,GAAsBmN,EAAOvU,SAC/B,KAAKF,IAAcwT,eACjB,OAAO2B,EACT,QACE,OAAO7N,IAyGX4M,gBA7FsB,WAAmC,IAAlC5M,EAAiC,uDAAzB6N,EAAcV,EAAW,uCACxD,OAAQA,EAAOrV,MACb,KAAKY,IAAcyT,iBACjB,OAAO,eAAKnM,EAAZ,GAAsBmN,EAAOvU,SAC/B,KAAKF,IAAc0T,uBACjB,OAAO0B,EACT,QACE,OAAO9N,IAuFX6E,MAtDY,WAAgC,IAA/B7E,EAA8B,uDAAtBiO,EAAWd,EAAW,uCAC3C,OAAQA,EAAOrV,MACb,KAAKY,IAAc+M,WACjB,OAAO,eAAKzF,EAAZ,GAAsBmN,EAAOvU,SAC/B,KAAKF,IAAciN,YACjB,OAAOsI,EACT,QACE,OAAOjO,IAgDXC,mBA5CgC,WAM5B,IALJD,EAKG,uDALK,CACNxC,MAAO,GACP8Q,MAAO,GAETnB,EACG,uCACH,OAAQA,EAAOrV,MACb,KAAKY,IAAcC,aACjB,OAAO,eAAKqH,EAAZ,CAAmBxC,MAAO2P,EAAOvU,QAAQ4E,QAC3C,KAAK9E,IAAcI,iBACjB,OAAO,eAAKkH,EAAZ,CAAmBxC,MAAM,GAAD,mBAAMwC,EAAMxC,OAAZ,YAAsB2P,EAAOvU,QAAQ4E,QAAQ8Q,MAAOtO,EAAMsO,MAAQ,IAC5F,QACE,OAAOtO,IAgCXuO,WA/EiB,WAAqC,IAApCvO,EAAmC,uDAA3B+N,EAAgBZ,EAAW,uCACrD,OAAQA,EAAOrV,MACb,KAAKY,IAAcgT,WACjB,OAAO,eAAK1L,EAAZ,GAAsBmN,EAAOvU,SAC/B,KAAKF,IAAciT,iBACjB,OAAOoC,EACT,QACE,OAAO/N,IAyEXwO,QApBqB,WAGjB,IAFJxO,EAEG,uDAFKmO,EACRhB,EACG,uCACH,OAAQA,EAAOrV,MACb,KAAKY,IAAc2T,iBACjB,OAAO,eAAKrM,EAAZ,GAAsBmN,EAAOvU,SAC/B,KAAKF,IAAc4T,uBACjB,OAAO,eAAK6B,GACd,QACE,OAAOnO,KC7GEyO,cAAgB,aAC7BvB,QACAS,OACAP,YACAI,WACAC,cACAC,YACGgB,ICXCC,EAAa,CAACC,IAAOC,uBAAa,CAAEC,WAAW,EAAM3N,UAAU,KACtD4N,gBAAYC,EAAUC,IAAe,WAAf,EAAmBN,K,4ECNxD,sDAiBe,SAASO,EAAkBlW,GACxC,IAAMmW,EAAaC,iBAAO,MAG1B,OAnBwB,SAAC9L,EAAKyF,GAC9B,IAAMsG,EAAqB,SAAClV,GACtBmJ,EAAIgM,UAAYhM,EAAIgM,QAAQC,SAASpV,EAAMC,SAC7C2O,GAAeA,GAAY,IAI/ByG,qBAAU,WAER,OADApI,SAAS8D,iBAAiB,YAAamE,GAChC,WACLjI,SAAS+D,oBAAoB,YAAakE,OAO9CI,CAAkBN,EAAYnW,EAAM+P,aAGlC,uCAAKzF,IAAK6L,GAAgBnW,GACvBA,EAAMuQ,Y,4cCYPmG,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,OACP,YAAa,CACXC,UAAWH,EAAMI,QAAQ,KAG7BC,MAAO,CACL9N,QAASyN,EAAMI,QAAQ,SA0C3B,IAAME,EAAqB,CACzBjY,QAAS,aACTK,MAAO,YACP6X,QAAS,aACT5X,KAAM,WAOOwH,eAJS,SAAAC,GAAK,MAAK,CAChCqO,SAAUrO,EAAMqO,YAGsB,KAAzBtO,EAjDf,SAAwB/G,GAAQ,IAAD,EAGzBA,EADFqV,SAF2B,IAEfxB,WAFe,MAET,GAFS,MAELnQ,eAFK,MAEK,OAFL,EAEauJ,EAFb,EAEaA,OAGpC6G,GADU4C,IACI,SAACvV,EAAO4S,GACX,cAAXA,GA3BN7P,IAAMY,SAAS,CACbhG,KAAMY,IAAcwT,mBA+BhBkE,EAAUF,EAAmBxT,GAEnC,OACE,kBAAC2T,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7Cxa,OAAM6W,EACN4D,iBAAkBxK,EAAS,IAAQ,IACnCyK,QAAS5D,GAET,yBAAKnT,UAAS,2BAAsByW,IAClC,0BAAMzW,UAAU,gBAAgBkT,GAChC,uBAAGxQ,QAASyQ,EAAanT,UAAU,mDAAmDgX,cAAY,SACjG1K,GACC,uBACE5J,QAAS,WACPyQ,IACA7G,KAEFtM,UAAU,iDACVgX,cAAY,cC3ElBC,EAAUC,gBAAK,kBAAM,kCACrBC,EAAI,SAACC,GAAD,OAAO,kBAAC,WAAD,CAAUC,SAAS,IAAID,EAAEE,QAE3BC,EADF,SAACH,GAAD,OAAO,kBAAC,EAAD,CAAGE,MAAO,kBAACL,EAAYG,M,wHCgK5BI,MA7JR,SAAkBnY,GAAQ,IAAD,EACEE,mBAAS,IADX,mBACvBkY,EADuB,KACbC,EADa,KAG9B,SAASC,EAAOnb,GAAI,IAAD,EACOA,EAAEiE,OAAlB4B,EADS,EACTA,KAAM1C,EADG,EACHA,MACd+X,EAAY,eAAKD,EAAN,eAAiBpV,EAAO1C,KA+BrC,OACE,yBAAKK,UAAU,oBACb,yBAAKA,UAAU,QACb,yBAAK4X,IAAI,UAAUC,IAAKC,IAAM9J,OAAO,KAAKmI,MAAM,OAChD,0BAAM9N,MAAO,CAAE0P,MAAO,UAAtB,iBAGF,yBAAK/X,UAAU,eACb,yBAAKA,UAAU,qBACb,wBACEA,UAAU,wBADZ,mCAOA,0BAAMA,UAAU,cACd,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,8BACE,gDAEF,4BAAQqC,KAAK,eAAe9B,SAAUoX,EAAQ3X,UAAU,gBACtD,4BAAQL,MAAM,IAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,UAAd,aAIN,yBAAKK,UAAU,aACb,yBAAKA,UAAU,cACb,8BACE,4CAEF,2BAAO7B,KAAK,OAAOkE,KAAK,WAAW9B,SAAUoX,EAAQ3X,UAAU,eAAeH,YAAY,gBAG9F,yBAAKG,UAAU,aACb,yBAAKA,UAAU,cACb,8BACE,yCAEF,2BAAO7B,KAAK,OAAOkE,KAAK,QAAQ9B,SAAUoX,EAAQ3X,UAAU,eAAeH,YAAY,gBAG3F,yBAAKG,UAAU,aACb,yBAAKA,UAAU,cACb,8BACE,kDAGF,4BAAQqC,KAAK,gBAAgB9B,SAAUoX,EAAQ3X,UAAU,gBACvD,4BAAQL,MAAM,IAAd,UACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,SAAd,YAKN,yBAAKK,UAAU,aACb,yBAAKA,UAAU,cACb,8BACE,gEAEF,4BAAQqC,KAAK,UAAU9B,SAAUoX,EAAQ3X,UAAU,gBACjD,4BAAQL,MAAM,IAAd,cACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,qBAAd,qBACA,4BAAQA,MAAM,qBAAd,qBACA,4BAAQA,MAAM,sBAAd,sBACA,4BAAQA,MAAM,uBAAd,uBACA,4BAAQA,MAAM,aAAd,gBAIN,yBAAKK,UAAU,aACb,yBAAKA,UAAU,cACb,8BACE,gDAEF,4BAAQqC,KAAK,eAAe9B,SAAUoX,EAAQ3X,UAAU,gBACtD,4BAAQL,MAAM,IAAd,cACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,qBAAd,qBACA,4BAAQA,MAAM,uCAAd,uCACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,YAIN,yBAAKK,UAAU,aACb,yBAAKA,UAAU,oBACb,kBAAC2O,EAAA,EAAD,CACE3O,UAAU,iCACV+C,QAAQ,YACRL,QAAS,WACPrD,EAAM2Y,kBAAkB,KAJ5B,QASA,kBAACrJ,EAAA,EAAD,CAAQ3O,UAAU,kBAAkB+C,QAAQ,UAAUL,QAzIpE,WAAoB,MAEgF+U,EAA1FQ,oBAFU,MAEG,GAFH,IAEgFR,EAAzES,gBAFP,MAEgB,GAFhB,IAEgFT,EAA5DU,aAFpB,MAE0B,GAF1B,IAEgFV,EAAlDW,qBAF9B,MAE4C,GAF5C,IAEgFX,EAAhCY,eAFhD,MAEwD,GAFxD,IAEgFZ,EAApBa,oBAF5D,MAEyE,GAFzE,EAaZC,EAAW,CAAEpM,GAAI,uBAAwBE,QAAS,sBAAuBnO,QAT7E,2DACqB+Z,EADrB,iCAEiBC,EAFjB,8BAGcC,EAHd,uCAIuBC,EAJvB,qDAKqCC,EALrC,qCAMqBC,EANrB,yCAOyBtc,IAAawc,cAPtC,SAUEC,EAAe,IAAIC,SACvBD,EAAaE,IAAI,WAAYhc,KAAKC,UAAU2b,IAE5CK,IACGC,KADH,0BACmCJ,GAChCK,MAAK,SAAAC,GACJ1Z,EAAM2Y,kBAAkB,MAEzBgB,OAAM,SAAAC,GACL5Z,EAAM2Y,kBAAkB,GACxBzb,YAAe0c,QAiHP,iB,gCCzIVC,G,kNACJ7S,MAAQ,CACN8S,cAAc,EACdjO,MAAO,CACLvL,MAAO,GACPyZ,WAAW,EACXza,MAAO,IAET0a,QAAS,CACP1Z,MAAO,GACPyZ,WAAW,EACXza,MAAO,IAET2a,SAAU,CACR3Z,MAAO,GACPyZ,WAAW,EACXza,MAAO,IAET4a,gBAAiB,CACf5Z,MAAO,GACPyZ,WAAW,EACXza,MAAO,IAET6a,UAAW,I,EAGbnK,SAAW,SAAA7S,GACTA,EAAEkO,iBADY,MAEwB,EAAKrE,MAAnCiT,EAFM,EAENA,SAAUC,EAFJ,EAEIA,gBAClB,GAAID,EAAS3Z,QAAU4Z,EAAgB5Z,MAAvC,CAIA,IAAM8X,EAAW,CACfvM,MAAO,EAAK7E,MAAM6E,MAAMvL,MACxB2Z,SAAU,EAAKjT,MAAMiT,SAAS3Z,OAE1B8X,EAASvM,OAASuM,EAAS6B,UAGjCG,IACGZ,KADH,UACWa,IAAQC,QADnB,qBAC+ClC,GAC5CqB,MAAK,SAAAC,GACJU,IACG5c,IADH,UACU6c,IAAQC,QADlB,SACkC,CAC9B3F,KAAM,CACJ4F,SAAUnC,EAASvM,MACnBoO,SAAU7B,EAAS6B,YAGtBR,MAAK,SAAAC,GACJ/c,IAAa2c,IAAII,EAASja,KAAKmV,MAAO8E,EAASja,KAAK,eACpD9C,IAAa6d,YAAY,EAAKxT,MAAM6E,MAAMvL,MAAOoZ,EAASja,KAAT,IAEjD,IAAIuP,EAAG,0BAAsBrS,IAAaC,aAC1C6d,IAASjd,IAAIwR,GAAKyK,MAAK,SAAAiB,GACrB,IAAMC,EAAQ,eACTjB,EAASja,KADA,GAETjC,IAAIkd,EAAM,iBAAkB,KAEjC/d,IAAaie,YAAYD,GACzB,EAAK3a,MAAM2Y,kBAAkB,SAGhCgB,OAAM,SAAAra,GACL,EAAKiJ,SAAS,CACZ4R,UAAW,gDAIlBR,OAAM,SAAAC,GACL,EAAK5Z,MAAM2Y,kBAAkB,GAC7Bzb,YAAe0c,WA1CjBhb,YAAQ,yBAA0B,U,EA8CtCsC,SAAW,SAAA/D,GAAM,IAAD,EACUA,EAAEiE,OAAlB4B,EADM,EACNA,KAAM1C,EADA,EACAA,MACd,EAAKiI,SAAL,eACGvF,EAAO,CACN1C,QACAyZ,WAAW,EACXza,MAAOgB,EACM,UAAT0C,EACGgJ,IAAWC,KAAK3L,GAEf,GADA,kBAEO,aAAT0C,EACC6X,IAAc5O,KAAK3L,GAElB,GADA,gCAEO,oBAAT0C,GACA1C,IAAU,EAAK0G,MAAMiT,SAAS3Z,MAC5B,eAEF,GACF,e,EAKVwa,QAAU,SAAA3d,GAAM,IAAD,EACWA,EAAEiE,OAAlB4B,EADK,EACLA,KAAM1C,EADD,EACCA,MACd,EAAKiI,SAAL,eACGvF,EAAO,CACN1C,QACAyZ,WAAW,EACXza,MAAO,EAAK0H,MAAMhE,GAAM1D,U,EAK9Byb,eAAiB,WAA4B,IAA3Bjc,EAA0B,uDAAnB,eACvB,EAAKyJ,SAAL,eACGzJ,GAAQ,EAAKkI,MAAMlI,M,wEAId,IAAD,SAC6F0G,KAAKwB,MAAjG8S,EADD,EACCA,aAAcjO,EADf,EACeA,MAAOoO,EADtB,EACsBA,SAAUC,EADhC,EACgCA,gBAAiBc,EADjD,EACiDA,oBAAgChB,GADjF,EACsEG,UADtE,EACiFH,SAExF,OACE,yBAAKrZ,UAAU,oBACb,yBAAKA,UAAU,QACb,yBAAK4X,IAAI,UAAUC,IAAKC,IAAM9J,OAAO,KAAKmI,MAAM,OAChD,0BAAM9N,MAAO,CAAE0P,MAAO,UAAtB,iBAEF,yBAAK/X,UAAU,eACb,yBAAKA,UAAU,qBACb,wBACEA,UAAU,wBADZ,qBAKA,uBAAGA,UAAU,wBAAb,uBAEA,0BAAMqP,SAAUxK,KAAKwK,UACnB,yBACErP,UAAW0L,IAAG,8BAA+B,CAC3C,eAAgBR,EAAMkO,UACtB,uBAAwBlO,EAAMvM,QAAUuM,EAAMkO,aAGhD,2BAAOpZ,UAAW0L,IAAG,aAAc,CAAElM,QAAS0L,EAAMkO,aAClD,0BAAMpZ,UAAW0L,IAAG,QAAS,CAAElM,QAAS0L,EAAMkO,aAA9C,SACA,2BACEjb,KAAK,OACLkE,KAAK,QACLxC,YAAcqL,EAAMkO,UAAsB,GAAV,QAChCpW,QAAS6B,KAAKtE,SACdA,SAAUsE,KAAKtE,SACf0C,OAAQ4B,KAAKsV,QACbG,aAAa,SAGjB,yBAAKta,UAAU,eACb,0BAAMA,UAAU,WAAWkL,EAAMvM,SAGrC,yBACEqB,UAAW0L,IAAG,yBAA0B,CACtC,eAAgB4N,EAASF,UACzB,uBAAwBE,EAAS3a,QAAU2a,EAASF,aAGtD,2BAAOpZ,UAAW0L,IAAG,aAAc,CAAElM,QAAS8Z,EAASF,aACrD,0BAAMpZ,UAAW0L,IAAG,QAAS,CAAElM,QAAS8Z,EAASF,aAAjD,YACA,2BACEjb,KAAMgb,EAAe,OAAS,WAC9BtZ,YAAcyZ,EAASF,UAAyB,GAAb,WACnCpW,QAAS6B,KAAKtE,SACdA,SAAUsE,KAAKtE,SACf0C,OAAQ4B,KAAKsV,QACb9X,KAAK,WACLiY,aAAa,SAGjB,yBAAKta,UAAU,eACb,0BAAMA,UAAU,WAAWsZ,EAAS3a,SAmBxC,yBACEqB,UAAW0L,IAAG,yBAA0B,CACtC,eAAgB6N,EAAgBH,UAChC,uBAAwBG,EAAgB5a,QAAU4a,EAAgBH,aAGpE,2BAAOpZ,UAAW0L,IAAG,aAAc,CAAElM,QAAS+Z,EAAgBH,aAC5D,0BAAMpZ,UAAW0L,IAAG,QAAS,CAAElM,QAAS+Z,EAAgBH,aAAxD,oBACA,2BACEjb,KAAMkc,EAAsB,OAAS,WACrCxa,YAAc0Z,EAAgBH,UAAiC,GAArB,mBAC1CpW,QAAS6B,KAAKtE,SACdA,SAAUsE,KAAKtE,SACf0C,OAAQ4B,KAAKsV,QACb9X,KAAK,kBACLiY,aAAa,SAGjB,yBAAKta,UAAU,eACb,0BAAMA,UAAU,WAAWuZ,EAAgB5a,OAC3C,0BACE0J,MAAO,CAAE9J,SAAU,WAAYgc,MAAO,GACtCva,UAAU,mBACVwa,KAAK,eACL9X,QAAS,kBAAM,EAAK0X,eAAe,yBAElCC,EACC,uBACEra,UAAU,YACVqI,MAAO,CAAEE,OAAQ,UAAWkS,SAAU,QACtC7M,MAAM,0BAGR,uBACE5N,UAAU,kBACVqI,MAAO,CAAEE,OAAQ,UAAWkS,SAAU,QACtC7M,MAAM,6BAMhB,yBAAK5N,UAAW0L,IAAG,yBAA0B,CAAE,eAAgB2N,EAAQD,aACrE,2BAAOpZ,UAAW0L,IAAG,aAAc,CAAElM,QAAS6Z,EAAQD,aACpD,0BAAMpZ,UAAW0L,IAAG,QAAS,CAAElM,QAAS6Z,EAAQD,aAAhD,gBACA,2BACEjb,KAAK,OACLkE,KAAK,UACLxC,YAAcwZ,EAAQD,UAAwB,GAAZ,UAClCpW,QAAS6B,KAAKtE,SACdA,SAAUsE,KAAKtE,SACf0C,OAAQ4B,KAAKsV,QACbG,aAAa,SAGjB,yBAAKta,UAAU,eACb,0BAAMA,UAAU,WAAWqZ,EAAQ1a,SAIvC,kBAACgQ,EAAA,EAAD,CACE3O,UAAU,iBACV+C,QAAQ,UACRL,QAASmC,KAAKwK,SACdpP,UAAWsZ,EAAgB5Z,OAAS4Z,EAAgB5a,OAAS2a,EAAS3a,OAASuM,EAAMvM,OAJvF,mB,GAjQMuE,cAqRLkD,eAJS,SAAAC,GAAK,MAAK,CAAEkN,MAAOlN,KAEhB,GAEZD,CAA6C8S,G,qDC/G7CwB,G,YA1Kb,aAAe,IAAD,8BACZ,+CAuCFC,aAAe,WAAO,IACZC,EAAiB,EAAKvU,MAAtBuU,aACFC,EAAmBhe,IAAI,EAAKwJ,MAAO,cAAe,IAAI/B,QAAO,SAAAlC,GAAC,OAAIA,EAAE0Y,cAC1E,GAAKje,IAAIge,EAAkB,MAAO,IAAlC,CAGA,IAAMpD,EAAW,CACfmD,eACAG,SAAUF,EAAiB1Y,KAAI,SAAAC,GAAC,MAAK,CACnC4Y,WAAY5Y,EAAE4Y,WACd3Y,KAAMD,EAAEC,UAGZyX,IACGmB,IAAI,cAAexD,GACnBqB,MAAK,WACJ7a,YAAQ,8BAA+B,WACvC,EAAK2J,SAAS,CAAEsT,WAAW,SAzDnB,EAwEdC,eAAiB,SAAAC,GACf,EAAKxT,SAAS,CAAEyT,YAAaD,KAtE7B,EAAK/U,MAAQ,CACXgV,YAAa,GACbH,WAAW,GAGb,EAAKI,YAAc,EAAKA,YAAY1W,KAAjB,gBACnB,EAAK2W,gBAAkB,EAAKA,gBAAgB3W,KAArB,gBACvB,EAAK2W,gBAAkB,EAAKA,gBAAgB3W,KAArB,gBAVX,E,6EAaEgW,EAAcY,GAAW,IAAD,OAChC/D,EAAW,CACfmD,eACAG,SAAUS,EAAST,SAAS5Y,KAAI,SAAAC,GAAC,MAAK,CACpC4Y,WAAY5Y,EAAEjC,GACdkC,KAAK,GAAD,OAAKxF,IAAI2e,EAAU,mBAAoB,IAAvC,cAAgDpZ,EAAEC,WAG1DyX,IACGmB,IAAI,cAAexD,GACnBqB,MAAK,WACJ7a,YAAQ,8BAA+B,WACvC,EAAK2J,SAAS,CAAEsT,WAAW,IAC3B,EAAK7b,MAAMoc,YAAc,EAAKpc,MAAMoc,kB,0EAwC9BlU,GAAM,IAAD,OACfkS,IAAM5c,IAAI,iBAAiBic,MAAK,SAAAvR,GAC9B,EAAKK,SAAS,CAAE8T,aAAcnU,EAAIzI,Y,+BAQ5B,IAAD,SAC4B+F,KAAKwB,MAAhC6U,EADD,EACCA,UAAWG,EADZ,EACYA,YAEbM,EAAU,CACd,CACE5O,OACE,2BACE/M,UAAU,uBACV7B,KAAK,WACLoC,SAAU,WACR,IAAMoB,IAAa0Z,IAAgBA,EAAYlY,MAAK,SAAAf,GAAC,OAAKA,EAAE0Y,eAC5D,EAAKK,eAAeE,EAAYlZ,KAAI,SAAAC,GAAC,sBAAUA,EAAV,CAAa0Y,WAAYnZ,SAEhEc,QAAS5F,IAAIwe,EAAa,MAAO,MAAQA,EAAYlY,MAAK,SAAAf,GAAC,OAAKA,EAAE0Y,gBAGtEc,SAAU,aACVC,KAAM,SAAAxc,GAAK,OACT,yBACEW,UAAU,2BACV0C,QAAS,SAAAlG,GACPA,EAAEsf,kBACF,IAAMna,GAAYtC,EAAMM,MAClBoc,EAAkB,YAAOV,GAC/BU,EAAmB1c,EAAMkP,OAAzB,WAAgD5M,EAChD,EAAKwZ,eAAeY,KAGtB,2BACE/b,UAAU,cACVqI,MAAO,CAAE2T,WAAY,IACrB7d,KAAK,WACL8d,eAAgB5c,EAAMM,MACtB8C,QAASpD,EAAMM,UAIrBuc,UAAU,EACVC,YAAY,EACZhG,MAAO,IAET,CACEpJ,OAAQ,aACR6O,SAAU,OACVC,KAAM,SAAA/c,GAAI,OAAIjC,IAAIiC,EAAM,QAAS,OAIrC,OACE,yBAAKkB,UAAU,YACb,kBAAC4M,GAAA,EAAD,CAAOX,KAAMiP,EAAW1P,KAAK,KAAKsB,OAAQ,kBAAM,EAAKlF,SAAS,CAAEsT,WAAW,KAAUlb,UAAU,QAC7F,kBAAC4M,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,GAAA,EAAMK,MAAP,CAAajN,UAAU,MAAvB,oBAEF,kBAAC4M,GAAA,EAAMM,KAAP,KACE,kBAAC,IAAD,CACEkP,WAAW,gBACXC,QAAShB,EAAY/N,OAAS,GAAK,GAAK+N,EAAY/N,OACpDgP,WAAW,EACXC,gBAAgB,EAMhBZ,QAASA,EACT7c,KAAMuc,GAAe,MAGzB,kBAACzO,GAAA,EAAM8B,OAAP,CAAc1B,aAAW,GACvB,kBAAC2B,EAAA,EAAD,CAAQjM,QAASmC,KAAK8V,cAAtB,aAIJ,kBAAC,KAAD,CACE6B,WAAW,oBACXC,IAAKtf,IAAUuf,UACfC,QAAS,CAAC,gBACVC,UAAWzf,IAAU0f,gBACrBC,OAAQjY,KAAKkY,aACbC,UAAWnY,KAAK0W,gBAChB0B,yBAAyB,OACzBjd,UAAU,eARZ,6B,GAvJsBkD,aCwIfga,GAzIa,SAAA7d,GAAU,IAAD,EACDC,IAAMC,UAAS,GADd,mBAC5B4d,EAD4B,KACjBC,EADiB,OAED9d,IAAMC,UAAS,GAFd,mBAE5B2b,EAF4B,KAEjBmC,EAFiB,KAG7BzD,EAAW5d,IAAawc,eAAiB,IAE/C,OACE,yBAAKxY,UAAU,qBACb,kBAAC4M,GAAA,EAAD,CAAOX,KAAMiP,EAAW1P,KAAK,KAAKsB,OAAQ,kBAAMuQ,GAAa,IAAQrd,UAAU,QAC7E,kBAAC4M,GAAA,EAAMG,OAAP,CAAcC,aAAW,GAEvB,yBAAKhN,UAAU,iBACb,yBAAKA,UAAU,yBACb,yBAAK4X,IAAI,UAAUC,IAAKC,IAAM9J,OAAO,KAAKmI,MAAM,QAElD,yBAAKnW,UAAU,yBACb,0CAEF,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,cACb,8BACE,kEACA,iEAOZ,yBAAKA,UAAU,YAAYG,GAAG,cAC5B,yBAAKH,UAAU,mCACb,yBAAKA,UAAU,OAAO6X,IAAKC,IAAMF,IAAI,YADvC,cAIA,yBAAK5X,UAAU,YACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,YACb,0BAAMA,UAAU,sCACd,yBAAKA,UAAU,eACb,2BACE7B,KAAK,OACL6B,UAAU,eACVG,GAAG,YACHN,YAAY,8CAEd,yBAAKG,UAAU,mBACb,4BAAQA,UAAU,kBAAkB7B,KAAK,SAASgC,GAAG,gBACnD,uBAAGH,UAAU,eAAegX,cAAY,cAMlD,yBAAKhX,UAAU,YACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,uBACb,yBACEA,UAAU,sBACVmM,GAAG,IACHqO,KAAK,SACLra,GAAG,UACHmd,cAAY,WACZC,gBAAc,OACdC,gBAAc,QACd9a,QAAS,kBAAM0a,GAAcD,KAE7B,yBAAKnd,UAAU,gCAAgC4Z,EAAS,KAE1D,kBAACrE,EAAA,EAAD,CAAmBnG,YAAagO,GAC9B,yBACEpd,UAAS,wBAAmBmd,GAAa,6BACzChd,GAAG,aACHsd,kBAAgB,oBAEhB,yBAAKzd,UAAU,gCAAgC4Z,EAAS,IACxD,uBAAG5Z,UAAU,eAAe4Z,GAC5B,yBAAK5Z,UAAU,MAAMG,GAAG,aAMtB,yBAAKH,UAAU,yBACb,kBAAC,IAAD,CACEC,UAAQ,EACRyC,QAAS,WACP0a,GAAa,GACb1hB,gBAJJ,qBAmBpB,yBAAKsE,UAAU,eACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,wBAAd,kCACA,yBAAKA,UAAU,qBACb,kBAAC,GAAD,CAAiBC,UAAQ,KAE3B,yBAAKD,UAAU,aAAaqI,MAAO,CAAEqV,UAAW,KAC9C,kBAAC/O,EAAA,EAAD,CACE3O,UAAU,6BACV+C,QAAQ,YACRL,QAAS,WACPrD,EAAM2Y,kBAAkB,KAJ5B,wBASA,kBAACrJ,EAAA,EAAD,CACE3O,UAAU,8BACV+C,QAAQ,UACRL,QAAS,WACP2a,GAAa,KAJjB,uBCpHVM,GAAqB,CACzBC,EAAG,CAAEC,QAAS,GAAIC,OAAQ,IAC1B7X,EAAG,CAAE4X,QAAS,GAAIC,OAAQ,IAC1B5X,EAAG,CAAE2X,QAAS,GAAIC,OAAQ,KAGtB5E,G,2MACJ7S,MAAQ,CACN8S,cAAc,EACdjO,MAAO,CACLvL,MAAO,GACPyZ,WAAW,EACXza,MAAO,IAET2a,SAAU,CACR3Z,MAAO,GACPyZ,WAAW,EACXza,MAAO,IAET6a,UAAW,GACXuE,YAAa,G,EAUf1O,SAAW,SAAA7S,GACTA,EAAEkO,kB,EA+DJnK,SAAW,SAAA/D,GAAM,IAAD,EACUA,EAAEiE,OAAlB4B,EADM,EACNA,KAAM1C,EADA,EACAA,MACd,EAAKiI,SAAL,eACGvF,EAAO,CACN1C,QACAyZ,WAAW,EACXza,MAAQgB,EAAqB,GAAb,e,EAKtBwa,QAAU,SAAA3d,GAAM,IAAD,EACWA,EAAEiE,OAAlB4B,EADK,EACLA,KAAM1C,EADD,EACCA,MACd,EAAKiI,SAAL,eACGvF,EAAO,CACN1C,QACAyZ,WAAW,EACXza,MAAO,EAAK0H,MAAMhE,GAAM1D,U,EAK9Byb,eAAiB,WACf,EAAKxS,SAAS,CACZuR,cAAe,EAAK9S,MAAM8S,gB,EAI9BnB,kBAAoB,SAAAzJ,GAClB,EAAK3G,SAAS,CAAEmW,YAAaxP,K,mFAnG7B,IAAMzP,EAAOnC,KAAKmB,MAAM9B,IAAagC,eACJ,IAA9BnB,IAAIiC,EAAM,YAAa,KACxB+F,KAAK+C,SAAS,CAAEmW,YAAa,M,+BAoGvB,IAAD,EAC2DlZ,KAAKwB,MAArB0X,GAD3C,EACC5E,aADD,EACejO,MADf,EACsBoO,SADtB,EACgCE,UADhC,EAC2CuE,aAElD,OACE,yBAAK1V,MAAOsV,GAAmBI,GAAaD,OAAQ9d,UAAS,cAEzD,6BACE,kBAACge,EAAA,EAAD,CAAUhe,UAAU,QAAQie,OAAO,EAAOF,YAAaA,EAAaG,YAAY,GAC9E,kBAACF,EAAA,EAASG,KAAV,KACE,kBAAC,EAAD,CAAOnG,kBAAmBnT,KAAKmT,qBAGjC,kBAACgG,EAAA,EAASG,KAAV,CAAene,UAAU,IACvB,kBAAC,EAAD,CAAUgY,kBAAmBnT,KAAKmT,qBAGpC,kBAACgG,EAAA,EAASG,KAAV,KACE,kBAAC,GAAD,CAAcnG,kBAAmBnT,KAAKmT,4B,GAzIlC9U,aAsJLkD,gBAJS,SAAAC,GAAK,MAAK,CAAEkN,MAAOlN,KAEhB,GAEZD,CAA6C8S,I,SChKtDkF,I,kNACJ/X,MAAQ,CACN6E,MAAO,CACLvL,MAAO,GACPyZ,WAAW,EACXza,MAAO,IAET6a,UAAW,I,EAObnK,SAAW,SAAC7S,GACVA,EAAEkO,iBADc,IAGdQ,EACE1O,EAAEiE,OAAO4d,SADXnT,MAGF,EAAKtD,SAAS,CACZsD,MAAO,CACLvL,MAAOuL,EAAMvL,MACbyZ,WAAW,EACXza,MAAQuM,EAAMvL,MAAqB,GAAb,cAEvB,WAAO,IAENuL,EACE,EAAK7E,MADP6E,MAEEA,EAAMvL,OACRma,IAASjB,KAAK,kBAAmB,CAC7B3N,MAAO,EAAK7E,MAAM6E,MAAMvL,QACvBmZ,MAAK,SAACC,GACPuF,MAAM,uCAAD,OAAwCpT,EAAMvL,MAA9C,oDACP,EAAKN,MAAMkf,QAAQzN,KAAK,aACvBkI,OAAM,SAACra,GACR,EAAKiJ,SAAS,CACZ4R,UAAW,iD,EAOrBjZ,SAAW,SAAC/D,GAAO,IAAD,EAIZA,EAAEiE,OAFJ4B,EAFc,EAEdA,KACA1C,EAHc,EAGdA,MAEF,EAAKiI,SAAL,eACGvF,EAAO,CACN1C,QACAyZ,WAAW,EACXza,MAAQgB,EAAqB,GAAb,e,EAKtBwa,QAAU,SAAC3d,GAAO,IAAD,EAIXA,EAAEiE,OAFJ4B,EAFa,EAEbA,KACA1C,EAHa,EAGbA,MAEF,EAAKiI,SAAL,eACGvF,EAAO,CACN1C,QACAyZ,WAAW,EACXza,MAAO,EAAK0H,MAAMhE,GAAM1D,U,EAK9Byb,eAAiB,WACf,EAAKxS,SAAS,CACZuR,cAAe,EAAK9S,MAAM8S,gB,mFAhE5B1L,SAASG,MAAQ,iC,+BAoET,IAAD,EAIH/I,KAAKwB,MAFP6E,EAFK,EAELA,MACAsO,EAHK,EAGLA,UAGF,OACE,yBAAKxZ,UAAU,uBACb,yBAAKA,UAAU,QACb,yBAAK4X,IAAI,UAAUC,IAAKC,IAAM9J,OAAO,KAAKmI,MAAM,OAChD,0BAAM9N,MAAO,CAAE0P,MAAO,UAAtB,iBAEF,yBAAK/X,UAAU,eACb,wBAAIA,UAAU,SAAd,mBACA,uBAAGA,UAAU,eAAb,uFACA,kBAACwe,GAAA,EAAD,CAAIC,UAAWjF,GACb,0BAAMxZ,UAAU,cAAcwZ,IAEhC,0BAAMnK,SAAUxK,KAAKwK,UACnB,yBAAKrP,UAAW0L,IAAG,yBAA0B,CAAE,eAAgBR,EAAMkO,aACnE,2BAAOpZ,UAAW0L,IAAG,aAAc,CAAElM,QAAS0L,EAAMkO,aAClD,0BAAMpZ,UAAW0L,IAAG,QAAS,CAAElM,QAAS0L,EAAMkO,aAA9C,iBACA,2BACEjb,KAAK,OACLkE,KAAK,QACLxC,YAAcqL,EAAMkO,UAA8B,GAAlB,gBAChCpW,QAAS6B,KAAKtE,SACdA,SAAUsE,KAAKtE,SACf0C,OAAQ4B,KAAKsV,QACbG,aAAa,SAGjB,yBAAKta,UAAU,eACb,0BAAMA,UAAU,WAAWkL,EAAMvM,SAGrC,yBAAKqB,UAAU,4BACb,kBAAC,IAAD,CAAMmM,GAAG,SAASnM,UAAU,mBAA5B,kBAEF,4BAAQA,UAAU,SAAS7B,KAAK,UAAhC,iB,GAtHiB+E,cAkIdkD,gBAJS,SAACC,GAAD,MAAY,CAAEkN,MAAOlN,KAElB,GAEZD,CAGbgY,I,SC0IaM,G,2MA3QbrY,MAAQ,CACNiT,SAAU,CACR3Z,MAAO,GACPyZ,WAAW,EACXza,MAAO,IAET4a,gBAAiB,CACf5Z,MAAO,GACPyZ,WAAW,EACXza,MAAO,IAETwa,cAAc,EACdkB,qBAAqB,EACrBb,UAAW,GACXmF,SAAUC,aAAmB,U,EAmC/BvP,SAAW,SAAA7S,GACTA,EAAEkO,iBADY,MAEwBlO,EAAEiE,OAAO4d,SAAvC/E,EAFM,EAENA,SAAUC,EAFJ,EAEIA,gBAElB,EAAK3R,SACH,CACE0R,SAAU,CACR3Z,MAAO2Z,EAAS3Z,MAChByZ,WAAW,EACXza,MAAQ2a,EAAS3Z,MAAqB,EAAK0G,MAAMiT,SAAS3a,MAAjC,YAE3B4a,gBAAiB,CACf5Z,MAAO4Z,EAAgB5Z,MACvByZ,WAAW,EACXza,MAAQ4a,EAAgB5Z,MAAqB,EAAK0G,MAAMiT,SAAS3a,MAAjC,cAGpC,WAAO,IAAD,EACkC,EAAK0H,MAAnCiT,EADJ,EACIA,SAAUC,EADd,EACcA,gBACdD,EAAS3Z,OAAS4Z,EAAgB5Z,QAAU2Z,EAAS3a,QAAU4a,EAAgB5a,OACjFmb,IACGjB,KACC,oBACA,CACES,SAAU,EAAKjT,MAAMiT,SAAS3Z,OAEhC,CACEqU,KAAM,CACJ4F,SAAU5d,IAAaa,MACvByc,SAAU,EAAKjT,MAAMiT,SAAS3Z,SAInCmZ,MAAK,WACJwF,MAAM,8BACN,EAAKjf,MAAMkf,QAAQzN,KAAK,iBAEzBkI,OAAM,SAAAra,GACL,EAAKiJ,SAAS,CACZ4R,UAAW,kD,EAQzBjZ,SAAW,SAAA/D,GAAM,IAAD,EACUA,EAAEiE,OAAlB4B,EADM,EACNA,KAAM1C,EADA,EACAA,MACd,EAAKiI,SAAL,eACGvF,EAAO,CACN1C,QACAyZ,WAAW,EACXza,MAAO,O,EAKbwb,QAAU,SAAA3d,GAAM,IAAD,EACWA,EAAEiE,OAAlB4B,EADK,EACLA,KAAM1C,EADD,EACCA,MACd,EAAKiI,SAAL,eACGvF,EAAO,CACN1C,QACAyZ,WAAW,EACXza,MAAOgB,EACM,aAAT0C,EACG6X,IAAc5O,KAAK3L,GAElB,GADA,gCAEO,oBAAT0C,GACA,EAAKgE,MAAMiT,SAAS3Z,QAAUA,EAC5B,eAEF,GACF,e,EAKVkf,sBAAwB,WAAO,IAAD,EACU,EAAKxY,MAAnCiT,EADoB,EACpBA,SAAUC,EADU,EACVA,gBAClB,OAAKA,EAAgB5Z,OAGjB2Z,EAAS3Z,QAAU4Z,EAAgB5Z,MAC9B,wBAHA,I,EAQXya,eAAiB,WACf,EAAKxS,SAAS,CACZuR,cAAe,EAAK9S,MAAM8S,gB,EAI9B2F,sBAAwB,SAAAxF,GACtB,MAAO,I,mFAjIY,IAAD,OAClB7L,SAASG,MAAQ,8BACb/I,KAAKwB,MAAMsY,UACb7E,IACGjd,IAAI,SAAU,CACbmX,KAAM,CACJ4F,SAAU/U,KAAKwB,MAAMsY,SACrBrF,SAAUhc,KAAKyhB,SAASzU,SAAS,OAGpCwO,MAAK,SAAAC,GACJ/c,IAAa2c,IAAII,EAASja,KAAKmV,MAAO8E,EAASja,KAAK,eACpD9C,IAAa6d,YAAYd,EAASja,KAAK8a,SAAUb,EAASja,KAAT,IAEjD,IAAIuP,EAAG,0BAAsB0K,EAASja,KAAKqB,IAC3C2Z,IAASjd,IAAIwR,GAAKyK,MAAK,SAAAiB,GACrB,IAAMC,EAAQ,eACTjB,EAASja,KADA,GAETjC,IAAIkd,EAAM,iBAAkB,KAEjC/d,IAAaie,YAAYD,GAEpBjB,EAASja,KAAKkgB,QACjB,EAAK3f,MAAMkf,QAAQzN,KAAK,2B,+BAuH1B,IAAD,SACuFjM,KAAKwB,MAA3FiT,EADD,EACCA,SAAUE,EADX,EACWA,UAAWmF,EADtB,EACsBA,SAAUpF,EADhC,EACgCA,gBAAiBc,EADjD,EACiDA,oBAAqBlB,EADtE,EACsEA,aAE7E,OACE,yBAAKnZ,UAAU,uBACb,yBAAKA,UAAU,QACb,yBAAK4X,IAAI,UAAUC,IAAKC,IAAM9J,OAAO,KAAKmI,MAAM,OAChD,0BAAM9N,MAAO,CAAE0P,MAAO,UAAtB,iBAEF,yBAAK/X,UAAU,eACb,wBAAIA,UAAU,SAAd,kBACC2e,EAAW,KACV,uBAAG3e,UAAU,eAAb,kEAIF,kBAACwe,GAAA,EAAD,CAAIC,UAAWjF,GACb,0BAAMxZ,UAAU,cAAcwZ,IAEhC,0BAAMnK,SAAUxK,KAAKwK,UACnB,yBACErP,UAAW0L,IAAG,yBAA0B,CACtC,eAAgB4N,EAASF,UACzB,uBAAwBE,EAAS3a,QAAU2a,EAASF,aAGtD,2BAAOpZ,UAAW0L,IAAG,aAAc,CAAElM,QAAS8Z,EAASF,aACrD,0BAAMpZ,UAAW0L,IAAG,QAAS,CAAElM,QAAS8Z,EAASF,aAAjD,YACA,2BACEjb,KAAMgb,EAAe,OAAS,WAC9B9W,KAAK,WACLxC,YAAcyZ,EAASF,UAA8C,GAAlC,gCACnCpW,QAAS6B,KAAKtE,SACdA,SAAUsE,KAAKtE,SACf0C,OAAQ4B,KAAKsV,QACbG,aAAa,SAGjB,yBAAKta,UAAU,eACb,0BAAMA,UAAU,WAAWsZ,EAAS3a,SAkBxC,yBACEqB,UAAW0L,IAAG,yBAA0B,CACtC,eAAgB6N,EAAgBH,UAChC,uBAAwBG,EAAgB5a,QAAU4a,EAAgBH,aAGpE,2BAAOpZ,UAAW0L,IAAG,aAAc,CAAElM,QAAS+Z,EAAgBH,aAC5D,0BAAMpZ,UAAW0L,IAAG,QAAS,CAAElM,QAAS+Z,EAAgBH,aAAxD,oBACA,2BACEjb,KAAMkc,EAAsB,OAAS,WACrChY,KAAK,kBACLxC,YAAc0Z,EAAgBH,UAAiC,GAArB,mBAC1CpW,QAAS6B,KAAKtE,SACdA,SAAUsE,KAAKtE,SACf0C,OAAQ4B,KAAKsV,QACbG,aAAa,SAGjB,yBAAKta,UAAU,eACb,0BAAMA,UAAU,WAAWuZ,EAAgB5a,OAC3C,0BACEqB,UAAU,mBACVwa,KAAK,eACL9X,QAAS,kBAAM,EAAKkF,SAAS,CAAEyS,qBAAsBA,MAEpDA,EACC,uBAAGra,UAAU,YAAYqI,MAAO,CAAEE,OAAQ,UAAWkS,SAAU,QAAU7M,MAAM,kBAE/E,uBACE5N,UAAU,kBACVqI,MAAO,CAAEE,OAAQ,UAAWkS,SAAU,QACtC7M,MAAM,qBAMhB,4BACE5N,UAAU,iCACV7B,KAAK,SACL8B,UAAWsZ,EAAgB5Z,OAAS4Z,EAAgB5a,OAAS2a,EAAS3a,OAHxE,iB,GA9PgBuE,aCTtB+T,I,OAAUC,gBAAK,kBAAM,wDACrBC,GAAI,SAACC,GAAD,OAAO,kBAAC,WAAD,CAAUC,SAAS,IAAID,EAAEE,QAE3BC,GADF,SAACH,GAAD,OAAO,kBAAC,GAAD,CAAGE,MAAO,kBAAC,GAAYF,MCFrCH,GAAUC,gBAAK,kBAAM,uDACrBC,GAAI,SAACC,GAAD,OAAO,kBAAC,WAAD,CAAUC,SAAS,IAAID,EAAEE,QAE3BC,GADF,SAACH,GAAD,OAAO,kBAAC,GAAD,CAAGE,MAAO,kBAAC,GAAYF,MCFrCH,GAAUC,gBAAK,kBAAM,6EACrBC,GAAI,SAACC,GAAD,OAAO,kBAAC,WAAD,CAAUC,SAAS,IAAID,EAAEE,QAE3BC,GADF,SAACH,GAAD,OAAO,kBAAC,GAAD,CAAGE,MAAO,kBAAC,GAAYF,MCFrCH,I,OAAUC,gBAAK,kBAAM,+EACrBC,GAAI,SAACC,GAAD,OAAO,kBAAC,WAAD,CAAUC,SAAS,IAAID,EAAEE,QAE3BC,GADF,SAACH,GAAD,OAAO,kBAAC,GAAD,CAAGE,MAAO,kBAAC,GAAYF,MCFrCH,GAAUC,gBAAK,kBAAM,wDACrBC,GAAI,SAACC,GAAD,OAAO,kBAAC,WAAD,CAAUC,SAAS,IAAID,EAAEE,QAE3BC,GADF,SAACH,GAAD,OAAO,kBAAC,GAAD,CAAGE,MAAO,kBAAC,GAAYF,MCE9B6H,I,OAAb,iLAEI,OACE,yBAAKjf,UAAU,YAAYG,GAAG,iBAC5B,yBAAKH,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,0BAAMwT,OAAO,GAAG0L,OAAO,QACrB,yBAAKlf,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKqI,MAAO,CAAE8W,MAAO,SACnB,yBACEnf,UAAU,iBACVqI,MAAO,CAAEoS,SAAU,OAAQ2E,cAAe,OAAQC,MAAO,SAEzD,kBAAC,IAAD,CAAMlT,GAAG,YAAY1B,IAAI,QACvB,uBAAGzK,UAAU,mBAAmBqI,MAAO,CAAE0P,MAAO,OAAQuH,YAAa,SAAY,KALrF,wBASA,yBAAKtf,UAAU,wBACO,QAAnB7C,IAAUC,MAAkB,uBAC3B4C,UAAU,kCACVuf,KAAK,IACL/E,KAAK,SACLra,GAAG,SACHmd,cAAY,WACZC,gBAAc,OACdC,gBAAc,SAPa,UAW7B,yBACExd,UAAU,oCACVyd,kBAAgB,mBAChBtd,GAAG,cAEH,uBAAGof,KAAK,KAAR,cACA,uBAAGA,KAAK,KAAR,oBAMR,yBAAKvf,UAAU,aACb,yBAAKA,UAAU,YACf,yBAAKA,UAAU,IACb,yBAAKA,UAAU,iBAAiBqI,MAAO,CAAEoS,SAAU,GAAI+E,aAAc,KAArE,cAIA,yBAAKxf,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,yCACA,2BAAO7B,KAAK,OAAOkE,KAAK,GAAGrC,UAAU,eAAeH,YAAY,gBAGpE,yBAAKG,UAAU,YACb,yBAAKA,UAAU,aAAaqI,MAAO,CAAEoX,UAAW,QAASrJ,UAAW,KAClE,4BAAQpW,UAAU,iCAAlB,eAOV,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YACf,yBAAKA,UAAU,IACb,yBAAKA,UAAU,iBAAiBqI,MAAO,CAAEoS,SAAU,GAAI+E,aAAc,KAArE,kBAGA,0BAAMhM,OAAO,GAAG0L,OAAO,QACrB,yBAAKlf,UAAU,gBACb,+BACE,+BACE,4BACE,sCACA,sCACA,oCACA,uCAEF,4BACE,iCACA,0CACA,4BACE,uBAAGuf,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,wBAAwBgX,cAAY,SADnD,UAIF,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,gBAAgBgX,cAAY,SAD3C,aAKJ,4BACE,iCACA,0CACA,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,wBAAwBgX,cAAY,SADnD,UAIF,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,gBAAgBgX,cAAY,SAD3C,aAKJ,4BACE,iCACA,4CACA,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,wBAAwBgX,cAAY,SADnD,UAIF,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,gBAAgBgX,cAAY,SAD3C,aAKJ,4BACE,iCACA,2CACA,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,wBAAwBgX,cAAY,SADnD,UAIF,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,gBAAgBgX,cAAY,SAD3C,+BAxItC,GAA4B9T,cAmKbkD,gBAJS,SAAAC,GAAK,MAAK,KAEP,GAEZD,CAA6C6Y,I,mBC/JtDS,GAAQ,eAAQ,CAAErd,KAAM,KAAMsd,SAAU,OACjCV,GAAb,2MACE5Y,MAAQ,CACNoR,SAAU,KACVmI,YAAa,GACbC,KAAM,GACNC,WAAW,GALf,EAYEC,eAAiB,SAACvjB,GAChB,EAAKoL,SAAS,CACZ6P,SAAS,eACJ,EAAKpR,MAAMoR,SADR,eAELjb,EAAEiE,OAAO4B,KAAO7F,EAAEiE,OAAOd,WAhBlC,EAqBEqgB,aAAe,SAAC7f,GACd4S,aAAuB,CACrBhQ,QAAS,UACTmQ,IAAK,+CACL5G,OAAQ,WACN0G,eACA8G,IAASmG,OAAT,4BACuB9f,IAEtB2Y,MAAK,kBAAM,EAAKoH,aAChBlH,OAAM,SAAAxc,GAAC,OAAID,YAAeC,UA/BnC,EAoCE6S,SAAW,WAAO,IAAD,EACkC,EAAKhJ,MADvC,IACPoR,SAAWpV,EADJ,EACIA,KAAMsd,EADV,EACUA,SAAUxf,EADpB,EACoBA,GAAK0f,EADzB,EACyBA,KACxC,GAAMxd,GAAQsd,EAAd,CAGA,IAAMpH,EAAW,CACf4H,QAAS,CAAC,EAAK9Z,MAAMoR,WAEV,QAAToI,EACF/F,IACGmB,IADH,6BAC6B9a,GAAMoY,GAChCO,MAAK,WACJ,EAAKlR,SAAS,CAAE6P,SAAU,KAAMoI,KAAM,KACtC,EAAKK,aAENlH,OAAM,SAAAxc,GAAC,OAAID,YAAeC,MAE7Bsd,IACGmB,IADH,kBAC0B1C,GACvBO,MAAK,WACJ,EAAKlR,SAAS,CAAE6P,SAAU,KAAMoI,KAAM,KACtC,EAAKK,aAENlH,OAAM,SAAAxc,GAAC,OAAID,YAAeC,QA3DnC,EA+DE0jB,QAAU,WACRpG,IACGjd,IAAI,mBACJic,MAAK,SAAAiB,GACJ,EAAKnS,SAAS,CAAEgY,YAAa/iB,IAAIkd,EAAM,cAAe,IAAK+F,WAAW,OAEvE9G,OAAM,SAAAxc,GAAC,OAAID,YAAeC,OArEjC,EAwEE4jB,kBAAoB,SAACC,GACnB,OACE,4BACE,4BACE,yBAAKrgB,UAAU,cACb,2BACE7B,KAAK,OACLkE,KAAK,OACLrC,UAAU,eACVH,YAAY,YACZU,SAAU,SAAA/D,GAAC,OAAI,EAAKujB,eAAevjB,IACnCqW,aAAchW,IAAIwjB,EAAU,OAAQ,QAI1C,4BACE,yBAAKrgB,UAAU,cACb,2BACE7B,KAAK,OACLkE,KAAK,WACLrC,UAAU,eACVH,YAAY,YACZU,SAAU,SAAA/D,GAAC,OAAI,EAAKujB,eAAevjB,IACnCqW,aAAchW,IAAIwjB,EAAU,WAAY,QAI9C,4BACE,yBAAKrgB,UAAU,cACb,yBAAKA,UAAU,mCAAmC0C,QAAS,EAAK2M,UAC9D,uBAAGrP,UAAU,2BAEf,yBACE0C,QAAS,kBAAM,EAAKkF,SAAS,CAAE6P,SAAU,KAAMoI,KAAM,MACrD7f,UAAU,2BAEV,uBAAGA,UAAU,iCA5G3B,mFASI6E,KAAKqb,YATT,+BAoHY,IAAD,SACiDrb,KAAKwB,MAArDoR,EADD,EACCA,SAAUoI,EADX,EACWA,KADX,IACiBD,mBADjB,MAC+B,GAD/B,EACmCE,EADnC,EACmCA,UAC1C,OACE,yBAAK9f,UAAU,YAAYG,GAAG,iBAC5B,yBAAKH,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,0BAAMwT,OAAO,GAAG0L,OAAO,QACrB,yBAAKlf,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKqI,MAAO,CAAE8W,MAAO,SACnB,yBACEnf,UAAU,iBACVqI,MAAO,CAAEoS,SAAU,OAAQ2E,cAAe,OAAQC,MAAO,SAEzD,kBAAC,IAAD,CAAMlT,GAAG,YAAY1B,IAAI,QACvB,uBAAGzK,UAAU,mBAAmBqI,MAAO,CAAE0P,MAAO,OAAQuH,YAAa,SAAY,KALrF,0BAgCJ,kBAAC,KAAD,CAAmBlQ,YAAa,iBAAe,QAATyQ,EAAiB,EAAKjY,SAAS,CAAE2Q,SAAU,KAAMsH,KAAM,KAAQ,EAAKxQ,aACxG,yBAAKrP,UAAU,aACb,yBAAKA,UAAU,iBAAiBqI,MAAO,CAAEoS,SAAU,GAAI+E,aAAc,MACjEK,GACA,kBAAC,IAAMS,SAAP,KACE,wCACA,uBACE5d,QAAS,SAAAlG,GACPA,EAAEsf,kBACF,EAAKlU,SAAS,CAAE6P,SAAUiI,GAAUG,KAAM,SAE5C7f,UAAU,6BACV4N,MAAM,oBACNoJ,cAAY,WAKpB,yBAAKhX,UAAU,IACb,yBAAKA,UAAU,iBAAiBqI,MAAO,CAAEoS,SAAU,GAAI+E,aAAc,KAArE,kBAGA,0BAAMhM,OAAO,GAAG0L,OAAO,QACrB,yBAAKlf,UAAU,gBACb,+BACE,+BACE,4BACE,sCACA,wCACA,uCAGA8f,EAAY,4BAAI,wBAAIS,QAAQ,IAAIvgB,UAAU,eAA1B,cAA8D,KAGrE,QAAT6f,EAAiBhb,KAAKub,oBAAsB,KAG5CR,GACAA,EAAYzd,KAAI,SAACqe,EAAQhS,GACvB,OAAGqR,IAASrR,EACH,EAAK4R,kBAAkB3I,GAG9B,wBAAIzX,UAAU,iBAAiB4N,MAAM,OAAOlL,QAAS,WAAQ,EAAKkF,SAAS,CAAE6P,SAAU+I,EAAQX,KAAMrR,MACnG,4BAAKgS,EAAOne,MACZ,4BAAKme,EAAOb,UACZ,oDAhN5C,GAA4Bzc,aCNf+b,IDkPE7Y,aAJS,SAAAC,GAAK,MAAK,KAEP,GAEZD,CAA6C6Y,IClP5D,iLAEI,OACE,yBAAKjf,UAAU,YAAYG,GAAG,iBAC5B,yBAAKH,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,0BAAMwT,OAAO,GAAG0L,OAAO,QACrB,yBAAKlf,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKqI,MAAO,CAAE8W,MAAO,SACnB,yBACEnf,UAAU,iBACVqI,MAAO,CAAEoS,SAAU,OAAQ2E,cAAe,OAAQC,MAAO,SAEzD,kBAAC,IAAD,CAAMlT,GAAG,YAAY1B,IAAI,QACvB,uBAAGzK,UAAU,mBAAmBqI,MAAO,CAAE0P,MAAO,OAAQuH,YAAa,SAAY,KALrF,wBASA,yBAAKtf,UAAU,wBACb,uBACEA,UAAU,kCACVuf,KAAK,IACL/E,KAAK,SACLra,GAAG,SACHmd,cAAY,WACZC,gBAAc,OACdC,gBAAc,SAPhB,UAWA,yBACExd,UAAU,oCACVyd,kBAAgB,mBAChBtd,GAAG,cAEH,uBAAGof,KAAK,KAAR,cACA,uBAAGA,KAAK,KAAR,oBAMR,yBAAKvf,UAAU,aACb,yBAAKA,UAAU,YACf,yBAAKA,UAAU,IACb,yBAAKA,UAAU,iBAAiBqI,MAAO,CAAEoS,SAAU,GAAI+E,aAAc,KAArE,cAIA,yBAAKxf,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,yCACA,2BAAO7B,KAAK,OAAOkE,KAAK,GAAGrC,UAAU,eAAeH,YAAY,gBAGpE,yBAAKG,UAAU,YACb,yBAAKA,UAAU,aAAaqI,MAAO,CAAEoX,UAAW,QAASrJ,UAAW,KAClE,4BAAQpW,UAAU,iCAAlB,eAOV,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YACf,yBAAKA,UAAU,IACb,yBAAKA,UAAU,iBAAiBqI,MAAO,CAAEoS,SAAU,GAAI+E,aAAc,KAArE,kBAGA,0BAAMhM,OAAO,GAAG0L,OAAO,QACrB,yBAAKlf,UAAU,gBACb,+BACE,+BACE,4BACE,sCACA,sCACA,oCACA,uCAEF,4BACE,iCACA,0CACA,4BACE,uBAAGuf,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,wBAAwBgX,cAAY,SADnD,UAIF,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,gBAAgBgX,cAAY,SAD3C,aAKJ,4BACE,iCACA,0CACA,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,wBAAwBgX,cAAY,SADnD,UAIF,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,gBAAgBgX,cAAY,SAD3C,aAKJ,4BACE,iCACA,4CACA,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,wBAAwBgX,cAAY,SADnD,UAIF,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,gBAAgBgX,cAAY,SAD3C,aAKJ,4BACE,iCACA,2CACA,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,wBAAwBgX,cAAY,SADnD,UAIF,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,gBAAgBgX,cAAY,SAD3C,+BAxItC,GAA4B9T,cAmKbkD,gBAJS,SAAAC,GAAK,MAAK,KAEP,GAEZD,CAA6C6Y,ICnK/CA,GAAb,iLAEI,OACE,yBAAKjf,UAAU,YAAYG,GAAG,iBAC5B,yBAAKH,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,0BAAMwT,OAAO,GAAG0L,OAAO,QACrB,yBAAKlf,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKqI,MAAO,CAAE8W,MAAO,SACnB,yBACEnf,UAAU,iBACVqI,MAAO,CAAEoS,SAAU,OAAQ2E,cAAe,OAAQC,MAAO,SAEzD,kBAAC,IAAD,CAAMlT,GAAG,YAAY1B,IAAI,QACvB,uBAAGzK,UAAU,mBAAmBqI,MAAO,CAAE0P,MAAO,OAAQuH,YAAa,SAAY,KALrF,wBASA,yBAAKtf,UAAU,wBACb,uBACEA,UAAU,kCACVuf,KAAK,IACL/E,KAAK,SACLra,GAAG,SACHmd,cAAY,WACZC,gBAAc,OACdC,gBAAc,SAPhB,UAWA,yBACExd,UAAU,oCACVyd,kBAAgB,mBAChBtd,GAAG,cAEH,uBAAGof,KAAK,KAAR,cACA,uBAAGA,KAAK,KAAR,oBAMR,yBAAKvf,UAAU,aACb,yBAAKA,UAAU,YACf,yBAAKA,UAAU,IACb,yBAAKA,UAAU,iBAAiBqI,MAAO,CAAEoS,SAAU,GAAI+E,aAAc,KAArE,cAIA,yBAAKxf,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,yCACA,2BAAO7B,KAAK,OAAOkE,KAAK,GAAGrC,UAAU,eAAeH,YAAY,gBAGpE,yBAAKG,UAAU,YACb,yBAAKA,UAAU,aAAaqI,MAAO,CAAEoX,UAAW,QAASrJ,UAAW,KAClE,4BAAQpW,UAAU,iCAAlB,eAOV,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YACf,yBAAKA,UAAU,IACb,yBAAKA,UAAU,iBAAiBqI,MAAO,CAAEoS,SAAU,GAAI+E,aAAc,KAArE,kBAGA,0BAAMhM,OAAO,GAAG0L,OAAO,QACrB,yBAAKlf,UAAU,gBACb,+BACE,+BACE,4BACE,sCACA,sCACA,oCACA,uCAEF,4BACE,iCACA,0CACA,4BACE,uBAAGuf,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,wBAAwBgX,cAAY,SADnD,UAIF,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,gBAAgBgX,cAAY,SAD3C,aAKJ,4BACE,iCACA,0CACA,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,wBAAwBgX,cAAY,SADnD,UAIF,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,gBAAgBgX,cAAY,SAD3C,aAKJ,4BACE,iCACA,4CACA,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,wBAAwBgX,cAAY,SADnD,UAIF,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,gBAAgBgX,cAAY,SAD3C,aAKJ,4BACE,iCACA,2CACA,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,wBAAwBgX,cAAY,SADnD,UAIF,4BACE,uBAAGuI,KAAK,IAAIvf,UAAU,mBACpB,uBAAGA,UAAU,gBAAgBgX,cAAY,SAD3C,+BAxItC,GAA4B9T,aAmKbkD,gBAJS,SAAAC,GAAK,MAAK,KAEP,GAEZD,CAA6C6Y,I,0EC/J/CwB,GAAgB,SAAA3hB,GAC3B,MAAO,CACLX,KAAMY,IAAcgT,WACpB9S,QAASH,IC8IEsH,oBARS,SAAAC,GAAK,MAAK,CAChCgO,YAAahO,EAAMuO,WAAWP,gBAGhC,SAA4BlQ,GAC1B,OAAOoC,aAAmB,CAAEka,kBAAiBtc,KAGhCiC,EA3IO,SAAC,GAA6C,IAA3CiO,EAA0C,EAA1CA,YAAaoM,EAA6B,EAA7BA,cAAelC,EAAc,EAAdA,QAAc,EAC/Bhf,oBAAS,GADsB,mBAC1D4d,EAD0D,KAC/CC,EAD+C,OAE7B7d,mBAAS,IAFoB,mBAE1DmhB,EAF0D,KAE9CC,EAF8C,OAGjBphB,oBAAS,GAHQ,mBAG1DqhB,EAH0D,KAGxCC,EAHwC,KAI3DjH,EAAW5d,IAAawc,eAAiB,IACzCsI,EAAiBrL,iBAAOsL,MAAS,SAACC,GAAD,OAAUC,EAAOD,KAAO,MAAMrL,QAE/DsL,EAAS,SAACD,GACd,IAAMlR,EAAG,0CAAsCkR,GAC3CA,GACFH,GAAoB,GACpBF,EAAc,IACdO,IACGrkB,IAAIiT,GACJgJ,MAAK,SAACvR,GACLsZ,GAAoB,GACpB,IAEMM,EAFO5Z,EAAIzI,KAAKsiB,OAEHC,MAAK,SAACC,EAAGC,GAC1B,MAAoB,aAAjBD,EAAEE,YACK,EACkB,WAAjBF,EAAEE,YAA4C,aAAjBD,EAAEC,YAChC,EACkB,eAAjBF,EAAEE,YAAgD,WAAjBD,EAAEC,YAA4C,aAAjBD,EAAEC,YACjE,EACkB,eAAjBF,EAAEE,YAAgD,WAAjBD,EAAEC,YAA4C,aAAjBD,EAAEC,YAA8C,eAAjBD,EAAEC,YAChG,EAEH,KAETb,EAAcQ,MAEfnI,OAAM,SAACxc,GAAD,OAAOD,YAAeC,OAE/BmkB,EAAc,KAIZc,EAAS,CACb,WAAc,WACd,WAAc,cACd,SAAY,YACZ,OAAU,UACV,aAAgB,WAGlB,OACE,yBAAKzhB,UAAU,gBAAgBG,GAAG,aAChC,yBAAKH,UAAU,+BACb,yBAAKsd,cAAY,kBAAkB5a,QAAS,WAAQ+d,EAAc,CAAEpM,aAAcA,MAChF,uBAAGlU,GAAG,OAAOH,UAAS,yBAAoBqU,EAAc,kBAAoB,mBAAtD,sBAAiG,KAEzH,yBAAKrU,UAAU,OAAO6X,IAAKC,IAAMF,IAAI,YAJvC,cAOA,yBAAK5X,UAAU,YACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,YACb,0BAAMA,UAAU,sCACd,yBAAKA,UAAU,eACb,kBAAC0hB,GAAA,EAAD,CACEC,YAAaC,KACXlB,EAAWve,KAAI,SAAC0f,GAAD,MAAQ,CACrB1hB,GAAI0hB,EAAE1hB,GACNhC,KAAM0jB,EAAEL,WACRnf,KAAK,WAAD,OAA8B,iBAAjBwf,EAAEL,WAAgC,SAAU,IAAzD,OAA8DC,EAAOI,EAAEL,YAAvE,sBAAgGK,EAAEC,oBAExG,MAEFjiB,YAAY,4CACZkiB,eAAe,YACfC,sBAAsB,iBACtBC,YAAa,SAAC5Y,GAAaA,IAAOsX,EAAc,IAAKpC,EAAQzN,KAAR,WAAiB2Q,EAAOpY,EAAKlL,MAAM+jB,cAAnC,YAAoD7Y,EAAKlJ,OAC9G8gB,OAAQ,SAACD,GAAD,OAAUF,EAAeE,IACjClB,UAAWc,OAKnB,yBAAK5gB,UAAU,YACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,YACb,yBACEA,UAAU,sBACVmM,GAAG,IACHqO,KAAK,SACLra,GAAG,UACHmd,cAAY,WACZC,gBAAc,OACdC,gBAAc,QACd9a,QAAS,kBAAM0a,GAAcD,KAE7B,yBAAKnd,UAAU,gCAAgC4Z,EAAS,KAE1D,kBAACrE,EAAA,EAAD,CAAmBnG,YAAagO,GAC9B,yBACEpd,UAAS,wBAAmBmd,GAAa,6BACzChd,GAAG,aACHsd,kBAAgB,oBAEhB,yBAAKzd,UAAU,gCAAgC4Z,EAAS,IACxD,uBAAGhM,MAAOgM,EAAU5Z,UAAU,eAAe4Z,GAC7C,yBAAK5Z,UAAU,MAAMG,GAAG,aACtB,yBAAKH,UAAU,YACb,kBAAC,IAAD,CAAM0C,QAAS,kBAAM0a,GAAa,IAAQjR,GAAG,qBAA7C,YAIF,yBAAKnM,UAAU,wBACb,kBAAC,IAAD,CACEC,UAAQ,EACRyC,QAAS,WACP0a,GAAa,GACb1hB,gBAJJ,wB,8BClHlBymB,GAAM,CACV,CACE9f,KAAM,YACN+f,MAAO,6BACPC,MAAO,aACPC,gBAAiB,iBACjBC,YAAa,IAEf,CACElgB,KAAM,UACN+f,MAAO,yBACPC,MAAO,WACPC,gBAAiB,iBACjBC,YAAa,IAEf,CACElgB,KAAM,WACN+f,MAAO,uCACPC,MAAO,YACPC,gBAAiB,iBACjBC,YAAa,GACbC,OAA6B,QAApBrlB,IAAUC,KAAkB,CACnC,CACEiF,KAAM,kBACN+f,MAAO,uCACPC,MAAO,mBACPC,gBAAiB,8BACjBC,YAAa,KAEb,MAEN,CACElgB,KAAM,cACN+f,MAAO,+BACPC,MAAO,eACPC,gBAAiB,oBACjBC,YAAa,GACbC,OAAQ,CACN,CACEngB,KAAM,gBACN+f,MAAO,+BACPC,MAAO,WACPC,gBAAiB,iBACjBC,YAAa,MAInB,CACElgB,KAAM,UACN+f,MAAO,uBACPC,MAAO,WACPC,gBAAiB,iBACjBC,YAAa,CAAC,qBAEhB,CACElgB,KAAM,YACN+f,MAAO,oBACPC,MAAO,aACPC,gBAAiB,mBACjBC,YAAa,CAAC,qBAAsB,+BAEtC,CAAElgB,KAAM,UAAW+f,MAAO,wBAAyBC,MAAO,WAAYC,gBAAiB,GAAIC,YAAa,IACxG,CAAElgB,KAAM,WAAY+f,MAAO,8BAA+BC,MAAO,YAAaC,gBAAiB,GAAIC,YAAa,IAChH,CAAElgB,KAAM,WAAY+f,MAAO,kBAAmBC,MAAO,YAAaC,gBAAiB,GAAIC,YAAa,KAyIvFE,mBAAWrc,aARF,SAACC,GAAD,MAAY,CAClCgO,YAAahO,EAAMuO,WAAWP,gBAGhC,SAA4BlQ,GAC1B,OAAOoC,aAAmB,CAAEka,kBAAiBtc,KAGrBiC,EAtIH,SAAC/G,GAAW,IACzBgV,EAAyBhV,EAAzBgV,YAAakK,EAAYlf,EAAZkf,QAOrB,SAASmE,EAAwBC,GAC/BR,GAAI3d,SAAQ,SAACoe,GACPA,EAAQN,kBAAoBK,IAC9BC,EAAQL,YAAY/d,SAAQ,SAACqe,GAC3B3mB,aAAawB,WAAWmlB,MAE1B3mB,aAAawB,WAAWklB,EAAQN,qBAKtC,OAhBAhjB,IAAMuW,WAAU,WACd,IAAIiN,EAAcjmB,IAAIlB,OAAQ,oBAAqB,IAAIwR,MAAM,KAC7D1Q,QAAQC,IAAI,qBAAsBomB,KACjC,IAcD,yBAAK3iB,GAAG,oBAAoBH,UAAWqU,EAAc,mBAAqB,qBACxE,yBAAKrU,UAAU,2BACZmiB,GAAIhgB,KAAI,SAACygB,EAAShY,GAAV,OACP,6BACE,kBAACmY,GAAA,EAAD,CACE/iB,UAAU,gBACVgjB,iBACEJ,EAAQJ,QAC2F,IAAnGI,EAAQJ,OAAOle,QAAO,SAAC2e,GAAD,OAAQpmB,IAAI0hB,EAAS,oBAAqB,IAAIzhB,SAASmmB,EAAGZ,UAAQ/U,OACpF1C,EACA,MAGN,kBAACmY,GAAA,EAAUG,OAAX,CACEljB,UAAU,iCAEVmjB,GAAIpV,KAAKhB,OACTqW,SAAUxY,GAEV,kBAAC,IAAD,CACEH,IAAKmY,EAAQvgB,KACb8J,GAAIyW,EAAQP,MACZgB,gBAAgB,UAChB3gB,QAAS,SAAClG,GACJomB,EAAQU,YAAczmB,IAAI0hB,EAAS,oBAAqB,MAAQqE,EAAQP,OAC1E7lB,EAAEkO,iBACFxO,aAAawB,WAAWklB,EAAQN,iBAChCM,EAAQL,YAAY/d,SAAQ,SAACqe,GAC3B3mB,aAAawB,WAAWmlB,MAE1BtE,EAAQzN,KAAK,KACbyN,EAAQzN,KAAK8R,EAAQP,QAErBK,EAAwBE,EAAQN,kBAGpCtiB,UAAS,gFACP4iB,EAAQU,WAAa,qCAAuC,KAG9D,yBAAKtjB,UAAU,yDACb,kBAACujB,GAAA,EAAD,CAAS3V,MAAOgV,EAAQvgB,KAAMmhB,UAAU,SACtC,uBACEnb,MAAO,CAAE8N,MAAO,QAChBnW,UAAW4iB,EAAQR,MACnB9E,cAAY,UACZmG,iBAAe,WAGnB,0BAAMzjB,UAAWqU,EAAc,iBAAmB,yBAA0BuO,EAAQvgB,SAI1F,kBAAC0gB,GAAA,EAAUW,SAAX,CAAoB1jB,UAAU,UAAUojB,SAAUxY,GAChD,6BACGgY,EAAQJ,OACP,yBAAKxiB,UAAS,iBAAYqU,EAAc,OAAS,KAC9CuO,EAAQJ,OAAOrgB,KAAI,SAAC8gB,GAAD,OAClB,kBAAC,IAAD,CACExY,IAAKwY,EAAG5gB,KACR8J,GAAI8W,EAAGZ,MACPgB,gBAAgB,UAChB3gB,QAAS,SAAClG,GACJymB,EAAGK,YAAczmB,IAAI0hB,EAAS,oBAAqB,MAAQ0E,EAAGZ,OAChE7lB,EAAEkO,iBACFxO,aAAawB,WAAWulB,EAAGX,iBAC3BW,EAAGV,YAAY/d,SAAQ,SAACqe,GACtB3mB,aAAawB,WAAWmlB,MAE1BtE,EAAQzN,KAAK,KACbyN,EAAQzN,KAAKmS,EAAGZ,QAEhBK,EAAwBO,EAAGX,kBAG/BtiB,UAAS,+EACPijB,EAAGK,WAAa,qCAAuC,KAGzD,yBAAKtjB,UAAU,yDACb,kBAACujB,GAAA,EAAD,CAAS3V,MAAOqV,EAAG5gB,KAAMmhB,UAAU,SACjC,uBACEnb,MAAO,CAAE8N,MAAO,QAChBnW,UAAWijB,EAAGb,MACd9E,cAAY,UACZmG,iBAAe,WAGnB,0BAAMzjB,UAAWqU,EAAc,iBAAmB,yBAA0B4O,EAAG5gB,YAMvF,gBC5Ld4U,GAAUC,gBAAK,kBAAM,+DACrBC,GAAI,SAACC,GAAD,OAAO,kBAAC,WAAD,CAAUC,SAAS,IAAID,EAAEE,QAE3BC,GADF,SAACH,GAAD,OAAO,kBAAC,GAAD,CAAGE,MAAO,kBAAC,GAAYF,MCFrCH,GAAUC,gBAAK,kBAAM,gEACrBC,GAAI,SAACC,GAAD,OAAO,kBAAC,WAAD,CAAUC,SAAS,IAAID,EAAEE,QAE3BC,GADF,SAACH,GAAD,OAAO,kBAAC,GAAD,CAAGE,MAAO,kBAAC,GAAYF,MCFrCH,GAAUC,gBAAK,kBAAM,wDACrBC,GAAI,SAACC,GAAD,OAAO,kBAAC,WAAD,CAAUC,SAAS,IAAID,EAAEE,QAE3BC,GADF,SAACH,GAAD,OAAO,kBAAC,GAAD,CAAGE,MAAO,kBAAC,GAAYF,MCFrCH,GAAUC,gBAAK,kBAAM,wDACrBC,GAAI,SAACC,GAAD,OAAO,kBAAC,WAAD,CAAUC,SAAS,IAAID,EAAEE,QAE3BC,GADF,SAACH,GAAD,OAAO,kBAAC,GAAD,CAAGE,MAAO,kBAAC,GAAYF,MCFrCH,GAAUC,gBAAK,kBAAM,kCACrBC,GAAI,SAACC,GAAD,OAAO,kBAAC,WAAD,CAAUC,SAAS,IAAID,EAAEE,QAE3BC,GADF,SAACH,GAAD,OAAO,kBAAC,GAAD,CAAGE,MAAO,kBAAC,GAAYF,MCkK5BuM,I,OA9JM,SAACtkB,GAAW,IAAD,EACME,mBAAS,IADf,mBACrBqkB,EADqB,KACVC,EADU,OAEMtkB,mBAAS,IAFf,mBAErBukB,EAFqB,KAEVC,EAFU,OAGMxkB,mBAAS,IAHf,mBAGrBykB,EAHqB,KAGVC,EAHU,OAIN1kB,mBAAS,IAJH,mBAIrB2kB,EAJqB,KAIhBC,EAJgB,OAKU5kB,mBAAS,CAC3C6kB,QAAS,GACTC,YAAa,GACbC,eAAgB,GAChBC,SAAU,GACVC,YAAa,KAVW,mBAKrBC,EALqB,KAKXC,EALW,KAa5B7O,qBAAU,WACD7Z,IAAa2oB,aAIlBC,IAHIvlB,EAAMkf,QAAQzN,KAAK,gBAIxB,IAEH,IAAM8T,EAAiB,WACnB9K,IAASjd,IAAI,6BACZic,MAAK,SAAAC,GACF,IAAMgB,EAAOhB,EAASja,KAAKsiB,OACxBrH,IACC8J,EAAa9J,EAAK8K,iBAClBd,EAAahK,EAAK+K,iBAClBb,EAAalK,EAAKgL,iBAClBZ,EAAOpK,EAAKiL,UACZN,EAAkB,CACdN,QAASrK,EAAKkL,WACdZ,YAAatK,EAAKmL,gBAClBZ,eAAgBvK,EAAKoL,mBACrBZ,SAAUxK,EAAKqL,aACfZ,YAAazK,EAAKsL,uBA4B5BC,EAAe,SAAC3lB,GAAD,OAAYA,GAAS,IAAI4lB,OAAO,IAAM5lB,EAAM6lB,OAAO7lB,EAAM2N,OAAS,IAEvF,OACI,yBAAKtN,UAAU,wBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,cACX,0DACA,2BAAO7B,KAAK,OAAO6B,UAAU,eAAe6S,aAAcyS,EAAa1B,GAAYrjB,SAAU,SAAA/D,GAAC,OAAIqnB,EAAarnB,EAAEiE,OAAOd,QAAQE,YAAY,+BAIxJ,yBAAKG,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,cACX,6DACA,2BAAO7B,KAAK,OAAO6B,UAAU,eAAe6S,aAAcyS,EAAaxB,GAAYvjB,SAAU,SAAA/D,GAAC,OAAIunB,EAAavnB,EAAEiE,OAAOd,QAAQE,YAAY,kCAIxJ,yBAAKG,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,cACX,+DACA,2BAAO7B,KAAK,OAAO6B,UAAU,eAAe6S,aAAcyS,EAAatB,GAAYzjB,SAAU,SAAA/D,GAAC,OAAIynB,EAAaznB,EAAEiE,OAAOd,QAAQE,YAAY,qCAK5J,yBAAKG,UAAU,aACX,yBAAKA,UAAU,YACf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,sCACA,4BAAQA,UAAU,eAAe6S,aAAcqR,EAAK3jB,SAAU,SAAA/D,GAAC,OAAI2nB,EAAO3nB,EAAEiE,OAAOd,SAC/E,4BAAQM,UAAQ,EAACqP,UAAQ,GAAzB,cACA,4BAAQ3P,MAAM,YAAd,gBAMJ,aAARukB,EACI,kBAAC,IAAM5D,SAAP,KACI,yBAAKtgB,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,mDACA,2BAAO7B,KAAK,OAAO6B,UAAU,eAAe6S,aAAcyS,EAAab,EAASL,SAAU7jB,SAAU,SAAA/D,GAAC,OAAIkoB,EAAkB,eAAKD,EAAN,CAAgBL,QAAS5nB,EAAEiE,OAAOd,UAASE,YAAY,uBAGzL,yBAAKG,UAAU,YACX,yBAAKA,UAAU,cACX,wDACA,2BAAO7B,KAAK,OAAO6B,UAAU,eAAe6S,aAAcyS,EAAab,EAASJ,aAAc9jB,SAAU,SAAA/D,GAAC,OAAIkoB,EAAkB,eAAKD,EAAN,CAAgBJ,YAAa7nB,EAAEiE,OAAOd,UAAUE,YAAY,6BAItM,yBAAKG,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,2DACA,2BAAO7B,KAAK,OAAO6B,UAAU,eAAe6S,aAAcyS,EAAab,EAASH,gBAAiB/jB,SAAU,SAAA/D,GAAC,OAAIkoB,EAAkB,eAAKD,EAAN,CAAgBH,eAAgB9nB,EAAEiE,OAAOd,UAAUE,YAAY,+BAGxM,yBAAKG,UAAU,YACX,yBAAKA,UAAU,cACX,qDACA,2BAAO7B,KAAK,OAAO6B,UAAU,eAAe6S,aAAcyS,EAAab,EAASF,UAAWhkB,SAAU,SAAA/D,GAAC,OAAIkoB,EAAkB,eAAKD,EAAN,CAAgBF,SAAU/nB,EAAEiE,OAAOd,UAAUE,YAAY,0BAIhM,yBAAKG,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,wDACA,2BAAO7B,KAAK,OAAO6B,UAAU,eAAe6S,aAAcyS,EAAab,EAASD,aAAcjkB,SAAU,SAAA/D,GAAC,OAAIkoB,EAAkB,eAAKD,EAAN,CAAgBD,YAAahoB,EAAEiE,OAAOd,UAAUE,YAAY,8BAK5M,KAEN,yBAAKG,UAAU,OACX,yBAAKA,UAAU,YACX,4BAAQC,UAzFG2jB,IAAcE,IAAcE,IAAcE,IAAQO,EAASL,UAAYK,EAASJ,cAAgBI,EAASH,iBAAmBG,EAASF,WAAaE,EAASD,YAyFlI9hB,QA7G9B,WACtB,IAAM+iB,EAAgB,CAClB,gBAAmB7B,EACnB,gBAAmBE,EACnB,gBAAmBE,EACnB,SAAYE,EACZ,WAAcO,EAASL,QACvB,gBAAmBK,EAASJ,YAC5B,mBAAsBI,EAASH,eAC/B,aAAgBG,EAASF,SACzB,gBAAmBE,EAASD,aAEhC1K,IACKjB,KAAK,4BADV,eAC4C4M,IACvC3M,MAAK,WACF8L,IACA3mB,YAAQ,yCAA0C,cACnD+a,OAAM,SAAAxc,GAAC,OAAID,YAAeC,OA4F+CwD,UAAU,mBAA1E,gBCxJlB0lB,I,OAAe,CACnBlS,OAAQ,GACRmS,SAAU,GACVC,aAAc,KACdC,OAAQ,GACRC,OAAQ,GACRC,KAAM,GACNC,IAAK,GACLC,YAAa,KAGTC,GAAW,CACf,CACE/lB,GAAI,MACJkC,KAAM,UAER,CACElC,GAAI,MACJkC,KAAM,WAER,CACElC,GAAI,MACJkC,KAAM,aAER,CACElC,GAAI,MACJkC,KAAM,YAER,CACElC,GAAI,MACJkC,KAAM,UAER,CACElC,GAAI,MACJkC,KAAM,YAER,CACElC,GAAI,MACJkC,KAAM,WAGW8jB,G,2MACnB9f,M,eACKqf,I,EAGLU,WAAa,kBAAM,EAAKxe,SAAL,eAAmB8d,M,EAEtCW,UAAY,WAAO,IACTloB,EAAS,EAAKkB,MAAdlB,KACAynB,EAAiB,EAAKvf,MAAtBuf,aACR,GAA0B,SAAtB,EAAKvf,MAAMmN,OACb,OACE,kBAAC,KAAD,CACEpE,YAAa,SAAC5S,GACZA,EAAEsf,kBACF,EAAKwK,YAAY,OAAQV,EAAcznB,GACvC,EAAKioB,eAGP,4BACE,4BAAKR,EAAazlB,IAClB,4BAAKylB,EAAavjB,MAClB,4BACE,2BACElE,KAAK,SACL6B,UAAS,uBAAkB,EAAKqG,MAAMyf,OAAS,IAAM,EAAKzf,MAAMyf,OAAS,EAAI,QAAU,IACvFjlB,IAAK,EACLC,IAAK,GACL+R,aAAc+S,EAAaE,OAC3BS,QAAS,SAAC/pB,GAAD,OACP,EAAKoL,SAAS,CACZke,OAAQtpB,EAAEiE,OAAOd,YAKzB,4BACE,2BACExB,KAAK,SACL6B,UAAU,eACVa,IAAK,EACLC,IAAK,GACL+R,aAAc+S,EAAaG,KAC3BQ,QAAS,SAAC/pB,GAAD,OACP,EAAKoL,SAAS,CACZme,KAAMvpB,EAAEiE,OAAOd,YAKvB,4BACE,2BACExB,KAAK,SACL0C,IAAK,EACLC,IAAK,GACLd,UAAU,eACV6S,aAAc+S,EAAaI,IAC3BO,QAAS,SAAC/pB,GAAD,OACP,EAAKoL,SAAS,CACZoe,IAAKxpB,EAAEiE,OAAOd,YAKtB,4BACE,4BACEK,UAAU,eACV6S,aAAc+S,EAAaK,YAG3B1lB,SAAU,SAAC/D,GAAD,OACR,EAAKoL,SAAS,CACZqe,YAAazpB,EAAEiE,OAAOd,UAI1B,4BAAQA,MAAM,GAAG2P,UAAQ,GAAzB,QAGC4W,GAAS/jB,KAAI,SAACqM,GAAD,OACZ,4BAAQ/D,IAAK+D,EAAErO,GAAIR,MAAO6O,EAAErO,IACzBqO,EAAEnM,c,EAWrBmkB,WAAa,SAACroB,EAAMW,GAAU,IAAD,EACQ,EAAKuH,MAAhCuf,EADmB,EACnBA,aAAcD,EADK,EACLA,SACtB,GAAa,QAATxnB,EACF,OAAOW,EAAKqD,KAAI,SAACqM,EAAGqR,GAClB,IAAK+F,GAAiBA,GAAgBA,EAAazlB,KAAOqO,EAAErO,GAAK,CAC/D,GAAI0f,IAAS8F,EAGX,OACE,wBACEjjB,QAAS,kBACP,EAAKkF,SAAS,CACZ4L,OAAQ,OACRoS,aAAcpX,EACdmX,SAAU9F,EACViG,OAAQtX,EAAEsX,OACVC,KAAMvX,EAAEuX,KACRC,IAAKxX,EAAEwX,IACPC,YAAazX,EAAEyX,gBAInB,4BAAKzX,EAAErO,IACP,4BAAKqO,EAAEnM,MACP,4BAAKmM,EAAEsX,QACP,4BAAKtX,EAAEuX,MACP,4BAAKvX,EAAEwX,KACP,4BACGE,GAAS/iB,MAAK,SAAC6iB,GAAD,OAASxX,EAAEyX,aAAeD,EAAI7lB,OAC3C+lB,GAAS/iB,MAAK,SAAC6iB,GAAD,OAASxX,EAAEyX,aAAeD,EAAI7lB,MAAIkC,OAvBxD,EAAKgkB,YA6BT,OAAO,EAAKA,gB,EAKlBC,YAAc,SAACtX,EAAMqR,EAAUliB,GAC7B,IAAMkQ,EAAG,0BAAsBgS,EAASlgB,IADF,EAGK,EAAKkG,MAAxCyf,EAH8B,EAG9BA,OAAQC,EAHsB,EAGtBA,KAAMC,EAHgB,EAGhBA,IAAKC,EAHW,EAGXA,YAC3B,GACEH,GAAUzF,EAASyF,QACnBC,GAAQ1F,EAAS0F,MACjBC,GAAO3F,EAAS2F,KAChBC,GAAe5F,EAAS4F,YAExB,EAAKG,kBACA,GAAKN,GAAWC,GAASC,GAAQC,EAEjC,GAAIH,EAAS,IAAMC,EAAO,IAAMC,EAAM,GAC3C/nB,YAAQ,gBAAiB,SACzB,EAAKmoB,kBACA,GAAIN,GAAUC,GAAQC,GAAOC,EAAa,CAC/C,IAAIR,EAAgB,CAClBK,OAAQA,EACRC,KAAMA,EACNC,IAAKA,EACLC,YAAaA,GAEfnM,IAAQ,KAAczL,EAAtB,eAAgCoX,IAAiB3M,MAAK,SAACC,GACrD,EAAK1Z,MAAMonB,gBACX,EAAKL,aAELnoB,YAAQiV,uBAAuB,mBAGjC,EAAKkT,kBAlBL,EAAKA,c,wEAsBC,IAAD,EACwBvhB,KAAKxF,MAA5BqnB,EADD,EACCA,OAAQ5nB,EADT,EACSA,KAAMX,EADf,EACeA,KACdqV,EAAW3O,KAAKwB,MAAhBmN,OAER,OACE,yBAAKxT,UAAU,YACb,2BAAOA,UAAS,gBACd,+BACE,4BACG0mB,EAAOvkB,KAAI,SAACqM,EAAG5D,GAAJ,OACV,wBAAIvC,MAAO,CAAE8N,OAAc,IAANvL,GAAiB,IAANA,GAAiB,IAANA,IAAY,QAAU4D,QAIvE,+BACI1P,EAAKwO,QAAWkG,EAOhB3O,KAAK2hB,WAAWroB,EAAMW,GANtB,4BACE,wBAAI6nB,QAASD,EAAOpZ,OAAQtN,UAAU,eAAtC,sB,GAvLyBV,IAAM4D,WCQhC0jB,G,YAhDb,WAAYvnB,GAAQ,IAAD,8BACjB,4CAAMA,KAURwnB,QAAU,WACR/M,IAASjd,IAAT,gBACCic,MAAK,SAAAC,GACJ,EAAKnR,SAAS,CACZkf,KAAM/N,EAASja,KAAKsiB,YAErBpI,OAAM,SAAAxc,GAAC,OAAID,YAAeC,OAf7B,EAAK6J,MAAQ,CACXygB,KAAM,IAHS,E,iFAQjBjiB,KAAKgiB,Y,+BAYG,IAENC,EACEjiB,KAAKwB,MADPygB,KAKF,OACE,yBAAK9mB,UAAU,OACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,GAAD,CACE7B,KAAK,MACLW,KAAMgoB,EACNJ,OAXS,CAAC,SAAU,OAAQ,SAAU,OAAQ,MAAO,eAYrDD,cAAe5hB,KAAKgiB,mB,GAtCTvnB,IAAM4D,WC6CpB6jB,OA5Cf,SAAc1nB,GACV,IAAM2nB,EAAS3nB,EAAMzD,SAASqrB,KAC9B,OACI,yBAAKjnB,UAAU,MAAMG,GAAG,iBACpB,yBAAKH,UAAU,aACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aAEX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,aAAaqI,MAAO,CAAEoS,SAAU,OAAQ2E,cAAe,OAAQC,MAAO,SACjF,kBAAC,IAAD,CAAMlT,GAAG,YAAYyB,MAAM,QAAO,uBAAG5N,UAAU,mBAAmBgX,cAAY,OAAO3O,MAAO,CAAE0P,MAAO,OAAQuH,YAAa,WAD9H,SAMJ,yBAAKtf,UAAU,YACf,yBAAKA,UAAU,WAAWG,GAAG,gBACzB,kBAAC,GAAiBd,IAEtB,kBAAC0jB,GAAA,EAAD,CAAW/iB,UAAU,YAAYgjB,iBAA6B,oBAAXgE,GAAgC,IAAK7mB,GAAG,kBACvF,kBAAC4iB,GAAA,EAAUG,OAAX,CACIljB,UAAU,iDACVmjB,GAAIpV,KAAKhB,OACTqW,SAAS,KAET,wBAAIpjB,UAAU,QAAd,oBAEJ,kBAAC+iB,GAAA,EAAUW,SAAX,CAAoB1jB,UAAU,OAAOojB,SAAS,KAC1C,yBAAKpjB,UAAU,aACX,kBAAC,GAAmBX,a,OC6IhE,IAIe+G,gBAJS,SAAAC,GAAK,MAAK,KAEP,GAEZD,EAhLf,SAAwB/G,GACtB,IAD6B,EAUSE,mBATxB,CACZY,GAAI,EACJkC,KAAM,gBACNyV,KAAM,IACNI,SAAU,GACVD,aAAc,GACdiP,QAAS,KAPkB,mBAUtBC,EAVsB,KAUTC,EAVS,OAWW7nB,oBAAS,GAXpB,mBAWR8nB,GAXQ,aAYa9nB,oBAAS,GAZtB,mBAYP+nB,GAZO,WAc7BzR,qBAAU,WAGNiE,IACGjd,IAFO,WAGPic,MAAK,SAAAC,GACJ,GAA4B,MAAxBA,EAASja,KAAKsiB,QAA6C,MAA3BrI,EAASja,KAAKsiB,OAAO,GAAY,CACnE,IAAMmG,EAAO,CACXpnB,GAAIqnB,EAASzO,EAASja,KAAKsiB,OAAO,GAAGjhB,IACrCkC,KAAMmlB,EAASzO,EAASja,KAAKsiB,OAAO,GAAG/e,MACvColB,WAAYD,EAASzO,EAASja,KAAKsiB,OAAO,GAAGqG,YAC7CjN,KAAMzB,EAASja,KAAKsiB,OAAO,GAAG5G,MAAQ,IACtCtP,MAAOsc,EAASzO,EAASja,KAAKsiB,OAAO,GAAGlW,OACxCiN,MAAOqP,EAASzO,EAASja,KAAKsiB,OAAO,GAAGjJ,OACxCyB,SAAU4N,EAASzO,EAASja,KAAKsiB,OAAO,GAAGxH,WAE7CwN,EAAeG,GACfD,GAAiB,OAGpBtO,OAAM,SAAAxc,GAAC,OAAID,YAAeC,QAI9B,IAEH,IAAMgrB,EAAW,SAAAhrB,GACf,OAAOA,GAAK,IA0Bd,OACE,kBAACumB,GAAA,EAAD,CAAW/iB,UAAU,YAAYgjB,iBAAiB,KAIhD,kBAACD,GAAA,EAAUW,SAAX,CAAoB1jB,UAAU,WAAWojB,SAAS,KAChD,yBAAKpjB,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,gDAEF,2BAAO7B,KAAK,OAAO+B,UAAU,KAAKF,UAAU,eAAeH,YAAY,gBAG3E,yBAAKG,UAAU,YACb,yBAAKA,UAAU,cACb,6BACE,+CAEF,2BAAO7B,KAAK,WAGhB,yBAAK6B,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,gDAEF,4BAAQA,UAAU,gBAChB,4BAAQL,OAAK,GAAb,UACA,4BAAQA,OAAK,GAAb,WACA,4BAAQA,OAAK,GAAb,aAIN,yBAAKK,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,4CAEF,2BAAO7B,KAAK,OAAO+B,UAAU,KAAKF,UAAU,eAAeG,IAAE,EAACN,YAAY,gBAG9E,yBAAKG,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,kDAEF,2BAAO7B,KAAK,SAAS6B,UAAU,eAAeH,YAAY,YAAYgB,IAAK,MAG/E,yBAAKb,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,kDAEF,2BAAO7B,KAAK,OAAO6B,UAAU,eAAeE,UAAU,MAAML,YAAY,gBAG5E,yBAAKG,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,yCAEF,2BAAO7B,KAAK,OAAO+B,UAAU,KAAKF,UAAU,eAAeH,YAAY,gBAG3E,yBAAKG,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,wCAEF,2BAAO7B,KAAK,OAAO+B,UAAU,KAAKF,UAAU,eAAeH,YAAY,gBAG3E,yBAAKG,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,2CAEF,2BAAO7B,KAAK,OAAO+B,UAAU,KAAKF,UAAU,eAAeH,YAAY,gBAG3E,yBAAKG,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,4CAEF,2BAAO7B,KAAK,OAAOiP,QAAQ,WAAWpN,UAAU,eAAeH,YAAY,gBAG/E,yBAAKG,UAAU,aACf,yBAAKA,UAAU,WAAWG,GAAG,YAC3B,yBAAKH,UAAU,wBAAwBqI,MAAO,CAAE+N,UAAW,SACzD,4BAAQjY,KAAK,SAASuE,QArHnB,SAAAlG,GACb6qB,GAAgB,GAGhBvN,IACGjB,KAHO,UAGGsO,GACVrO,MAAK,SAAAC,GACJsO,GAAgB,GAChBppB,YAAQ,gCAAiC,cAE1C+a,OAAM,SAAAxc,GAAC,OAAID,YAAeC,OA2GoBwD,UAAU,0BAAjD,kB,yCCnKO0nB,G,2MACnBrhB,MAAQ,CAAEwI,UAAU,EAAOlP,MAAO9C,IAAI,EAAKwC,MAAMM,OAAQmP,YAAY,G,EAMrEC,YAAc,SAAAC,GACZ,EAAKpH,SAAS,CAAEiH,SAAUG,IADN,IAEZrP,EAAU,EAAK0G,MAAf1G,MACPA,IAAU,EAAKN,MAAMM,OAAU,EAAKN,MAAM4P,YAAYtP,I,mFANvDkF,KAAK+C,SAAS,CAAEjI,MAAOkF,KAAKxF,MAAMM,U,gDASVuP,GACpBrK,KAAKwB,MAAM1G,QAAUuP,EAASvP,OAChCkF,KAAK+C,SAAS,CAAEjI,MAAOuP,EAASvP,U,+BAI1B,IAAD,SAC6BkF,KAAKxF,MAAjC8P,uBADD,WAEiCtK,KAAKwB,MAArCwI,EAFD,EAECA,SAAUlP,EAFX,EAEWA,MAAOmP,EAFlB,EAEkBA,WACzB,OAAOD,EACL,kBAAC0G,EAAA,EAAD,CAAmBnG,YAAavK,KAAKkK,aACnC,0BAAM/O,UAAU,OAAOqP,SAAU,kBAAM,EAAKN,aAAY,KACtD,2BACE5O,GAAG,gBACHhC,KAAK,SACL6B,UAAU,aACVO,SAAU,SAAA/D,GACR,EAAKoL,SAAS,CAAEjI,MAAO9C,IAAIL,EAAG,eAAgB,OAEhDmP,UAAW,SAAAnP,GACK,QAAVA,EAAEiO,KAA2B,UAAVjO,EAAEiO,MACvBjO,EAAEkO,iBACF,EAAKqE,aAAY,KAGrB9L,OAAQ,kBAAM,EAAK8L,aAAY,IAC/BpP,MAAOA,MAKb,yBACEK,UAAU,kBACV0C,QAAS,SAAClG,GACRA,EAAEsf,kBACF,EAAKlU,SAAS,CAAEiH,UAAU,IAAQ,WAChCpB,SAASC,eAAe,iBAAiB6B,YAG7CC,aAAc,WACZ,EAAK5H,SAAS,CAAEkH,YAAY,KAE9BW,aAAc,WACZ,EAAK7H,SAAS,CAAEkH,YAAY,MAG7B6Y,aAAehoB,IAAU,KACxBwP,GAAmBL,GACnB,0BAAM9O,UAAU,QACd,uBAAGA,UAAU,2B,GA9DqBV,IAAM4D,W,SCchD0kB,GAAW,GAkef,IAIexhB,gBAJS,SAACC,GAAD,MAAY,KAET,GAEZD,EAref,SAAiB/G,GACf,IADsB,EAOQE,mBANX,CACjBY,GAAI,EACJkC,KAAM,GACNwlB,eAAgB,GAChBC,UAAW,KALS,mBAOf1D,EAPe,KAON2D,EAPM,OASgBxoB,mBAAS,IATzB,mBASfyoB,EATe,KASFC,EATE,OAUkB1oB,mBAAS,MAV3B,mBAUf2oB,EAVe,KAUDC,EAVC,OAWc5oB,oBAAS,GAXvB,mBAWfqU,EAXe,KAWHwU,EAXG,OAYE7oB,oBAAS,GAZX,mBAYf0M,EAZe,KAYToc,EAZS,OAawC9oB,oBAAS,GAbjD,mBAaf+oB,EAbe,KAaUC,EAbV,OAcoBhpB,mBAAS,IAd7B,mBAcfipB,EAde,KAcAC,EAdA,KAehBzB,EAAS3nB,EAAMzD,SAASqrB,KAExB9T,EAAc,kBAAMkV,GAAQ,IAsDlC,SAAS5M,IAGPwM,EAAe,IACfG,GAAc,GACdtO,IACGjd,IAJI,eAKJic,MAAK,SAACC,GACLkP,EAAelP,EAASja,KAAKsiB,QAC7BwG,GAAW,GACXO,EAAgB,MAChBA,EAAgBD,GAChBE,GAAc,GACVlsB,aAAaa,QAAQ,iCACvBorB,EAAgBjsB,aAAaa,QAAQ,iCACrC0Q,SAASC,eAAe,YAAYgb,iBACpCxsB,aAAawB,WAAW,6BAExByqB,EAAgB5mB,OAASK,OAAO,kBAGnCoX,OAAM,SAACxc,GAAD,OAAOD,YAAeC,MAC/Bsd,IACGjd,IAAI,UACJic,MAAK,SAACC,GACLwP,EAA2B1rB,IAAIkc,EAAU,yCAA0C,QAEpFC,OAAM,SAACxc,GAAD,OAAOD,YAAeC,MA/EjCqZ,qBAAU,WAKR,OAJA4F,IACI,CAAC,gBAAgB3e,SAASkqB,IAC5BvZ,SAASC,eAAe,YAAYgb,iBAE/B,WACLd,GAAW,MAEZ,IAEH/R,qBAAU,WACR,IAAMxH,EAAG,iCAA6B6Z,EAA7B,sBAAuDA,EAAvD,KAET,GAAIN,KAAavZ,GAAQ6Z,GAAiBrrB,IAAImrB,EAAa,MAAO,IAAlE,CAGAJ,GAAWvZ,EAEXyL,IACGjd,IAAI,UACJic,MAAK,SAACC,GACLwP,EAA2B1rB,IAAIkc,EAAU,sCAAuC,KAChF0P,EAAiB5rB,IAAIkc,EAAU,4BAA6B,QAE7DC,OAAM,SAACxc,GAAD,OAAOD,YAAeC,MAC/B,IAAMmsB,EAAqBX,EAAY7lB,KAAI,SAACC,GAAD,sBAAaA,EAAb,CAAgBwmB,OAAQ,KAAMC,SAAU,UACnFZ,EAAeU,GACfP,GAAc,GACdtO,IAASjd,IAAIwR,GAAKyK,MAAK,SAACC,GAAc,IAE1BqI,EACNrI,EADFja,KAAQsiB,OAEJ0H,EAAO,GACbH,EAAmBnkB,SAAQ,SAAC4W,GAC1B,IAAM2N,EAAc3H,EAAOje,MAAK,SAACoE,GAAD,OAASA,EAAIyhB,kBAAoB5N,EAAIjb,MACjE4oB,EACFD,EAAKhY,KAAL,eAAesK,EAAf,CAAoBwN,OAAQG,EAAYH,OAAQC,SAAUE,EAAY5oB,MAEtE2oB,EAAKhY,KAAL,eAAesK,EAAf,CAAoBwN,OAAQ,WAIhCX,EACEgB,KACEH,EAAK3mB,KAAI,SAACC,GAAD,sBAAaA,EAAb,CAAgBC,KAAMD,EAAEC,KAAK6H,YACtC,CAAC,UAGLke,GAAc,SAEf,CAACJ,EAAaE,EAAcF,IAuE/B,IAWMkB,EAAe,WACnB9E,EAAQ+E,SAAW,GACnB/E,EAAQgF,UAAY,GACpBhF,EAAQiF,UAAY,IAGhB9oB,EAAW,SAAC/D,GAAO,IAAD,EACEA,EAAEiE,OAAlB4B,EADc,EACdA,KAAM1C,EADQ,EACRA,MACdooB,GAAW,SAACuB,GAAD,sBAAqBA,EAArB,eAAiCjnB,EAAO1C,QAG/Cwa,EAAU,SAAC3d,GAAO,IAAD,EACGA,EAAEiE,OAAlB4B,EADa,EACbA,KAAM1C,EADO,EACPA,MACdooB,GAAW,SAACuB,GAAD,sBAAqBA,EAArB,eAAiCjnB,EAAO1C,QAG/Cgc,EAAU,CACd,CACE5O,OAAQ,YACR6O,SAAU,OACV5b,UAAW,OACXmW,MAAO,IACP0F,KAAM,SAACxc,GACL,OACE,yBAAKqD,QAAS,SAAClG,GAAD,OAAOA,EAAEsf,oBACrB,kBAACyN,GAAA,EAAD,iBACMlqB,EADN,CAEE8P,iBAAe,EACfF,YAAa,SAACtP,GAAW,IACf6pB,EAAanqB,EAAbmqB,SACF/R,EAAW,CACfpV,KAAM1C,GAAS,IAEX0O,EAAG,yBAAqBmb,EAASrpB,IACvC2Z,IAASmB,IAAI5M,EAAKoJ,GAAUqB,MAAK,WAC/B5c,aAAaH,QAAQ,mBAAmB,GACxCkC,YAAQ,uBAAwB,qBAQ9C,CACE8O,OAAQ,iBACR6O,SAAU,iBACVC,KAAM,SAACxc,GACL,MAAM,kBAAN,OAAyBA,EAAMmqB,SAAS3B,kBAG5C,CACE9a,OAAQ,kBACN,yBAAK/M,UAAU,QACb,0BAAMqI,MAAO,CAAE9J,SAAU,WAAYkrB,KAAM,IACzC,uBACEzpB,UAAS,2BACPuB,OAASmoB,SAAS,GAAI,QAAQ9nB,OAAO,gBAAkBsmB,GAAgB,oBAEzExlB,QAAS,WACHnB,OAASmoB,SAAS,GAAI,QAAQ9nB,OAAO,gBAAkBsmB,GAG3DC,EAAgB5mB,KAAO2mB,EAAc,cAAcwB,SAAS,EAAG,OAAO9nB,OAAO,gBAE/EzB,GAAG,WACH6W,cAAY,UAGhB,0BAAM3O,MAAO,CAAE9J,SAAU,WAAYorB,IAAK,EAAGF,KAAM,KAChDloB,KAAO2mB,EAAc,cAActmB,OAAO,sBAE7C,0BAAMyG,MAAO,CAAE9J,SAAU,WAAYgc,MAAO,KAC1C,uBACEva,UAAS,4BAAuBuB,OAASK,OAAO,gBAAkBsmB,GAAgB,oBAClF/nB,GAAG,WACH6W,cAAY,OACZtU,QAAS,WACHnB,OAASK,OAAO,gBAAkBsmB,GAGtCC,EAAgB5mB,KAAO2mB,EAAc,cAAc0B,IAAI,EAAG,OAAOhoB,OAAO,qBAMlFga,SAAU,SACV5b,UAAW,kBACXmW,MAAO,IACPzH,OAAQ,SAACrP,GACP,OACE,6BACE,0BAAMW,UAAU,8BAAhB,UACA,0BAAMA,UAAU,mBAAmB6pB,aAAQ7B,EAAY8B,QAAO,SAACxI,EAAGC,GAAJ,OAAUD,EAAIyI,OAAOxI,EAAEqH,UAAS,OAIpG/M,KAAM,SAACxc,GACL,OACE,yBAAKqD,QAAS,SAAClG,GAAD,OAAOA,EAAEsf,oBACrB,kBAAC,GAAD,iBACMzc,EADN,CAEE8P,iBAAe,EACfF,YAAa,SAACtP,GAAW,IACf6pB,EAAoBnqB,EAApBmqB,SAAUjb,EAAUlP,EAAVkP,MACZyb,EAAgB,SAACC,GACrB,IAAMxS,EAAW,CACf0I,QAAS,CAAC,CAAEze,KAAMwmB,EAAcU,OAAQqB,GAAK,IAAKjB,gBAAiBQ,EAASrpB,MAExEkO,EAAMmb,EAASX,SAAT,yBAAsCW,EAASX,UAA/C,cACZ/O,IAASmB,IAAI5M,EAAKoJ,GAAUqB,MAAK,WAC/B5c,aAAaH,QAAQ,mBAAmB,GACxC,IAAImuB,EAAiBlC,EACrBkC,EAAe3b,GAAOqa,OAASqB,EAC/BhC,EAAe,IACfA,EAAeiC,OAGf5B,GAA2BE,GAAiBgB,EAAS7J,SACvDlG,IACG5c,IADH,sDACsD2sB,EAAS7J,SAD/D,oBACmF6I,IAChF1P,MAAK,SAACiB,GACL,IAAMoQ,EAAattB,IAAIkd,EAAD,qBAAqByO,EAArB,KAAuC,GACvD4B,EAAiBL,OAAOA,OAAOpqB,GAAS,GAAKoqB,OAAOI,IAAaE,QAAQ,GAC/EL,EAAcI,GACdnsB,YAAQ,2BAAD,OAA4BurB,EAAS7J,SAArC,YAAiDhgB,EAAjD,eAA6D6oB,EAA7D,YAA8E4B,GAAkB,UAAW,QAEnHpR,OAAM,kBAAM/a,YAAQ,oEAEvB+rB,EAAcrqB,UAQ5B,CACEoN,OAAQ,GACR6O,SAAU,KACVzF,MAAO,IACP0F,KAAM,SAACxc,GAAD,OACJ,0BAAMW,UAAU,IACbnD,IAAIwC,EAAO,kBAAmB,IAC7B,uBAAGW,UAAU,sCAAsC4N,MAAM,0BACvD,KACJ,uBACE5N,UACEnD,IAAIwC,EAAO,kBAAmB,IAC1B,oCACA,oCAEN2X,cAAY,OACZpJ,MAAM,iBACNlL,QAAS,SAAClG,GACRA,EAAEsf,kBADY,IAEN0N,EAAoBnqB,EAApBmqB,SAAUjb,EAAUlP,EAAVkP,MAClBwE,aAAuB,CACrBhQ,QAAS,UACTmQ,IAAK,mCACL5G,OAAQ,WACN0G,eAEA8G,IAASmB,IAAT,gCAAsCuO,EAASrpB,IAAM,IAAI2Y,MAAK,WAC5D5c,aAAaH,QAAQ,mBAAmB,GACxCkC,YAAQ,uBAAwB,WAChC,IAAIqsB,EAAqBtC,EAAY1jB,QAAO,SAAClC,EAAGwI,GAAJ,OAAUA,IAAM2D,KAC5D0Z,EAAe,IACfA,EAAeqC,gBAWjC,OACE,kBAACvH,GAAA,EAAD,CAAWC,iBAA6B,iBAAXgE,GAA6B,IAAKhnB,UAAU,aACvE,kBAAC+iB,GAAA,EAAUG,OAAX,CAAkBljB,UAAU,iDAAiDmjB,GAAIpV,KAAKhB,OAAQqW,SAAS,KACrG,wBAAIpjB,UAAU,QAAd,aAEF,kBAAC+iB,GAAA,EAAUW,SAAX,CAAoB1jB,UAAU,OAAOojB,SAAS,KAC5C,6BACE,yBAAKpjB,UAAU,OACb,yBAAKA,UAAU,YACb,4BACE7B,KAAK,SACLuE,QAAS,kBAAM2lB,GAAQ,IACvBroB,UAAU,gDACVsd,cAAY,QACZiN,cAAY,YALd,eASA,2BAAOvqB,UAAU,6BACf,0BAAMqI,MAAO,CACX9J,SAAU,WACVgc,MAAO,SAFT,2BAIA,8BACE,2BACElS,MAAO,CACL8N,MAAO,GACPnI,OAAQ,GACRwc,OAAQ,EACRhiB,QAAS,EACTjK,SAAU,WACVgc,MAAO,MACPoP,IAAK,IAEPxrB,KAAK,WACL6B,UAAU,uBACVH,YAAY,YACZ6C,QApOI,WAEpBoX,IACGjB,KAAK,SAAU,CACdyP,yBAA0BA,IAE3BxP,MAAK,WACJyP,GAA4BD,OA8NhB7lB,QAAS6lB,MAIf,kBAAC,GAAD,CAAiB7M,WAAYA,IAC7B,kBAAC7O,GAAA,EAAD,CAAOX,KAAMA,EAAMa,OAAQqG,GACzB,kBAACvG,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,GAAA,EAAMK,MAAP,KACE,6CAGJ,kBAACL,GAAA,EAAMM,KAAP,CAAYF,aAAW,GACrB,yBAAKhN,UAAU,cACb,8BACE,6CAEF,2BACE7B,KAAK,OACLkE,KAAK,OACL1C,MAAOykB,EAAQ/hB,KACfY,OAAQkX,EACRnX,QAASzC,EACTA,SAAUA,EACVP,UAAU,eACVH,YAAY,eAGhB,yBAAKG,UAAU,cACb,8BACE,8CAEF,2BACE7B,KAAK,OACLkE,KAAK,iBACL1C,MAAOykB,EAAQyD,eACf5kB,OAAQkX,EACRnX,QAASzC,EACTA,SAAUA,EACVP,UAAU,eACVH,YAAY,gBAqBlB,kBAAC+M,GAAA,EAAM8B,OAAP,KACE,kBAACC,EAAA,EAAD,CACE5L,QAAQ,UACR9C,WAAYmkB,GAAWA,EAAQ/hB,MAAQ+hB,EAAQyD,gBAC/CnlB,QAnTlB,WACE,IAAI0Y,EAAM,CACR/Y,KAAM+hB,EAAQ/hB,KACdwlB,eAAgBzD,EAAQyD,eACxB4C,UAAU,GAEZ3Q,IAASjB,KAAK,cAAd,eAAkCuC,IAAOtC,MAAK,WAC5C2C,IACAyN,IACA/V,IACAlV,YAAQ,6BAA8B,gBAsS1B,WAWR,yBAAK+B,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,gCACb,kBAAC,IAAD,CACEoc,WAAYxI,EAAa,GAAK,gBAC9B8W,SAAU1C,EAAY1a,OAAS,EAAI0a,EAAY1a,OAAS,EAExDqd,QAAS/W,EACTsI,UAAU,EACVI,WAAW,EACXC,gBAAgB,EAChBZ,QAASA,EACT7c,KAAMkpB,EACN4C,gBAAiB,SAACvkB,EAAOwkB,EAASC,GAChC,MAAO,CACLpoB,QAAS,SAAClG,GAnW9B,IAA0BuuB,EACG,KADHA,EAmW2BF,EAAQrB,UAlW3CxK,QACdlF,IACGjd,IADH,oCACoCkuB,EAAY5qB,KAC7C2Y,MAAK,SAACC,GACepd,OAAOqvB,MAAMC,OAAO,CACtCxO,IAAKtf,IAAUuf,UACfF,WAAY,aACZ/R,IAAKtN,IAAU0f,gBACfF,QAAS,CAAC,gBACV1I,MAAO8E,EAASja,KAAK8b,aACrBoC,UAAW,SAAUpC,EAAcY,GAEjCC,KAEFqB,OAAQ,SAAU7D,EAAKuC,OAIbnf,UAEb2c,OAAM,SAACxc,GAAD,OAAOD,YAAeC,OA+Uf6L,MAAO,CACLI,OAAQoiB,GAAuC,IAA5BA,EAAQrB,SAASxK,OAAe,gBAAkB,iB,UC4B7F,IAIe5Y,gBAJS,SAACC,GAAD,MAAY,KAET,GAEZD,EAhff,SAAc/G,GACZ,IAAI6rB,EAAY,CACd/qB,GAAI,EACJkC,KAAM,GACNolB,WAAY,GACZjN,KAAM,GACNtP,MAAO,IANU,EAQK3L,mBAAS2rB,GARd,mBAQZ3D,EARY,KAQN4D,EARM,OASuB5rB,oBAAS,GAThC,mBASZ6rB,EATY,KASGC,EATH,OAUiB9rB,oBAAS,GAV1B,mBAUZ+rB,EAVY,KAUAC,EAVA,OAWahsB,mBAAS,IAXtB,mBAWZ1B,EAXY,KAWFoc,EAXE,OAYiB1a,oBAAS,GAZ1B,mBAYZqU,EAZY,KAYAwU,EAZA,OAaqB7oB,mBAAS,MAb9B,mBAaZisB,EAbY,KAaEC,EAbF,KAcbC,EAAU1vB,IAAa2oB,aACvBqC,EAAS3nB,EAAMzD,SAASqrB,KAfX,EAgBqB1nB,mBAAS,CAC/CosB,YAAa,GACbpS,gBAAiB,KAlBA,mBAgBZqS,EAhBY,KAgBEC,EAhBF,OAoBqBtsB,oBAAS,GApB9B,mBAoBZusB,EApBY,aAqBmCvsB,oBAAS,IArB5C,mBAqBZ8a,EArBY,KAqBS0R,EArBT,OAsBexsB,oBAAS,GAtBxB,mBAsBZysB,EAtBY,KAsBDC,GAtBC,KAyBnB,SAASC,KAGP9D,GAAc,GACdtO,IACGjd,IAHI,eAIJic,MAAK,SAACC,GACLqP,GAAc,GACdnO,EAAYlB,EAASja,KAAKsiB,WAE3BpI,OAAM,SAACxc,GACN4rB,GAAc,MA6BpBvS,qBAAU,WACRqW,KACI,CAAC,UAAUpvB,SAASkqB,IACtBvZ,SAASC,eAAe,SAASgb,mBAElC,IAwBH,IAAMQ,GAAe,WACnB3B,EAAKllB,KAAO,GACZklB,EAAKE,WAAa,GAClBF,EAAK/M,KAAO,GACZ+M,EAAKrc,MAAQ,IAGTihB,GAAkB,SAAC3vB,GAAO,IAAD,EACLA,EAAEiE,OAAlB4B,EADqB,EACrBA,KAAM1C,EADe,EACfA,MACdwrB,EAAQ,eAAK5D,EAAN,eAAallB,EAAO1C,MAGvBysB,GAAiB,SAAC5vB,GAAO,IAAD,EACJA,EAAEiE,OAAlB4B,EADoB,EACpBA,KAAM1C,EADc,EACdA,MACdwrB,EAAQ,eAAK5D,EAAN,eAAallB,EAAO1C,MAGvBY,GAAW,SAAC/D,GAAO,IAAD,EACEA,EAAEiE,OAAlB4B,EADc,EACdA,KAAM1C,EADQ,EACRA,MACdksB,EAAgB,eAAKD,EAAN,eAAqBvpB,EAAO1C,MAGvCwa,GAAU,SAAC3d,GAAO,IAAD,EACGA,EAAEiE,OAAlB4B,EADa,EACbA,KAAM1C,EADO,EACPA,MACdksB,EAAgB,eAAKD,EAAN,eAAqBvpB,EAAO1C,MAGvCgc,GAAU,CACd,CACE5O,OAAQ,KACR6O,SAAU,KACV5b,UAAW,QAEb,CACE+M,OAAQ,OACR6O,SAAU,OACVC,KAAM,SAAC/c,GACL,OACE,yBAAK4D,QAAS,SAAClG,GAAD,OAAOA,EAAEsf,oBACrB,kBAACyN,GAAA,EAAD,iBACMzqB,EADN,CAEEqQ,iBAAe,EACfF,YAAa,SAACtP,GAAW,IACf6pB,EAAa1qB,EAAb0qB,SACF/R,EAAW,CACfpV,KAAM1C,GAAS,IAEX0O,EAAG,0BAAsBmb,EAASrpB,IACxC2Z,IAASmB,IAAI5M,EAAKoJ,GAAUqB,MAAK,WAC/B7a,YAAQ,uBAAwB,qBAQ9C,CACE8O,OAAQ,aACR6O,SAAU,aACVC,KAAM,SAAC/c,GACL,OACE,yBAAK4D,QAAS,SAAClG,GAAD,OAAOA,EAAEsf,oBACrB,kBAACyN,GAAA,EAAD,iBACMzqB,EADN,CAEEqQ,iBAAe,EACfF,YAAa,SAACtP,GAAW,IACf6pB,EAAa1qB,EAAb0qB,SACF/R,EAAW,CACfgQ,WAAY9nB,GAAS,IAEjB0O,EAAG,0BAAsBmb,EAASrpB,IACxC2Z,IAASmB,IAAI5M,EAAKoJ,GAAUqB,MAAK,WAC/B7a,YAAQ,uBAAwB,qBAQ9C,CACE8O,OAAQ,OACR6O,SAAU,QACVC,KAAM,SAAC/c,GACL,OAAO9C,IAAaC,aAAe6C,EAAK0qB,SAASrpB,GACjB,aAA9BtD,IAAIiC,EAAM,WAAY,IACpB,QAEAjC,IAAIiC,EAAM,WAAY,IAGxB,yBAAK4D,QAAS,SAAClG,GAAD,OAAOA,EAAEsf,oBACrB,kBAAClN,GAAA,EAAD,iBACM9P,EADN,CAEEa,MAAqC,aAA9B9C,IAAIiC,EAAM,WAAY,IAAqB,QAAUjC,IAAIiC,EAAM,WAAY,IAClFkD,QAAS,CACP,CAAE7B,GAAI,QAASR,MAAO,QAAS0C,KAAM,SACrC,CAAElC,GAAI,OAAQR,MAAO,OAAQ0C,KAAM,SAErC8M,iBAAe,EACfF,YAAa,SAACtP,GACZ,GAAIA,EAAO,CAAC,IACF6pB,EAAa1qB,EAAb0qB,SACF/R,EAAW,CACf+C,KAAM,CAAC7a,GAAS,KAEZ0O,EAAG,0BAAsBmb,EAASrpB,IACxC2Z,IAASmB,IAAI5M,EAAKoJ,GAAUqB,MAAK,WAC/B7a,YAAQ,uBAAwB,sBAShD,CACE8O,OAAQ,QACR6O,SAAU,SA0BZ,CACE7O,OAAQ,kBAAM,0BAAM/M,UAAU,UAC9B4b,SAAU,KACVzF,MAAO,IACPnW,UAAW,iBACX6b,KAAM,SAAC/c,GAAD,OACJ9C,IAAaC,aAAe6C,EAAKa,MAC/B,8BACE,uBACE+C,QAAS,kBAAM+oB,EAAgB3sB,EAAK0qB,WACpCxpB,UAAU,gDACV4N,MAAM,mBAJV,IAOE,uBACElL,QAAS,WACPqQ,aAAuB,CACrBhQ,QAAS,UACTmQ,IAAI,mCAAD,OAAqCrW,IAAIiC,EAAM,gBAAiB,IAAhE,KACHwN,OAAQ,WACN0G,eACA8G,IAASjB,KAAT,gCAAuC/Z,EAAKa,QAASmZ,MAAK,SAACiB,GACzDmS,KACAjuB,YAAQ,uBAAwB,kBAKxC+B,UAAU,gDACV4N,MAAM,iBAGR,QAIV,OAAO8d,EACL,oCACE,kBAAC9e,GAAA,EAAD,CAAOpB,KAAK,KAAKS,KAAMuf,EAAc1e,OAAQ,kBAAM2e,EAAgB,QACjE,kBAAC7e,GAAA,EAAMG,OAAP,CAAcC,aAAW,GAAzB,sBAA8CnQ,IAAI2uB,EAAc,OAAQ,KACxE,kBAAC5e,GAAA,EAAMM,KAAP,KACE,0BAAMmC,SAjPC,SAAC7S,GACdA,EAAEkO,iBAEGwP,IAAc5O,KAAKsgB,EAAaD,aAG1BC,EAAaD,cAAgBC,EAAarS,iBACnD0S,IAAa,GACbhuB,YAAQ,mDAAoD,UAE5D6b,IACGjB,KATK,mBASK,CAAES,SAAUsS,EAAarS,gBAAiB3b,OAAQ4tB,EAAarrB,KACzE2Y,MAAK,SAACC,GACL9a,YAAQ,gCAAiC,WACzC4tB,EAAgB,CACdF,YAAa,GACbpS,gBAAiB,KAEnB0S,IAAa,GACbR,EAAgB,SAEjBzS,OAAM,SAACxc,GAAD,OAAOD,YAAeC,OAjB/ByvB,IAAa,GACbhuB,YAAQ,qDAAsD,WA4OlC+B,UAAU,0CAChC,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,8BACE,gDAEF,2BACE7B,KAAK,WACLkE,KAAK,cACLrC,UAAS,uBAAkBgsB,GAAaJ,EAAaD,cAAgBzR,IAAc5O,KAAKsgB,EAAaD,aAAe,QAAU,IAC9H9rB,YAAY,sBACZya,aAAa,MACbtX,QAASzC,GACTA,SAAUA,GACV0C,OAAQkX,GACRvH,UAAQ,EACRjT,MAAOisB,EAAaD,gBAI1B,yBAAK3rB,UAAU,aACb,yBAAKA,UAAU,cACb,8BACE,oDAEF,yBAAKA,UAAU,oBACb,2BACE7B,KAAMkc,EAAsB,OAAS,WACrChY,KAAK,kBACLrC,UAAS,uBAAkBgsB,GAAaJ,EAAaD,cAAgBC,EAAarS,gBAAkB,QAAU,IAC9G1Z,YAAY,YACZya,aAAa,MACbtX,QAASzC,GACTA,SAAUA,GACV0C,OAAQkX,GACRvH,UAAQ,EACRjT,MAAOisB,EAAarS,gBACpB5a,MAAOitB,EAAaD,cAEtB,0BACE3rB,UAAU,gCACVwa,KAAK,eACL9X,QAAS,kBAAMqpB,GAAwB1R,KAEtCA,EACC,uBAAGra,UAAU,YAAYqI,MAAO,CAAEE,OAAQ,UAAWkS,SAAU,QAAU7M,MAAM,kBAE/E,uBACE5N,UAAU,kBACVqI,MAAO,CAAEE,OAAQ,UAAWkS,SAAU,QACtC7M,MAAM,sBAOlB,yBAAK5N,UAAU,aACb,yBAAKA,UAAU,wBAAwBqI,MAAO,CAAE+N,UAAW,SACzD,4BAAQjY,KAAK,SAAS6B,UAAU,0BAC7B8rB,EACC,0CACW,uBAAGO,MAAM,wBAAwBhkB,MAAO,CAAEoS,SAAU,QAAUzD,cAAY,UAGrF,8CAQd,kBAAC+L,GAAA,EAAD,CAAW/iB,UAAU,YAAYgjB,iBAA6B,WAAXgE,GAAuB,IAAK7mB,GAAG,SAChF,kBAAC4iB,GAAA,EAAUG,OAAX,CACEljB,UAAU,iDACV0C,QAAS,WACP6oB,GAAeD,GACfA,GAAcY,MAEhB/I,GAAIpV,KAAKhB,OACTqW,SAAS,KAET,wBAAIpjB,UAAU,QAAd,SAEIorB,IAAkBE,GAAyB,WAAXtE,IAAwB0E,GACxD,uBACEhpB,QAAS,SAAClG,GACRA,EAAEsf,kBACFuP,GAAiB,IAEnBrrB,UAAS,0CAAsD,IAC/D4N,MAAM,2BACNoJ,cAAY,WAKpB,kBAAC+L,GAAA,EAAUW,SAAX,CAAoB1jB,UAAU,WAAWojB,SAAS,KAChD,0BAAM5P,QAAM,EAAC0L,OAAO,QAClB,yBAAKlf,UAAU,QACZorB,GACC,yBAAKprB,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,wCAEF,2BACE7B,KAAK,OACLkE,KAAK,OACL1C,MAAO4nB,EAAKllB,KACZY,OAAQmpB,GACRppB,QAASmpB,GACT5rB,SAAU4rB,GACVnsB,UAAU,eACVH,YAAY,gBAIlB,yBAAKG,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,8CAEF,2BACE7B,KAAK,OACLkE,KAAK,aACL1C,MAAO4nB,EAAKE,WACZxkB,OAAQmpB,GACRppB,QAASmpB,GACT5rB,SAAU4rB,GACVnsB,UAAU,eACVH,YAAY,gBAIlB,yBAAKG,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,yCAEF,4BACEA,UAAU,eACVqC,KAAK,OACL1C,MAAO4nB,EAAK/M,KACZvX,OAAQmpB,GACRppB,QAASmpB,GACT5rB,SAAU4rB,IAEV,4BAAQ7c,UAAQ,EAACrP,UAAQ,EAACN,MAAM,IAAhC,UAGA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,WAIN,yBAAKK,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,yCAEF,2BACE7B,KAAK,QACLkE,KAAK,QACL1C,MAAO4nB,EAAKrc,MACZjI,OAAQmpB,GACRppB,QAASmpB,GACT5rB,SAAU4rB,GACVnsB,UAAU,eACVH,YAAY,gBAIlB,yBAAKG,UAAU,aACf,yBAAKA,UAAU,YACb,yBAAKA,UAAU,wBAAwBqI,MAAO,CAAE+N,UAAW,SACzD,4BAAQjY,KAAK,SAAS6B,UAAU,8BAA8B0C,QAAS,kBAAM2oB,GAAiB,KAA9F,UACA,4BAAQltB,KAAK,SAASuE,QApY1C,WACE,GAAK6kB,EAAKrc,OAAUqc,EAAK/M,KAAzB,CAIA,IAAM/C,EAAW,CAAEpV,KAAMklB,EAAKllB,KAAM6I,MAAOqc,EAAKrc,MAAOohB,MAAO,CAAC/E,EAAK/M,MAAOiN,WAAYF,EAAKE,YAE5F3N,IACGjB,KADH,oBAC6BpB,GAC1BqB,MAAK,SAACiB,GACL9b,YAAQ,+BAAgC,WACxCirB,KACAiC,EAAQD,GACRgB,KACAb,GAAiB,MAElBrS,OAAM,SAACxc,GACND,YAAeC,GACfyB,YAAQ,sBAAuB,cAkXuB+B,UAAU,0BAAlD,kBAQR,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gCACb,kBAAC,IAAD,CACEoc,WAAYxI,EAAa,GAAK,gBAC9ByI,QAAS,EACTsO,QAAS/W,EACTsI,UAAU,EACVI,WAAW,EACXC,gBAAgB,EAChBZ,QAASA,GACT7c,KAAMjB,YAUtB,QC5UN,IAIeuI,gBAJS,SAAAC,GAAK,MAAK,KAEP,GAEZD,EAxKf,SAAsB/G,GAClB,IAMM2nB,EAAS3nB,EAAMzD,SAASqrB,KAPL,EASS1nB,mBAAS,IATlB,mBASlBgtB,EATkB,KASPC,EATO,OAUWjtB,mBAAS,GAVpB,mBAUlBktB,EAVkB,KAURC,EAVQ,OAWmBntB,mBAAS,UAX5B,mBAWlBotB,EAXkB,KAWFC,EAXE,OAYWrtB,mBAAS,GAZpB,mBAYlBstB,EAZkB,KAYNC,EAZM,OAauBvtB,mBAAS,GAbhC,mBAalBwtB,EAbkB,KAaAC,EAbA,OAcyBztB,mBAAS,GAdlC,mBAclB0tB,EAdkB,KAcCC,EAdD,KAuBzB,SAASC,IAELrT,IACKjd,IAFK,WAGLic,MAAK,SAAAC,GACF,IAAMqI,EAASrI,EAASja,KAAKsiB,OAC7BoL,EAAapL,EAAOgM,kBACpBV,EAAgBtL,EAAOiM,0BACvBP,EAAc1L,EAAOkM,mBACrBV,EAAkBxL,EAAOmM,iBACzBP,EAAoB5L,EAAOoM,0BAC3BN,EAAqB9L,EAAOqM,8BAE/BzU,OAAM,SAAAxc,GAAC,OAAID,YAAeC,MAyBnC,OA7CAqZ,qBAAU,WACNsX,IACI,CAAC,gBAAiB,YAAYrwB,SAASkqB,IACvCvZ,SAASC,eAAe,WAAWgb,mBAExC,IAyCC,kBAAC3F,GAAA,EAAD,CAAW5iB,GAAG,UAAU6iB,iBAAkB,CAAC,gBAAiB,YAAYlmB,SAASkqB,IAAW,IAAKhnB,UAAU,aACvG,kBAAC+iB,GAAA,EAAUG,OAAX,CAAkBljB,UAAU,iDAAiDmjB,GAAIpV,KAAKhB,OAAQqW,SAAS,KACnG,wBAAIpjB,UAAU,QAAd,0BAEJ,kBAAC+iB,GAAA,EAAUW,SAAX,CAAoB1jB,UAAU,OAAOojB,SAAS,KAC1C,oCACA,yBAAKpjB,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,8BACI,oDAEJ,4BAAQO,SAAU,SAAA/D,GAAC,OAAIowB,EAAkBpwB,EAAEiE,OAAOd,QAAQK,UAAU,gBAvEpE,CAAC,UAAW,UAyEYmC,KAAI,SAAAqM,GAAC,OAAK,4BAAQc,SAAUqd,IAAmBne,EAAEkf,oBAAqB/tB,MAAO6O,EAAEkf,qBAAsBlf,SAKrI,yBAAKxO,UAAU,cAEnB,oCAE2B,WAAnB2sB,EACA,yBAAK3sB,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,8BACI,mDAEJ,4BAAQO,SAAU,SAAA/D,GAAC,OAAIwwB,EAAoBxwB,EAAEiE,OAAOd,QAAQK,UAAU,gBAvF7E,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAyFJmC,KAAI,SAAAqM,GAAC,OAAK,4BAAQc,SAAUyd,IAAqBve,EAAG7O,MAAO6O,GAAIA,SAKhG,yBAAKxO,UAAU,YACX,yBAAKA,UAAU,cACX,8BACI,oDAEJ,4BAAQO,SAAU,SAAA/D,GAAC,OAAIgwB,EAAahwB,EAAEiE,OAAOd,QAAQK,UAAU,gBAvGrE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAyGCmC,KAAI,SAAAqM,GAAC,OAAK,4BAAQc,SAAUid,IAAc/d,EAAG7O,MAAO6O,GAAIA,SAK1F,yBAAKxO,UAAU,YACX,yBAAKA,UAAU,cACX,8BACI,qDAEJ,4BAAQO,SAAU,SAAA/D,GAAC,OAAIkwB,EAAgB3C,OAAOvtB,EAAEiE,OAAOd,SAASK,UAAU,gBAlHzF,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAoHnCmC,KAAI,SAACqM,EAAG5D,GAAJ,OAAW,4BAAQ0E,SAAUmd,IAAa7hB,EAAGjL,MAAOiL,GAAI4D,UAOzF,yBAAKxO,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,8BACI,mDAEJ,4BAAQO,SAAU,SAAA/D,GAAC,OAAI0wB,EAAqBnD,OAAOvtB,EAAEiE,OAAOd,SAASK,UAAU,gBA7HrF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GA+HgBmC,KAAI,SAAAqM,GAAC,OAAK,4BAAQc,SAAU2d,IAAsBze,EAAG7O,MAAO6O,GAAIA,SAKlG,yBAAKxO,UAAU,YACX,yBAAKA,UAAU,cACX,8BACI,qDAEJ,4BAAQO,SAAU,SAAA/D,GAAC,OAAIswB,EAAc/C,OAAOvtB,EAAEiE,OAAOd,SAASK,UAAU,gBA3IhF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IA6IEmC,KAAI,SAAAqM,GAAC,OAAK,4BAAQc,SAAUud,IAAere,EAAG7O,MAAO6O,GAAIA,WAQrG,yBAAKxO,UAAU,OACX,yBAAKA,UAAU,aACX,4BAAQA,UAAU,uBAAuB0C,QArH7D,WACI,IACM6kB,EAAO,CACT6F,iBAAkBb,EAClBe,kBAAmBT,EACnBU,gBAAiBZ,EACjBU,yBAA0BZ,EAC1BgB,0BAA2BR,EAC3BO,yBAA0BT,GAE9BjT,IACKjB,KAVK,UAUK0O,GACVzO,MAAK,SAAAC,GACF9a,YAAQ,6CAA8C,WACtDkvB,IACc,aAAXnG,GACC3nB,EAAMkf,QAAQzN,KAAK,YAEvB5U,aAAaH,QAAQ,mBAAmB,MAE3Cid,OAAM,SAAAxc,GAAC,OAAID,YAAeC,QAiGf,kBCkHxB,IAIe4J,gBAJS,SAAAC,GAAK,MAAK,KAEP,GAEZD,EApRf,SAAoB/G,GAClB,IAAM2nB,EAAS3nB,EAAMzD,SAASqrB,KAO9B,OANA3nB,IAAMuW,WAAU,WACV,CAAC,gBAAgB/Y,SAASkqB,IAC5BvZ,SAASC,eAAe,eAAegb,mBAExC,IAGD,kBAAC3F,GAAA,EAAD,CAAW/iB,UAAU,YAAYgjB,iBAA6B,iBAAXgE,GAA6B,IAAK7mB,GAAG,eACtF,kBAAC4iB,GAAA,EAAUG,OAAX,CAAkBljB,UAAU,iDAAiDmjB,GAAIpV,KAAKhB,OAAQqW,SAAS,KACrG,wBAAIpjB,UAAU,QAAd,gBAEF,kBAAC+iB,GAAA,EAAUW,SAAX,CAAoB1jB,UAAU,OAAOojB,SAAS,KAC5C,0BAAM5P,QAAM,EAAC0L,OAAO,QAClB,yBAAKlf,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,mBACb,8BACE,yCAEF,4BAAQA,UAAU,gBAChB,4BAAQL,OAAK,GAAb,UACA,4BAAQA,OAAK,GAAb,SACA,4BAAQA,OAAK,GAAb,YACA,4BAAQA,OAAK,GAAb,YACA,4BAAQA,OAAK,GAAb,cACA,4BAAQA,OAAK,GAAb,kBAUN,yBAAKK,UAAU,aACb,yBAAKA,UAAU,oBACb,+BACE,+BACE,4BACE,qCACA,oCACA,qCAEF,4BACE,0CACA,4BACE,yBAAKA,UAAU,+BACb,2BACE7B,KAAK,QACL6B,UAAU,uBACVG,GAAG,uBACHkC,KAAK,wBACL4Z,gBAAc,IAEhB,2BAAOjc,UAAU,uBAAuB2tB,QAAQ,2BAGpD,4BACE,yBAAK3tB,UAAU,+BACb,2BACE7B,KAAK,QACL6B,UAAU,uBACVG,GAAG,uBACHkC,KAAK,0BAEP,2BAAOrC,UAAU,uBAAuB2tB,QAAQ,4BAItD,4BACE,6CACA,4BACE,yBAAK3tB,UAAU,+BACb,2BACE7B,KAAK,QACL6B,UAAU,uBACVG,GAAG,uBACHkC,KAAK,wBACL4Z,gBAAc,IAEhB,2BAAOjc,UAAU,uBAAuB2tB,QAAQ,2BAGpD,4BACE,yBAAK3tB,UAAU,+BACb,2BACE7B,KAAK,QACL6B,UAAU,uBACVG,GAAG,uBACHkC,KAAK,0BAEP,2BAAOrC,UAAU,uBAAuB2tB,QAAQ,4BAItD,4BACE,wCACA,4BACE,yBAAK3tB,UAAU,+BACb,2BACE7B,KAAK,QACL6B,UAAU,uBACVG,GAAG,uBACHkC,KAAK,0BAEP,2BAAOrC,UAAU,uBAAuB2tB,QAAQ,2BAGpD,4BACE,yBAAK3tB,UAAU,+BACb,2BACE7B,KAAK,QACL6B,UAAU,uBACVG,GAAG,uBACHkC,KAAK,wBACL4Z,gBAAc,IAEhB,2BAAOjc,UAAU,uBAAuB2tB,QAAQ,4BAItD,4BACE,2CACA,4BACE,yBAAK3tB,UAAU,+BACb,2BACE7B,KAAK,QACL6B,UAAU,uBACVG,GAAG,uBACHkC,KAAK,wBACL4Z,gBAAc,IAEhB,2BAAOjc,UAAU,uBAAuB2tB,QAAQ,2BAGpD,4BACE,yBAAK3tB,UAAU,+BACb,2BACE7B,KAAK,QACL6B,UAAU,uBACVG,GAAG,uBACHkC,KAAK,0BAEP,2BAAOrC,UAAU,uBAAuB2tB,QAAQ,4BAItD,4BACE,6CACA,4BACE,yBAAK3tB,UAAU,+BACb,2BACE7B,KAAK,QACL6B,UAAU,uBACVG,GAAG,uBACHkC,KAAK,0BAEP,2BAAOrC,UAAU,uBAAuB2tB,QAAQ,2BAGpD,4BACE,yBAAK3tB,UAAU,+BACb,2BACE7B,KAAK,QACL6B,UAAU,uBACVG,GAAG,wBACHkC,KAAK,wBACL4Z,gBAAc,IAEhB,2BAAOjc,UAAU,uBAAuB2tB,QAAQ,6BAItD,4BACE,uCACA,4BACE,yBAAK3tB,UAAU,+BACb,2BACE7B,KAAK,QACL6B,UAAU,uBACVG,GAAG,wBACHkC,KAAK,wBACL4Z,gBAAc,IAEhB,2BAAOjc,UAAU,uBAAuB2tB,QAAQ,4BAGpD,4BACE,yBAAK3tB,UAAU,+BACb,2BACE7B,KAAK,QACL6B,UAAU,uBACVG,GAAG,wBACHkC,KAAK,0BAEP,2BAAOrC,UAAU,uBAAuB2tB,QAAQ,6BAItD,4BACE,yCACA,4BACE,yBAAK3tB,UAAU,+BACb,2BACE7B,KAAK,QACL6B,UAAU,uBACVG,GAAG,wBACHkC,KAAK,0BAEP,2BAAOrC,UAAU,uBAAuB2tB,QAAQ,4BAGpD,4BACE,yBAAK3tB,UAAU,+BACb,2BACE7B,KAAK,QACL6B,UAAU,uBACVG,GAAG,wBACHkC,KAAK,wBACL4Z,gBAAc,IAEhB,2BAAOjc,UAAU,uBAAuB2tB,QAAQ,6BAItD,4BACE,yCACA,4BACE,yBAAK3tB,UAAU,+BACb,2BACE7B,KAAK,QACL6B,UAAU,uBACVG,GAAG,wBACHkC,KAAK,wBACL4Z,gBAAc,IAEhB,2BAAOjc,UAAU,uBAAuB2tB,QAAQ,4BAGpD,4BACE,yBAAK3tB,UAAU,+BACb,2BACE7B,KAAK,QACL6B,UAAU,uBACVG,GAAG,wBACHkC,KAAK,0BAEP,2BAAOrC,UAAU,uBAAuB2tB,QAAQ,iCAQ9D,yBAAK3tB,UAAU,aACb,yBAAKA,UAAU,wBAAwBqI,MAAO,CAAE+N,UAAW,SACzD,4BAAQjY,KAAK,SAAS6B,UAAU,0BAAhC,mB,OCjNhB,IAIeyiB,eAAWrc,aAJF,SAAAC,GAAK,MAAK,CAAEkN,MAAOlN,EAAMwN,YAEtB,GAEDzN,EA9C1B,SAAiB/G,GAEf,OAD2BA,EAAnBkf,QAAmBlf,EAAV2L,MAEf,yBAAKhL,UAAU,MAAMG,GAAG,iBACxB,yBAAKH,UAAU,aACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,eAAeqI,MAAO,CAAEmX,aAAc,SACjD,yBAAKxf,UAAU,iBAAiBqI,MAAO,CAAEoS,SAAU,OAAQ2E,cAAe,OAAQC,MAAO,SACrF,kBAAC,IAAD,CAAMlT,GAAG,YAAY1B,IAAI,QAAO,uBAAGzK,UAAU,mBAAmBqI,MAAO,CAAE0P,MAAO,OAAQuH,YAAa,SAArG,KADJ,uBAGA,yBAAKtf,UAAU,wBACS,QAAnB7C,IAAUC,MAAkB,uBAAG4C,UAAU,kCAAkCuf,KAAK,IAAI/E,KAAK,SAASra,GAAG,SAASmd,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SAA5I,UAG7B,yBAAKxd,UAAU,oCAAoCyd,kBAAgB,mBAAmBtd,GAAG,cACrF,uBAAGof,KAAK,KAAR,cACA,uBAAGA,KAAK,KAAR,oBAMhB,kBAAC,GAAmBlgB,GACpB,kBAAC,GAAmBA,GACpB,kBAAC,GAAgBA,GACjB,kBAAC,GAAiBA,GACE,QAAnBlC,IAAUC,MAAkB,kBAAC,GAAsBiC,c,2BCnBhF,SAASuuB,GAAU9uB,GAUf,OATgBA,EAAKqD,KAAI,SAAAygB,GAAO,MAAK,CACjCiL,SAAUhxB,IAAI+lB,EAAS,gBAAiB,IACxCkL,UAAWjxB,IAAI+lB,EAAS,iBAAkB,IAC1CmL,QAASxsB,KAAO1E,IAAI+lB,EAAS,WAAY,KAAKhhB,OAAO,cACrDosB,eAAgBnxB,IAAI+lB,EAAS,iBAAkB,IAC/CqL,YAAa1sB,KAAO1E,IAAI+lB,EAAS,eAAgB,KAAKhhB,OAAO,cAC7DssB,UAAWrxB,IAAI+lB,EAAS,mBAAoB,Q,IAugBrCuL,G,YAhgBX,WAAY9uB,GAAQ,IAAD,8BACf,4CAAMA,KAmBV+uB,cAAgB,SAAAC,GACZ,EAAKzmB,SAAS,CAAE0mB,WAAYD,KArBb,EAwBnBE,kBAAoB,WAChB,EAAK3mB,SAAS,CACV4mB,yBAAyB,IAE7B1U,IACKjd,IADL,+BAEKic,MAAK,SAAAC,GACF,EAAKnR,SAAS,CACV6mB,mBAAoB1V,EAASja,KAAKsiB,OAAOC,MAAK,SAACC,EAAGC,GAAJ,OAAYA,EAAEmN,aAAepN,EAAEoN,eAC7EF,yBAAyB,OAGhCxV,OAAM,SAAAxc,GAAC,OAAID,YAAeC,OApChB,EAuCnB6S,SAAW,WAAO,IACNsf,EAAiB,EAAKtoB,MAAtBsoB,aACFtgB,EAAMsgB,EAAaxuB,GAAb,4BAAuCwuB,EAAaxuB,IAAO,iBACjE+e,EAASyP,EAAaxuB,GAAK,QAAU,OACrCslB,EAAgB,CAClBpjB,KAAMssB,EAAatsB,KACnBusB,YAAa7E,OAAO4E,EAAaC,aACjCF,YAAaC,EAAaD,aAGzBC,EAAaC,oBACPnJ,EAAcmJ,YAEzB9U,IACCoF,GAAQ7Q,EADT,eACmBoX,IACd3M,MAAK,WACF,EAAKlR,SAAS,CACViY,KAAM,GACN8O,aAAc,OAElB,EAAKJ,oBACLryB,aAAaH,QAAQ,mBAAmB,MAE3Cid,OAAM,SAAAxc,GAAC,OAAID,YAAeC,OA9DhB,EAiEnBiP,SAAW,SAACtL,GACR2Z,IACKmG,OADL,4BACiC9f,IAC5B2Y,MAAK,WACF,EAAKyV,oBACLryB,aAAaH,QAAQ,mBAAmB,MAE3Cid,OAAM,SAAAxc,GAAC,OAAID,YAAeC,OAxEhB,EA2EnB4jB,kBAAoB,WAAO,IAAD,EASlB,EAAK/Z,MATa,IAElBsoB,aACIxuB,EAHc,EAGdA,GACAkC,EAJc,EAIdA,KACAusB,EALc,EAKdA,YACAF,EANc,EAMdA,YAEJD,EARkB,EAQlBA,mBAGEI,GAAgB1uB,GAAMsuB,EAAmBK,MAAK,SAAAtgB,GAAC,OAAIA,EAAEogB,cAAgB7E,OAAO6E,MAClF,OACI,4BACI,wBAAI5uB,UAAU,kBACV,2BAAO7B,KAAK,WAAW6B,UAAU,cAAcic,eAAgByS,EAAanuB,SAAU,SAAA/D,GAAC,OAAI,EAAKoL,SAAS,CAAE+mB,aAAa,eAAM,EAAKtoB,MAAMsoB,aAAlB,CAAgCD,aAAclyB,EAAEiE,OAAOgC,gBAElL,4BACI,2BACItE,KAAK,OACLoC,SAAU,SAAA/D,GAAC,OAAI,EAAKoL,SAAS,CAAE+mB,aAAa,eAAM,EAAKtoB,MAAMsoB,aAAlB,CAAgCtsB,KAAM7F,EAAEiE,OAAOd,WAC1FK,UAAU,eACV6S,aAAcxQ,KAGtB,4BACI,2BACIlE,KAAK,SACLooB,QAAS,SAAA/pB,GAAC,OAAI,EAAKoL,SAAS,CAAE+mB,aAAa,eAAM,EAAKtoB,MAAMsoB,aAAlB,CAAgCC,YAAapyB,EAAEiE,OAAOd,WAChGovB,WAAY5uB,EACZH,UAAW6uB,EAAe,qBAAuB,eACjDhc,aAAc+b,KAGtB,wBAAI5uB,UAAU,kBACV,4BAAQC,UAAWoC,GAAQwsB,EAAc7uB,UAAU,MAAM0C,QAAS,EAAK2M,UACnE,uBAAGrP,UAAU,0CAEhB,IACD,4BAAQA,UAAU,MAAM0C,QAAS,kBAAM,EAAKkF,SAAS,CAAEiY,KAAM,GAAI8O,aAAc,SAC3E,uBAAG3uB,UAAU,8CAnHd,EA0HnBgvB,SAAW,SAACC,EAAOC,EAAWC,GAAnB,OAAmCF,EAAMze,OAAO2e,EAAc,GAAKD,EAAWC,EAAcD,IA1HpF,EA4HnBE,iBAAmB,SAAC5b,GAAY,IAExB6b,EACA,EAAKhpB,MADLgpB,SAEAC,EAAUD,EACA,SAAX7b,IACC8b,EAAuB,IAAbD,EAAiB,EAAIA,EAAW,GAE/B,SAAX7b,IACA8b,EAAUD,EAAW,GAEzB,EAAKznB,SACD,CACIynB,SAAUC,KAvIlB,EAAKjpB,MAAQ,CACTioB,YAAY,EACZG,mBAAoB,GACpB5O,KAAM,GACN8O,aAAc,KACdU,SAAU,EACVb,yBAAyB,GARd,E,iFAaf3pB,KAAK0pB,oBACL,IAAMtH,EAAOpiB,KAAKxF,MAAMzD,SAASqrB,KAC7BA,GACAxZ,SAASC,eAAeuZ,EAAKsI,QAAQ,IAAK,KAAK7G,gBAAe,K,+BA8H5D,IAAD,SAOD7jB,KAAKwB,MALLwZ,EAFC,EAEDA,KACAwP,EAHC,EAGDA,SACAf,EAJC,EAIDA,WACAG,EALC,EAKDA,mBACAD,EANC,EAMDA,wBAEEgB,EAA2B,IAAbH,EACdI,GAAehB,EAAmBnhB,QAAUmhB,EAAmBnhB,OAAS,GACxE0Z,EAASniB,KAAKxF,MAAMzD,SAASqrB,KACnC,OACI,yBAAKjnB,UAAU,MAAMG,GAAG,iBACpB,yBAAKH,UAAU,aACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,aAAaqI,MAAO,CAAEoS,SAAU,OAAQ2E,cAAe,OAAQC,MAAO,SACjF,kBAAC,IAAD,CAAMlT,GAAG,YAAYyB,MAAM,QAAO,uBAAG5N,UAAU,mBAAmBgX,cAAY,OAAO3O,MAAO,CAAE0P,MAAO,OAAQuH,YAAa,WAD9H,qBAIA,yBAAKtf,UAAU,wBACS,QAAnB7C,IAAUC,MAAkB,0BACzB4C,UAAU,kCACVwa,KAAK,SACLra,GAAG,GACHmd,cAAY,WACZC,gBAAc,OACdC,gBAAc,QACd9a,QAAS,kBAAM,EAAK0rB,eAAc,KAPT,UAW7B,kBAAC7Y,EAAA,EAAD,CAAmBnG,YAAavK,KAAKupB,eACjC,yBACIpuB,UAAS,2DAAsDsuB,GAAc,QAC7E7Q,kBAAgB,mBAChBtd,GAAG,IAEH,kBAAC,WAAD,CACIrB,KAAM8uB,GAAU,IAChB8B,SAAQ,kBAAanuB,OAASK,OAAO,0BAA7B,SAFZ,cAMA,0BACIyG,MAAO,CAAEoS,SAAU,GAAI4E,MAAO,QAASC,YAAa,OAAQ/W,OAAQ,WACpE7F,QAAS,kBAvNvC,SAAAitB,GACtB,IAAMD,EAAQ,mBAAenuB,OAASK,OAAO,0BAA/B,SAGRguB,EAAK,CAAEC,OAAQ,CAAE/wB,KADZgxB,SAAWC,cAAcJ,IACDK,WAAY,CAAC,SAC1CC,EAAcH,SAAWF,EAAI,CAAEM,SAAU,OAAQ/xB,KAAM,UACvDW,EAAO,IAAIkS,KAAK,CAACif,GAAc,CAAE9xB,KAJtB,oFAKjBgyB,UAAiBrxB,EAAM4wB,GAgN4CU,CAAWxC,GAAU,OAFxC,qBAWA,QAAnBzwB,IAAUC,MACX,kBAAC,IAAMkjB,SAAP,KACA,yBAAKtgB,UAAU,0BACX,yBAAKA,UAAU,YACf,yBAAKqI,MAAO,CAACoS,SAAS,OAAQ+E,aAAc,SAA5C,eACA,yBAAKxf,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,uEACA,4BAAQA,UAAU,eAAeO,SAAU,SAAC/D,GAAD,OAAO,EAAKoL,SAAS,CAAEyoB,cAAe7zB,EAAEiE,OAAOd,UACtF,4BAAQA,MAAM,IAAd,UACA,4BAAQA,MAAM,KAAd,OACA,4BAAQA,MAAM,KAAd,UAKhB,yBAAKK,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,cACX,8BAAM,qDACN,+BACI,2BAAOA,UAAU,eACb,wBAAIA,UAAU,sBACV,iDACA,yCAEJ,wBAAIA,UAAU,sBACV,qCACA,4BACI,2BAAO7B,KAAK,OAAO6B,UAAU,eAAeH,YAAY,gBAGhE,wBAAIG,UAAU,sBACV,mCACA,4BACI,2BAAO7B,KAAK,OAAO6B,UAAU,eAAeH,YAAY,gBAGhE,wBAAIG,UAAU,sBACV,8CACA,4BACI,2BAAO7B,KAAK,OAAO6B,UAAU,eAAeH,YAAY,gBAGhE,wBAAIG,UAAU,sBACV,mDACA,4BACI,2BAAO7B,KAAK,OAAO6B,UAAU,eAAeH,YAAY,mBAM5E,yBAAKG,UAAU,wBAAwBqI,MAAO,CAAC+N,UAAU,SACrD,4BAAQjY,KAAK,SAAS6B,UAAU,0BAAhC,eAMpB,kBAAC+iB,GAAA,EAAD,CAAW/iB,UAAU,YAAYgjB,iBAA6B,kBAAXgE,GAA8B,IAAK7mB,GAAG,gBACrF,kBAAC4iB,GAAA,EAAUG,OAAX,CACIljB,UAAU,iDACVmjB,GAAIpV,KAAKhB,OACTqW,SAAS,KAET,wBAAIpjB,UAAU,QAAd,kBAEJ,kBAAC+iB,GAAA,EAAUW,SAAX,CAAoB1jB,UAAU,OAAOojB,SAAS,KAC1C,yBAAKpjB,UAAU,aACX,yBAAKA,UAAU,YACf,yBAAKA,UAAU,gBAEX,0BAAMwT,OAAO,GAAG0L,OAAO,QACnB,yBAAKlf,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,8BAAM,kDACN,4BAAQA,UAAU,gBACd,4BAAQL,MAAM,IAAd,UACA,4BAAQA,MAAM,IAAd,OACA,4BAAQA,MAAM,IAAd,mBACA,4BAAQA,MAAM,IAAd,aAIZ,yBAAKK,UAAU,YACX,yBAAKA,UAAU,cACX,8BAAM,gDACN,4BAAQA,UAAU,gBACd,4BAAQL,MAAM,IAAd,UACA,4BAAQA,MAAM,IAAd,aACA,4BAAQA,MAAM,IAAd,cACA,4BAAQA,MAAM,IAAd,iBAIZ,yBAAKK,UAAU,YACX,yBAAKA,UAAU,cACX,8BAAM,kDACN,4BAAQA,UAAU,gBACd,4BAAQL,MAAM,IAAd,UACA,4BAAQA,MAAM,IAAd,iBACA,4BAAQA,MAAM,IAAd,iBACA,4BAAQA,MAAM,IAAd,iBAIZ,yBAAKK,UAAU,aACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,YACX,yBAAKA,UAAU,wBAAwBqI,MAAO,CAAC+N,UAAW,SACtD,4BAAQjY,KAAK,SAAS6B,UAAU,0BAAhC,kBAShC,kBAAC+iB,GAAA,EAAD,CAAW/iB,UAAU,YAAYgjB,iBAA6B,oBAAXgE,GAAgC,IAAK7mB,GAAG,kBACvF,kBAAC4iB,GAAA,EAAUG,OAAX,CACIljB,UAAU,iDACVmjB,GAAIpV,KAAKhB,OACTqW,SAAS,KAEb,wBAAIpjB,UAAU,QAAd,mBAEA,kBAAC+iB,GAAA,EAAUW,SAAX,CAAoB1jB,UAAU,OAAOojB,SAAS,KAC1C,oCACA,yBAAKpjB,UAAU,aACX,yBAAKA,UAAU,gBAEX,0BAAMwT,OAAO,GAAG0L,OAAO,QACnB,yBAAKlf,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,cACX,8BAAM,wDACN,+BACI,2BAAOA,UAAU,4BACb,wBAAIG,GAAG,IAAIH,UAAU,sBACjB,4CAEJ,wBAAIA,UAAU,sBACV,uCAEJ,wBAAIA,UAAU,sBACV,oCAEJ,wBAAIA,UAAU,sBACV,sCAEJ,wBAAIA,UAAU,sBACV,sCAEJ,wBAAIA,UAAU,sBACV,gDAKhB,yBAAKA,UAAU,wBAAwBqI,MAAO,CAAC+N,UAAW,SACtD,4BAAQjY,KAAK,SAAS6B,UAAU,0BAAhC,YAGR,yBAAKA,UAAU,kBAMnC,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YACf,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,iBAAiBqI,MAAO,CAACoS,SAAS,OAAO+E,aAAa,SAArE,0BACA,0BAAMhM,OAAO,GAAG0L,OAAO,QACnB,yBAAKlf,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,8BAAM,0DACN,yBAAKA,UAAU,+BACX,2BAAO7B,KAAK,QAAQ6B,UAAU,uBAAuBG,GAAG,uBAAuBkC,KAAK,0BAChF,2BAAOrC,UAAU,uBAAuBswB,IAAI,wBAA5C,QAEJ,yBAAKtwB,UAAU,+BACX,2BAAO7B,KAAK,QAAQ6B,UAAU,uBAAuBG,GAAG,uBAAuBkC,KAAK,0BAChF,2BAAOrC,UAAU,uBAAuBswB,IAAI,wBAA5C,SAIpB,yBAAKtwB,UAAU,aACf,yBAAKA,UAAU,YACX,yBAAKA,UAAU,wBAAwBqI,MAAO,CAAC+N,UAAU,SACrD,4BAAQjY,KAAK,SAAS6B,UAAU,0BAAhC,oBAY5B,kBAAC+iB,GAAA,EAAD,CAAW/iB,UAAU,YAAYgjB,iBAA6B,oBAAXgE,GAAgC,IAAK7mB,GAAG,kBACvF,kBAAC4iB,GAAA,EAAUG,OAAX,CACIljB,UAAU,iDACVmjB,GAAIpV,KAAKhB,OACTqW,SAAS,KAET,wBAAIpjB,UAAU,QAAd,oBAEJ,kBAAC+iB,GAAA,EAAUW,SAAX,CAAoB1jB,UAAU,OAAOojB,SAAS,KAC1C,kBAAC7N,EAAA,EAAD,CAAmBnG,YAAa,kBAAM,EAAKxH,SAAS,CAAEiY,KAAM,GAAI8O,aAAc,SAC1E,yBAAK3uB,UAAU,gBAEE,QAAT6f,EACA,4BAAQ7f,UAAU,4BAA4B0C,QAAS,SAAAlG,GACnDA,EAAEsf,kBACF,EAAKlU,SAAS,CAAE+mB,aAAc,CAAEtsB,KAAM,GAAIusB,YAAa,IAAM/O,KAAM,UAFvE,WAGsB,KAE1B,yBAAK7f,UAAU,mBACX,2BAAOA,UAAU,oBACb,4BACI,wBAAIA,UAAU,0BAAd,WACA,oCACA,2CACA,wBAAIA,UAAU,kBAAd,WAGS,QAAT6f,EAAiBhb,KAAKub,oBAAsB,KAG5Cvb,KAAKmqB,SAASP,EAAoB,GAAIY,GAAUltB,KAAI,SAACqM,EAAGD,GACpD,OAAGsR,IAAStR,EACD,EAAK6R,oBAGR,wBAAI1d,QAAS,kBAAM,EAAKkF,SAAS,CAAEiY,KAAMtR,EAAOogB,aAAcngB,KAAO/D,IAAK+D,EAAEnM,KAAOmsB,GAC/E,wBAAIxuB,UAAU,kBACV,2BAAO7B,KAAK,WAAW6B,UAAU,cAAeqC,KAAMmM,EAAErO,GAAI8b,eAAgBzN,EAAEkgB,YAAahsB,QAAS,SAAAlG,GAAC,OAAIA,EAAEsf,mBAAmBvb,SAAU,SAAA/D,GAAOA,EAAEsf,kBAAmB,EAAKlU,SAAS,CAAE+mB,aAAa,eAAMngB,EAAP,CAAUkgB,aAAclyB,EAAEiE,OAAOgC,WAAa,EAAK4M,cAEvP,4BACKb,EAAEnM,MAEP,4BACKmM,EAAEogB,aAEP,wBAAI5uB,UAAU,kBACV,4BACIA,UAAU,MACV0C,QAAS,SAAAlG,GACLA,EAAEsf,kBAEF/I,aAAuB,CACnBhQ,QAAS,UACTmQ,IAAK,iDACL5G,OAAQ,WACJ0G,eACA,EAAKvH,SAAS+C,EAAErO,SAK5B,uBAAGH,UAAU,mDAUzCwuB,EAA0B,yBAAKxuB,UAAU,UAAf,cAA2C,MAG7E,yBAAKA,UAAU,mBACX,4BACI0C,QAAS,kBAAM,EAAK0sB,iBAAiB,SACrCpvB,UAAU,kCACVC,SAAUuvB,GAHd,YAOA,4BACI9sB,QAAS,kBAAM,EAAK0sB,iBAAiB,SACrCpvB,UAAU,6BACVC,SAAUwvB,GAHd,sB,GA5e1BnwB,IAAM4D,W,4BCsKpC,IAIekD,gBAJS,SAACC,GAAD,MAAY,KAET,GAEZD,EApIf,SAAwB/G,GAAO,MAWGE,mBAAS,MAXZ,mBAWtB1B,EAXsB,KAWZoc,EAXY,OAYW1a,oBAAS,GAZpB,mBAYtBusB,EAZsB,KAYRzE,EAZQ,OAaa9nB,oBAAS,GAbtB,mBAatBgxB,EAbsB,KAaPjJ,EAbO,KAe7BzR,qBAAU,WACR,IAAIxH,EAAG,0BAAsBrS,IAAaC,aAC1C6d,IACGjd,IAAIwR,GACJyK,MAAK,SAACC,GAEL,GAA4B,MAAxBA,EAASja,KAAKsiB,QAA6C,MAA3BrI,EAASja,KAAKsiB,OAAO,GAAY,CACnE,IAAMmG,EAAO,CACXpnB,GAAIqnB,EAASzO,EAASja,KAAKsiB,OAAO,GAAGjhB,IACrCkC,KAAMmlB,EAASzO,EAASja,KAAKsiB,OAAO,GAAG/e,MACvColB,WAAYD,EAASzO,EAASja,KAAKsiB,OAAO,GAAGqG,YAC7CjN,KAAuD,aAAjD3d,IAAIkc,EAAU,0BAA2B,IAAqB,QAAWlc,IAAIkc,EAAU,0BAA2B,KAAO,IAC/H7N,MAAOsc,EAASzO,EAASja,KAAKsiB,OAAO,GAAGlW,OACxCiN,MAAOqP,EAASzO,EAASja,KAAKsiB,OAAO,GAAGjJ,OACxCyB,SAAU4N,EAASzO,EAASja,KAAKsiB,OAAO,GAAGxH,WAE7CK,EAAYsN,GACZD,GAAiB,OAGpBtO,OAAM,SAACxc,GAAD,OAAOD,YAAeC,QAC9B,IAwBH,IA5HsBib,EA4HhB+P,EAAW,SAAChrB,GAChB,OAAOA,GAAK,IAmCd,OACE,kBAACumB,GAAA,EAAD,CAAW/iB,UAAU,YAAYgjB,iBAAiB,KAIhD,kBAACD,GAAA,EAAUW,SAAX,CAAoB1jB,UAAU,WAAWojB,SAAS,KAChD,yBAAKpjB,UAAU,OACb,yBAAKA,UAAU,aACZnC,GACC,kBAAC6G,GAAA,EAAD,CAAaT,QAzKHwT,EAyK0B5Z,EAxK5B,CAClB,CACEsC,GAAI,OACJL,MAAO,OACPkF,OAAQC,KAAKC,MAEf,CACE/E,GAAI,aACJL,MAAO,aACPkF,OAAQC,KAAKC,MAEf,CACE/E,GAAI,QACJL,MAAO,QACPgT,YAAa,YAAoB,IAAjBzS,EAAgB,EAAhBA,UACd,SAAIA,EAAUV,OAAU,8CAA8C2L,KAAKjL,EAAUV,SAKvF8E,UAAW,0BACXO,OAAQC,KAAKC,MAEf,CACE/E,GAAI,OACJL,MAAO,OACPkF,OAAQC,KAAKO,OACbvF,UAAU,EACV+B,QAAS,CACP,CAAE7B,GAAI,QAASkC,KAAM,SACrB,CAAElC,GAAI,OAAQkC,KAAM,UAGxB,CACElC,GAAI,QACJL,MAAO,QACPkF,OAAQC,KAAKC,KACbjF,UAAU,EACV6S,YAAa,YAAoB,IAAjBzS,EAAgB,EAAhBA,UACd,OAAK,kEAAkEiL,KAAKjL,EAAUV,QAKxF8E,UAAW,qBAIItC,KAAI,SAAC1C,GAAD,sBAClB+wB,KADkB,GAElB/wB,EAFkB,CAGrBE,MAAO8X,EAAShY,EAAMU,UAqHmC2F,gBAAiB,EAAGnC,QAAQ,6BAI/E,yBAAK3D,UAAU,aACb,yBAAKA,UAAU,wBAAwBqI,MAAO,CAAE+N,UAAW,SACzD,4BAAQnW,SAAUswB,EAAepyB,KAAK,SAASuE,QA/C5C,SAAClG,GAAO,IAAD,EACW+H,aAAe,CAC5CZ,QAAS,4BADHhF,EADY,EACZA,MADY,IACLsF,cADK,MACI,GADJ,EAIpB,IAAItF,EAAJ,CAGA,IAAM8xB,EAAe,eAAQ5yB,EAAR,GA/EzB,SAAyB6yB,EAAKC,GAC5B,IAAMvP,EAAM,eAAQuP,GAIpB,OAHAD,EAAIlsB,SAAQ,SAACoe,GACXxB,EAAOwB,EAAQziB,IAAMyiB,EAAQjjB,SAExByhB,EA0EqCwP,CAAgB3sB,EAAQpG,IAClE,GAAI4yB,IAAoB5yB,EAAxB,CAGAwpB,GAAgB,GAChB,IAAIhZ,EAAG,0BAAsBrS,IAAaC,aAC1C6d,IACGjB,KAAKxK,EAAKoiB,GACV3X,MAAK,WACJuO,GAAgB,GAChBppB,YAAQ,uBAAwB,cAEjC+a,OAAM,SAACxc,GAAD,OAAOD,YAAeC,SA4B2CwD,UAAU,0BACvE8rB,EACC,0CACW,uBAAGO,MAAM,wBAAwBhkB,MAAO,CAAEoS,SAAU,QAAUzD,cAAY,UAGrF,iDC1IlB,IAIe5Q,gBAJS,SAAAC,GAAK,MAAK,KAEP,GAEZD,EAvDf,SAAsB/G,GACpB,IAAM2nB,EAAS3nB,EAAMzD,SAASqrB,KAU9B,OATApR,qBAAU,WACJ,CAAC,kBAAkB/Y,SAASkqB,IAC9BvZ,SAASC,eAAe,iBAAiBgb,mBAE1C,IAMD,kBAAC3F,GAAA,EAAD,CAAW/iB,UAAU,YAAYG,GAAG,gBAAgB6iB,iBAA6B,mBAAXgE,GAA+B,KACnG,kBAACjE,GAAA,EAAUG,OAAX,CAAkBljB,UAAU,iDAAiDmjB,GAAIpV,KAAKhB,OAAQqW,SAAS,KACrG,wBAAIpjB,UAAU,QAAd,yBAEF,kBAAC+iB,GAAA,EAAUW,SAAX,CAAoB1jB,UAAU,gBAAgBojB,SAAS,KACrD,0BAAM5P,QAAM,EAAC0L,OAAO,QAClB,yBAAKlf,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,aAAjB,aAEE,2BAAO7B,KAAK,WAAW8d,eAAe,YACtC,0BAAMjc,UAAU,iBAItB,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,aAAjB,gCAEE,2BAAO7B,KAAK,aACZ,0BAAM6B,UAAU,iBAItB,yBAAKA,UAAU,YACb,yBAAKA,UAAU,yBACb,4BAAQ7B,KAAK,SAASuE,QAhCrB,SAAAlG,GACbA,EAAEkO,kBA+BiD1K,UAAU,0BAAjD,mBC0IhB,IAIeoG,gBAJS,SAAAC,GAAK,MAAK,KAEP,GAEZD,EA9Kf,SAAkB/G,GAChB,IAAIia,EAAW,CACbuX,gBAAiB,GACjBlF,YAAa,GACbpS,gBAAiB,IAJI,EAOiBha,mBAAS+Z,GAP1B,mBAOhBsS,EAPgB,KAOFC,EAPE,OAQiBtsB,oBAAS,GAR1B,mBAQhBusB,EARgB,KAQFzE,EARE,OAS+B9nB,oBAAS,GATxC,mBAShB8a,EATgB,KASK0R,EATL,KAWjB/E,EAAS3nB,EAAMzD,SAASqrB,KAC9BpR,qBAAU,WACJ,CAAC,aAAa/Y,SAASkqB,IACzBvZ,SAASC,eAAe,YAAYgb,mBAErC,IAEH7S,qBAAU,cAAU,CAAC+V,IAErB,IA0CMrrB,EAAW,SAAA/D,GAAM,IAAD,EACIA,EAAEiE,OAAlB4B,EADY,EACZA,KAAM1C,EADM,EACNA,MACdksB,GAAgB,SAAAvC,GAAS,sBAAUA,EAAV,eAAsBjnB,EAAO1C,QAGlDwa,EAAU,SAAA3d,GAAM,IAAD,EACKA,EAAEiE,OAAlB4B,EADW,EACXA,KAAM1C,EADK,EACLA,MACdksB,GAAgB,SAAAvC,GAAS,sBAAUA,EAAV,eAAsBjnB,EAAO1C,QAGxD,OACE,kBAACojB,GAAA,EAAD,CAAW/iB,UAAU,YAAYgjB,iBAA6B,cAAXgE,GAA0B,IAAK7mB,GAAG,YACnF,kBAAC4iB,GAAA,EAAUG,OAAX,CAAkBljB,UAAU,iDAAiDmjB,GAAIpV,KAAKhB,OAAQqW,SAAS,KACrG,wBAAIpjB,UAAU,QAAd,oBAEF,kBAAC+iB,GAAA,EAAUW,SAAX,CAAoB1jB,UAAU,WAAWojB,SAAS,KAChD,0BAAM/T,SA1DG,SAAA7S,GACbA,EAAEkO,iBAEF,IACI/M,EAAW3B,IAAawc,cACvB0B,IAAc5O,KAAKsgB,EAAaD,aAE3BC,EAAaD,cAAgBC,EAAarS,gBAClDtb,YAAQ,mDAAoD,SACpD2tB,EAAaD,cAAgBC,EAAaiF,gBAClD5yB,YAAQ,2DAA4D,UAEpEopB,GAAgB,GAChB5N,IACG5c,IADH,UACU6c,IAAQC,QADlB,SACkC,CAC9B3F,KAAM,CACJ4F,SAAUjc,EACV2b,SAAUsS,EAAaiF,mBAG1B/X,MAAK,SAAAC,GACY,MAAZA,GAAqC,MAAjBA,EAASja,MAAuC,MAAvBia,EAASja,KAAKmV,OAC7D6F,IACGjB,KApBD,mBAsBE,CAAES,SAAUsS,EAAarS,kBAE1BT,MAAK,SAAAC,GACJ9a,YAAQ,gCAAiC,WACzC4tB,EAAgBvS,MAEjBN,OAAM,SAAAxc,GAAC,OAAID,YAAeC,MAE/B6qB,GAAgB,MAEjBrO,OAAM,SAAAra,GACLV,YAAQ,yCAA0C,SAClDopB,GAAgB,OA/BpBppB,YAAQ,qDAAsD,UAoDpCuV,QAAM,EAAC0L,OAAO,QACpC,yBAAKlf,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,oDAEF,2BACE7B,KAAK,WACLkE,KAAK,kBACLrC,UAAU,eACVH,YAAY,YACZya,aAAa,MACbtX,QAASzC,EACTA,SAAUA,EACV0C,OAAQkX,EACRvH,UAAQ,EACRjT,MAAOisB,EAAaiF,oBAI1B,yBAAK7wB,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,gDAEF,2BACE7B,KAAK,WACLkE,KAAK,cACLrC,UAAU,eACVH,YAAY,sBACZya,aAAa,MACbtX,QAASzC,EACTA,SAAUA,EACV0C,OAAQkX,EACRvH,UAAQ,EACRjT,MAAOisB,EAAaD,gBAI1B,yBAAK3rB,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,oDAEF,yBAAKA,UAAU,oBACb,2BACE7B,KAAMkc,EAAsB,OAAS,WACrChY,KAAK,kBACLrC,UAAU,eACVH,YAAY,YACZya,aAAa,MACbtX,QAASzC,EACTA,SAAUA,EACV0C,OAAQkX,EACRvH,UAAQ,EACRjT,MAAOisB,EAAarS,kBAEtB,0BACEvZ,UAAU,gCACVwa,KAAK,eACL9X,QAAS,kBAAMqpB,GAAwB1R,KAEtCA,EACC,uBAAGra,UAAU,YAAYqI,MAAO,CAAEE,OAAQ,UAAWkS,SAAU,QAAU7M,MAAM,kBAE/E,uBAAG5N,UAAU,kBAAkBqI,MAAO,CAAEE,OAAQ,UAAWkS,SAAU,QAAU7M,MAAM,sBAM/F,yBAAK5N,UAAU,YACb,yBAAKA,UAAU,wBAAwBqI,MAAO,CAAE+N,UAAW,SACzD,4BAAQjY,KAAK,SAAS6B,UAAU,0BAC7B8rB,EACC,0CACW,uBAAGO,MAAM,wBAAwBhkB,MAAO,CAAEoS,SAAU,QAAUzD,cAAY,UAGrF,kDCnGpB,IAIeyL,eAAWrc,aAJF,SAAAC,GAAK,MAAK,CAAEkN,MAAOlN,EAAMwN,YAEtB,GAEDzN,EA/D1B,SAAiB/G,GAEf,OAD2BA,EAAnBkf,QAAmBlf,EAAV2L,MAEf,yBAAKhL,UAAU,MAAMG,GAAG,iBACtB,yBAAKH,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,gBACb,yBACEA,UAAU,iBACVqI,MAAO,CAAEoS,SAAU,OAAQ2E,cAAe,OAAQC,MAAO,SAEzD,kBAAC,IAAD,CAAMlT,GAAG,YAAY1B,IAAI,QACvB,uBAAGzK,UAAU,mBAAmBqI,MAAO,CAAE0P,MAAO,OAAQuH,YAAa,SAAY,KALrF,uBASA,yBAAKtf,UAAU,+BACO,QAAnB7C,IAAUC,MAAkB,uBAC3B4C,UAAU,kCACVuf,KAAK,IACL/E,KAAK,SACLra,GAAG,SACHmd,cAAY,WACZC,gBAAc,OACdC,gBAAc,SAPa,UAW7B,yBACExd,UAAU,oCACVyd,kBAAgB,mBAChBtd,GAAG,cAEH,uBAAGof,KAAK,KAAR,cACA,uBAAGA,KAAK,KAAR,oBAKR,kBAAC,IAAD,CAAOuR,KAAI,oBAAuBC,UAAW,kBAAM,kBAAC,GAAmB1xB,MACrD,QAAjBqa,IAAQtc,MACP,kBAAC,IAAD,CAAO0zB,KAAI,oBAAuBC,UAAW,kBAAM,kBAAC,GAAiB1xB,MAEvE,kBAAC,IAAD,CAAOyxB,KAAI,oBAAuBC,UAAW,kBAAM,kBAAC,GAAa1xB,iB,mDCrD9D2xB,G,2MACnB3qB,MAAQ,CACNof,cAAe,M,uFAGOwL,EAAW3H,GACjC,OAAI2H,EAAUC,cAAgBrsB,KAAKxF,MAAM6xB,YAChCrsB,KAAKxF,MAAM6xB,YAEb,O,yCAGUD,EAAW3H,EAAW6H,GACtB,OAAbA,GACFtsB,KAAK+C,SAAS,CACZ6d,cAAc,eACT0L,O,+BAMD,IAAD,SAC+DtsB,KAAKxF,MAAnE4M,EADD,EACCA,KADD,IACO+C,YADP,MACc,MADd,EACqBoiB,EADrB,EACqBA,YAAaF,EADlC,EACkCA,YAAa5K,EAD/C,EAC+CA,YAC9Cb,EAAkB5gB,KAAKwB,MAAvBof,cAER,OACE,kBAAC7Y,GAAA,EAAD,CAAOX,KAAMA,EAAMa,OAAQskB,EAAapxB,UAAU,OAAOwL,KAAK,KAAKqB,SAAS,UAC1E,kBAACD,GAAA,EAAMG,OAAP,CAAcC,aAAW,GAAW,QAATgC,EAAiB,MAAQ,SAApD,aACA,kBAACpC,GAAA,EAAMM,KAAP,CAAY7E,MAAO,CAAE,aAAc,sBAAuB,aAAc,SACtE,yBAAKrI,UAAU,QACb,iDACA,2BACE7B,KAAK,OACL6B,UAAU,eACV6S,aAAcqe,EAAcA,EAAY7uB,KAAO,GAC/C9B,SAAU,SAAA/D,GAAC,OACT,EAAKoL,SAAS,CACZ6d,cAAc,eACT,EAAKpf,MAAMof,cADH,CAEXpjB,KAAM7F,EAAEiE,OAAOd,cAMzB,yBAAKK,UAAU,QACb,2CACA,2BACE7B,KAAK,OACL6B,UAAU,eACV6S,aAAcqe,EAAcA,EAAY7kB,QAAU,GAClD9L,SAAU,SAAA/D,GAAC,OACT,EAAKoL,SAAS,CACZ6d,cAAc,eACT,EAAKpf,MAAMof,cADH,CAEXpZ,QAAS7P,EAAEiE,OAAOd,cAM5B,6BACE,+BACE,2CAGJ,kBAAC,KAAD,CACEiK,OAAQC,KACR/K,KAAMoyB,EAAcA,EAAYnoB,KAAO,GACvCe,OAAQ,CACNC,QAAS,CAAC,UAAW,IAAK,OAAQ,SAAU,eAAgB,iBAE9DxJ,SAAU,SAACC,EAAOoJ,GAChB,IAAM9K,EAAO8K,EAAOI,UACpB,EAAKpC,SAAS,CACZ6d,cAAc,eACT,EAAKpf,MAAMof,cADH,CAEX1c,KAAMjK,SAKd,yBAAKkB,UAAU,QACb,kBAAC2O,EAAA,EAAD,CACE1O,WACIpD,IAAI4oB,EAAe,OAAQ,KAAO5oB,IAAI4oB,EAAe,UAAW,KAAO5oB,IAAI4oB,EAAe,OAAQ,KAEtG/iB,QAAS,WACP0uB,IACA9K,EAAYtX,EAAM,EAAK3I,MAAMof,cAAeyL,KANhD,e,GApFoChuB,a,0CCM1CwiB,GAAe,CACnB2L,KAAM,GACN7d,OAAQ,GACR8d,OAAQ,KACR3L,SAAU,GACV4L,YAAa,GACbC,YAAa,GACbC,aAAc,KACdC,cAAc,EACdC,eAAgB,KAChBC,kBAAmB,KACnB9O,YAAa,EACb8C,aAAc,KACdiM,gBAAgB,EAChBpM,cAAe,KACfqM,oBAAqB,GACrBC,YAAY,EACZC,iBAAkB,MAEC7L,G,2MACnB9f,M,eACKqf,I,EAGLU,WAAa,kBAAM,EAAKxe,SAAL,eAAmB8d,M,EAEtCuM,iBAAmB,kBACjB,EAAKrqB,UACH,SAAA0hB,GAAS,MAAK,CACZuI,gBAAiBvI,EAAUuI,mBAE7B,kBACE,EAAKjqB,UAAS,SAAA0hB,GAAS,MAAK,CAC1B1D,cAA2C,IAA7B0D,EAAUuI,eAA2B,KAAOvI,EAAU1D,qB,EAI5EoJ,SAAW,SAACC,EAAOC,EAAWC,GAAnB,OAAmCF,EAAMze,OAAO2e,EAAc,GAAKD,EAAWC,EAAcD,I,EAEvG7I,UAAY,WAAO,IAAD,EACsF,EAAKhnB,MAAnGlB,EADQ,EACRA,KAAM+zB,EADE,EACFA,YAAaC,EADX,EACWA,aAAcC,EADzB,EACyBA,kBAAmBC,EAD5C,EAC4CA,sBAAuBC,EADnE,EACmEA,eADnE,EAG8F,EAAKjsB,MAA3Guf,EAHQ,EAGRA,aAAcyL,EAHN,EAGMA,KAAMI,EAHZ,EAGYA,aAAcD,EAH1B,EAG0BA,YAAaM,EAHvC,EAGuCA,oBAAqBP,EAH5D,EAG4DA,YAAaS,EAHzE,EAGyEA,iBAEnFO,EAAa,IAAI7hB,MAAM,GAAG8hB,OAAOrwB,KAAI,SAAC8nB,EAAGrf,GAAJ,OAAUA,EAAI,KAEnD6nB,EAAwB,aAATt0B,EAAsBg0B,EAAeD,EAE1D,MAA0B,QAAtB,EAAK7rB,MAAMmN,OAEX,4BACE,4BAEa,aAATrV,EACE,kBAACujB,GAAA,EAAD,CACEC,YAAaC,KACXuQ,EAAahwB,KAAI,SAAA0f,GAAC,MAAK,CAAE1hB,GAAI0hB,EAAE6Q,SAASvyB,GAAIkC,KAAMwf,EAAE6Q,SAASrwB,SAC7D,MAEF4f,YAAa,SAAA5Y,GAAI,OAAIA,EAAO,EAAKzB,SAAS,CAAE2pB,YAAaloB,EAAKlJ,GAAI6xB,iBAAkB3oB,IAAU,EAAKzB,SAAS,CAAE2pB,YAAa,GAAIS,iBAAkB,QACjJ/Q,OAAQ,SAAAD,GAAI,OAAIsR,EAAetR,IAC/BlB,UAAWuS,EACXxf,aAAcmf,GAAoBA,EAAiB3vB,OAGrD,4BACErC,UAAU,eACVO,SAAU,SAAA/D,GAAC,OACT,EAAKoL,SAAL,eACY,aAATzJ,EAAsB,cAAgB,sBAAwB3B,EAAEiE,OAAOd,UAI5E,4BAAQM,UAAQ,EAACqP,UAAQ,GAAzB,iBAGCmjB,EAAanlB,OACVmlB,EAAatwB,KAAI,SAAAqM,GAAC,OAChB,4BAAQ/D,IAAK+D,EAAErO,GAAIR,MAAO6O,EAAErO,IACzBqO,EAAEnM,SAGP,OAIZ,4BACE,4BACErC,UAAU,eACVO,SAAU,SAAA/D,GAAC,OACT,EAAKoL,SAAS,CACZ6pB,aAAcj1B,EAAEiE,OAAOd,UAO3B,4BAAQA,MAAM,KAAK2P,UAAQ,GAA3B,UAGA,4BAAQ3P,MAAM,KAAd,WAGJ,4BACE,2BACExB,KAAK,SACL6B,UAAU,eACVumB,QAAS,SAAA/pB,GAAC,OACR,EAAKoL,SAAS,CACZypB,KAAM70B,EAAEiE,OAAOd,YAKvB,4BACE,4BACEK,UAAU,eACVO,SAAU,SAAA/D,GAAC,OACT,EAAKoL,SAAS,CACZ4pB,YAAah1B,EAAEiE,OAAOd,UAI1B,4BAAQM,UAAQ,EAACqP,UAAQ,GAAzB,iBAGC8iB,EAAkB9kB,OACf8kB,EAAkBjwB,KAAI,SAAAqM,GAAC,OACrB,4BAAQ/D,IAAK+D,EAAErO,GAAIR,MAAO6O,EAAErO,IACzBqO,EAAEnM,SAGP,OAGR,4BACE,4BAAQrC,UAAU,eAChBO,SAAU,SAAA/D,GAAC,OACT,EAAKoL,SAAS,CACZ0pB,OAAQ90B,EAAEiE,OAAOd,UAGrB,4BAAQM,UAAQ,EAACqP,UAAQ,GAAzB,iBAIEijB,EAAWpwB,KAAI,SAAAqM,GAAC,OAAI,4BAAQ7O,MAAO6O,GAAf,SAAyBA,EAAzB,cAI1B,4BACE,yBAAKxO,UAAU,qBACb,2BAAO2tB,QAAO,iBAAYxvB,EAAZ,SACZ,2BACEA,KAAK,WACLgC,GAAE,iBAAYhC,EAAZ,QACFoC,SAAU,SAAA/D,GACRA,EAAEsf,kBACF,EAAKlU,SAAS,CAAEmqB,YAAa,EAAK1rB,MAAM0rB,gBAG5C,8BACE,oCAKR,4BACE,4BACE9xB,UAAWoxB,IAASI,IAAiBD,IAAiBD,IAAgBO,EACtElkB,MAAM,OACN5N,UAAU,+BACV0C,QAAS,SAAAlG,GACPA,EAAEsf,kBACF,EAAKwK,YAAY,MAAO,KAAMnoB,GAC9B,EAAKioB,eAGP,uBAAGpmB,UAAU,iBAEf,mCACA,4BACE4N,MAAM,SACN5N,UAAU,qBACV0C,QAAS,SAAAlG,GACPA,EAAEsf,kBACF,EAAKsK,eAGP,uBAAGpmB,UAAU,qBAKU,SAAtB,EAAKqG,MAAMmN,OAElB,kBAAC,KAAD,CACEpE,YAAa,SAAA5S,GACXA,EAAEsf,kBACF,EAAKwK,YAAY,OAAQV,EAAcznB,GACvC,EAAKioB,eAGP,4BACE,4BAEa,aAATjoB,EACE,kBAACujB,GAAA,EAAD,CACEC,YAAaC,KACXuQ,EAAahwB,KAAI,SAAA0f,GAAC,MAAK,CAAE1hB,GAAI0hB,EAAE6Q,SAASvyB,GAAIkC,KAAMwf,EAAE6Q,SAASrwB,SAC7D,MAEF4f,YAAa,SAAA5Y,GAAI,OAAIA,EAAO,EAAKzB,SAAS,CAAE2pB,YAAaloB,EAAKlJ,GAAI6xB,iBAAkB3oB,IAAU,EAAKzB,SAAS,CAAE2pB,YAAa,GAAIS,iBAAkB,QACjJ/Q,OAAQ,SAAAD,GAAI,OAAIsR,EAAetR,IAC/BlB,UAAWuS,EACXxf,aAAcmf,GAAoBA,EAAiB3vB,OAGvD,4BACErC,UAAU,eACV6S,aAAc+S,EAAsB,aAATznB,EAAsB,cAAgB,uBACjEoC,SAAU,SAAA/D,GAAC,OACT,EAAKoL,SAAL,eACY,aAATzJ,EAAsB,cAAgB,sBAAwB3B,EAAEiE,OAAOd,UAI5E,4BAAQM,UAAQ,EAACqP,UAAQ,GAAzB,iBAGCmjB,EAAanlB,OACVmlB,EAAatwB,KAAI,SAAAqM,GAAC,OAChB,4BAAQ/D,IAAK+D,EAAErO,GAAIR,MAAO6O,EAAErO,IACzBqO,EAAEnM,SAGP,OAIV,4BACE,4BACErC,UAAU,eACV6S,aAAc4e,EACdlxB,SAAU,SAAA/D,GAAC,OACT,EAAKoL,SAAS,CACZ6pB,aAAcj1B,EAAEiE,OAAOd,UAO3B,4BAAQA,MAAM,KAAK2P,UAAQ,GAA3B,UAGA,4BAAQ3P,MAAM,KAAd,WAGJ,4BACE,2BACExB,KAAK,SACL6B,UAAU,eACV6S,aAAcvV,KAAKq1B,IAAI/M,EAAayL,MACpC9K,QAAS,SAAA/pB,GAAC,OACR,EAAKoL,SAAS,CACZypB,KAAM70B,EAAEiE,OAAOd,YAKvB,4BACE,4BACEK,UAAU,eACV6S,aAAckX,OAAOnE,EAAa4L,aAClCjxB,SAAU,SAAA/D,GAAC,OACT,EAAKoL,SAAS,CACZ4pB,YAAah1B,EAAEiE,OAAOd,UAI1B,4BAAQM,UAAQ,EAACqP,UAAQ,GAAzB,iBAGC8iB,EAAkB9kB,OACf8kB,EAAkBjwB,KAAI,SAAAqM,GAAC,OACrB,4BAAQ/D,IAAK+D,EAAErO,GAAIR,MAAO6O,EAAErO,IACzBqO,EAAEnM,SAGP,OAGR,4BACE,4BAAQwQ,aAAc+S,EAAa0L,OAAQtxB,UAAU,eACnDO,SAAU,SAAA/D,GAAC,OACT,EAAKoL,SAAS,CACZ0pB,OAAQ90B,EAAEiE,OAAOd,UAGrB,4BAAQM,UAAQ,EAACqP,UAAQ,GAAzB,iBAIEijB,EAAWpwB,KAAI,SAAAqM,GAAC,OAAI,4BAAQ7O,MAAO6O,GAAf,SAAyBA,EAAzB,cAI1B,4BACE,yBAAKxO,UAAU,qBACb,2BACE2tB,QAAO,iBAAYxvB,EAAZ,YACI,aAATA,EAAsBynB,EAAa2L,YAAc3L,EAAakM,sBAGhE,2BACE3zB,KAAK,WACLgC,GAAE,iBAAYhC,EAAZ,YACS,aAATA,EAAsBynB,EAAa2L,YAAc3L,EAAakM,qBAEhE7V,eAAgB2J,EAAamM,WAC7BxxB,SAAU,SAAA/D,GACRA,EAAEsf,kBACF,EAAKlU,SAAS,CAAEmqB,YAAa,EAAK1rB,MAAM0rB,gBAG5C,8BACE,oCAKR,4BACE,4BACEnkB,MAAM,SACN5N,UAAU,qBACV0C,QAAS,SAAAlG,GACPA,EAAEsf,kBACF,EAAKsK,eAGP,uBAAGpmB,UAAU,2BAnJlB,G,EA4JT4yB,QAAU,SAACzyB,EAAIhC,GAAU,IAAD,EACwC,EAAKkB,MAA3D6yB,EADc,EACdA,YAAaE,EADC,EACDA,kBAAmBS,EADlB,EACkBA,kBACxC,GAAI,CAAC,WAAY,eAAe/1B,SAASqB,IAAS00B,GAAqBA,EAAkBvlB,OAAQ,CAC/F,IAAMolB,EAAWG,EAAkB1vB,MAAK,SAAAqL,GAAC,OAAIA,EAAErO,KAAOA,KACtD,OAAGuyB,EACMA,EAASrwB,KAET,IAEJ,MAAI,CAAC,UAAW,cAAcvF,SAASqB,IAAS+zB,EAAY5kB,OAClD4kB,EAAY/uB,MAAK,SAAAqL,GAAC,OAAIA,EAAErO,KAAOA,KAChCkC,KACI,UAATlE,GAAoBi0B,GAAqBA,EAAkB9kB,OACnD8kB,EAAkBjvB,MAAK,SAAAqL,GAAC,OAAIA,EAAErO,KAAOA,KACtCkC,KAEX,K,EAGTmkB,WAAa,SAACroB,EAAMW,GAAU,IAAD,EACQ,EAAKuH,MAAhCuf,EADmB,EACnBA,aAAcD,EADK,EACLA,SACtB,MAAa,aAATxnB,GAAgC,YAATA,EAClBW,EAAKqD,KAAI,SAACqM,EAAGqR,GAClB,IAAK+F,GAAiBA,GAAgBA,EAAazlB,KAAOqO,EAAErO,GAAK,CAC/D,GAAI0f,IAAS8F,EAGX,OACE,wBACEjjB,QAAS,kBACP,EAAKkF,SAAS,CACZ4L,OAAQ,OACRoS,aAAcpX,EACdijB,aAAcjjB,EAAE6iB,KAAO,EAAI,KAAO,IAClC1L,SAAU9F,EACVkS,WAAYvjB,EAAEujB,WACdC,iBAAkB,CAAE3vB,KAAM,EAAKuwB,QAAQpkB,EAAE+iB,YAAa,iBAI1D,4BACY,aAATpzB,EAAsB,EAAKy0B,QAAQpkB,EAAE+iB,YAAapzB,GAAQ,EAAKy0B,QAAQpkB,EAAEsjB,oBAAqB3zB,IAEjG,4BAAKqQ,EAAE6iB,KAAO,EAAI,SAAW,SAC7B,4BAAK7iB,EAAE6iB,MAAQ/zB,KAAKq1B,IAAInkB,EAAE6iB,OAC1B,4BAAK,EAAKuB,QAAQpkB,EAAEgjB,YAAa,UACjC,4BACGhjB,EAAE8iB,OAAF,gBAAoB9iB,EAAE8iB,OAAtB,SAAsC,KAEzC,wBAAI5uB,QAAS,SAAAlG,GAAC,OAAIA,EAAEsf,oBAClB,yBAAK9b,UAAU,qBACb,2BAAO2tB,QAAO,iBAAYxvB,EAAZ,YAAoBqQ,EAAErO,KAClC,2BACEhC,KAAK,WACLgC,GAAE,iBAAYhC,EAAZ,YAAoBqQ,EAAErO,IACxB8b,eAAgBzN,EAAEujB,WAClBxxB,SAAU,SAAA/D,GAAM,IAAD,EACP6R,EAAG,iCAA6BG,EAAErO,IACxC2Z,IACGgZ,MACCzkB,GAFJ,mBAIgB,aAATlQ,EAAsB,cAAgB,sBAC5B,aAATA,EAAsBqQ,EAAE+iB,YAAc/iB,EAAEsjB,qBALhD,2BAMkBt1B,EAAEiE,OAAOgC,SAN3B,IASGqW,MAAK,SAAAC,GACJ,EAAK1Z,MAAMonB,cAActoB,GACzB,EAAKioB,aACLnoB,YAAQ,uBAAwB,iBAIxC,8BACE,oCAKR,wBAAIyE,QAAS,SAAAlG,GAAC,OAAIA,EAAEsf,oBAClB,4BACElO,MAAM,SACN5N,UAAU,qBACV0C,QAAS,SAAAlG,GACPA,EAAEsf,kBAEF/I,aAAuB,CACrBhQ,QAAS,UACTmQ,IAAK,+CACL5G,OAAQ,WACN0G,eACA,EAAK+f,YAAYvkB,EAAErO,GAAIhC,QAK7B,uBAAG6B,UAAU,qBAxErB,EAAKqmB,YA+ET,OAAO,EAAKA,eAGH,UAATloB,EACKW,EAAKqD,KAAI,SAACqM,EAAGqR,GAAJ,OACd,wBAAInd,QAAS,kBAAM,EAAKkF,SAAS,CAAEiqB,gBAAgB,EAAMjM,aAAcpX,MACrE,4BAAKA,EAAErO,IACP,4BAAKqO,EAAEnM,MACP,4BAAKmM,EAAEnC,SACP,4BAAI,yBAAKrM,UAAU,aAAalC,KAAM0Q,EAAEzF,KAAKmB,UAC7C,4BACE,4BACE0D,MAAM,SACN5N,UAAU,qBACV0C,QAAS,SAAAlG,GACPA,EAAEsf,kBACF/I,aAAuB,CACrBhQ,QAAS,UACTmQ,IAAK,+CACL5G,OAAQ,WACN0G,eACA,EAAK+f,YAAYvkB,EAAErO,GAAIhC,QAK7B,uBAAG6B,UAAU,6BAvBvB,G,EA+BFgzB,gBAAkB,SAAA70B,GACZ,CAAC,WAAY,cAAe,UAAW,cAAcrB,SAASqB,GAChE,EAAKyJ,SAAS,CAAE4L,OAAQ,MAAOwe,iBAAkB,OAEjD,EAAKpqB,SAAS,CAAEiqB,gBAAgB,K,EAIpCzC,iBAAmB,SAAA5b,GAAM,OACvB,EAAK5L,SAAS,CACZkb,YAAwB,SAAXtP,EAAoB,EAAKnN,MAAMyc,YAAc,EAAI,EAAKzc,MAAMyc,YAAc,K,EAG3FwD,YAAc,SAACtX,EAAMqR,EAAUliB,GAAU,IAAD,EAChCkQ,EAAe,QAATW,EAAiB,sBAAjB,iCAAmEqR,EAASlgB,IAClF8yB,EAAuB,QAATjkB,EAAiB,OAAS,QAFR,EAG2E,EAAK3I,MAA9GgrB,EAH8B,EAG9BA,KAAMG,EAHwB,EAGxBA,YAAaC,EAHW,EAGXA,aAAcM,EAHH,EAGGA,WAAYT,EAHf,EAGeA,OAAQI,EAHvB,EAGuBA,aAAcC,EAHrC,EAGqCA,eAAgBC,EAHrD,EAGqDA,kBACvFnM,GAAa,mBACd,CAAC,WAAY,eAAe3oB,SAASqB,GAAQ,cAAgB,sBAAwB,EAAKkI,MACzF,CAAC,WAAY,eAAevJ,SAASqB,GAAQ,cAAgB,wBAFhD,qBAIfkzB,GAJe,uBAKfC,GALe,4BAMfE,GANe,2BAOfO,GAPe,6BAQfL,GARe,+BASfC,GATe,kCAUfC,GAVe,GAYjB,GAAa,QAAT5iB,EAAgB,CAClB,IAAMqiB,EAAwB,OAAjBI,GAAsD,EAA9B1H,OAAOtE,EAAc4L,MAAatH,OAAOtE,EAAc4L,MAC5F5L,EAAc4L,KAAOA,EAEV,SAATriB,IACFyW,EAAa,eACRpF,EADQ,eAEV,CAAC,WAAY,eAAevjB,SAASqB,GAAQ,cAAgB,sBAAwBkiB,EACpF,CAAC,WAAY,eAAevjB,SAASqB,GAAQ,cAAgB,yBAG9DuzB,IACDjM,EAAciM,cAAe,EAC7BjM,EAAcsM,YAAa,GAE1BA,IACDtM,EAAcsM,YAAa,GAEzBT,IACF7L,EAAc6L,OAASA,GAEtBK,IACDlM,EAAckM,eAAiBA,GAE7BC,IACFnM,EAAcmM,kBAAoBA,GAEhC,EAAKvrB,MAAM,CAAC,WAAY,eAAevJ,SAASqB,GAAQ,cAAgB,yBAC1EsnB,EAAc,CAAC,WAAY,eAAe3oB,SAASqB,GAAQ,cAAgB,uBAAyB,EAAKkI,MACvG,CAAC,WAAY,eAAevJ,SAASqB,GAAQ,cAAgB,wBAG7DqzB,IACF/L,EAAc+L,YAAcA,GAE9B/L,EAAc4L,KAAO/zB,KAAKq1B,IAAItB,GAAchR,EAASgR,MAAQtH,OAAO0H,IASlEyB,KAAQ7S,EAAUoF,IAGtB3L,IAASmZ,GACP5kB,EADF,eAEOoX,IACL3M,MAAK,SAAAC,GACL,EAAK1Z,MAAMonB,cAActoB,GACzB,EAAKioB,aACL,IAAMlT,EAAe,QAATlE,EAAiB,QAAU,UACvC/Q,YAAQiV,EAAM,gBAAiB,e,EAInCigB,yBAA2B,SAACnkB,EAAMyW,EAAepF,GAC/C,IAAMhS,EACK,QAATW,EAAiB,qCAAjB,gDAAiGqR,EAASlgB,IACtG8yB,EAAuB,QAATjkB,EAAiB,OAAS,QAE9C8K,IAASmZ,GACP5kB,EADF,eAEOoX,IACL3M,MAAK,SAAAC,GACL,EAAK1Z,MAAMonB,cAAc,SACzB,EAAKL,iB,EAIT2M,YAAc,SAAC5yB,EAAIhC,GACjB,IAAMkQ,EAAe,UAATlQ,EAAA,gDAA4DgC,GAA5D,iCAA6FA,GACzG2Z,IACGmG,OAAO5R,GACPyK,MAAK,WACJ7a,YAAQ,uBAAwB,WAChC,EAAKoB,MAAMonB,cAActoB,MAE1B6a,OAAM,SAAAxc,GACO,UAAT2B,GACDF,YAAQ,0BAA2B,a,EAK3Cm1B,sBAAwB,SAACj1B,EAAMW,GAAU,IAC/B6mB,EAAa,EAAKtf,MAAlBsf,SACR,OAAO7mB,EAAKqD,KAAI,SAACqM,EAAGqR,GAClB,OAAIA,IAAS8F,EACJ,EAAK0N,sBAGZ,wBAAI3wB,QAAS,kBAAM,EAAKkF,SAAS,CAAEge,aAAcpX,EAAGmX,SAAU9F,EAAMrM,OAAQ,OAAQwe,iBAAkB,CAAE3vB,KAAM,EAAKuwB,QAAQpkB,EAAE+iB,YAAa,iBACxI,4BACY,gBAATpzB,EAAyB,EAAKy0B,QAAQpkB,EAAE+iB,YAAapzB,GAAQ,EAAKy0B,QAAQpkB,EAAEsjB,oBAAqB3zB,IAEpG,4BAAKqQ,EAAEmjB,gBACP,4BAAKnjB,EAAEojB,mBACP,4BAAK,EAAKgB,QAAQpkB,EAAEgjB,YAAa,UACjC,wBAAI9uB,QAAS,SAAAlG,GAAC,OAAIA,EAAEsf,oBAClB,yBAAK9b,UAAU,qBACb,2BAAO2tB,QAAO,iBAAYxvB,EAAZ,YAAoBqQ,EAAErO,KAClC,2BACEhC,KAAK,WACLgC,GAAE,iBAAYhC,EAAZ,YAAoBqQ,EAAErO,IACxB8b,eAAgBzN,EAAEkjB,aAClBnxB,SAAU,SAAA/D,GAAM,IAAD,EACP6R,EAAG,iCAA6BG,EAAErO,IACxC2Z,IACGgZ,MACCzkB,GAFJ,mBAIgB,aAATlQ,EAAsB,cAAgB,sBAC5B,aAATA,EAAsBqQ,EAAE+iB,YAAc/iB,EAAEsjB,qBALhD,6BAMoBt1B,EAAEiE,OAAOgC,SAN7B,2BAOkBjG,EAAEiE,OAAOgC,SAP3B,IAUGqW,MAAK,SAAAC,GACJ,EAAK1Z,MAAMonB,cAActoB,GACzB,EAAKioB,aACLnoB,YAAQ,uBAAwB,iBAIxC,8BACE,oCAKR,4BACE,4BACE2P,MAAM,SACN5N,UAAU,qBACV0C,QAAS,SAAAlG,GACPA,EAAEsf,kBACF/I,aAAuB,CACrBhQ,QAAS,UACTmQ,IAAK,+CACL5G,OAAQ,WACN0G,eACA,EAAK+f,YAAYvkB,EAAErO,GAAIhC,QAK7B,uBAAG6B,UAAU,yB,EAOzBqzB,oBAAsB,WAAO,IAAD,EAC4E,EAAKh0B,MAAnGlB,EADkB,EAClBA,KAAM+zB,EADY,EACZA,YAAaC,EADD,EACCA,aAAcC,EADf,EACeA,kBAAmBC,EADlC,EACkCA,sBAAuBC,EADzD,EACyDA,eADzD,EAG2G,EAAKjsB,MAAlIuf,EAHkB,EAGlBA,aAAcoM,EAHI,EAGJA,iBAAkBxe,EAHd,EAGcA,OAAQme,EAHtB,EAGsBA,eAAgBC,EAHtC,EAGsCA,kBAAmBJ,EAHzD,EAGyDA,YAAaD,EAHtE,EAGsEA,YAAaO,EAHnF,EAGmFA,oBAEvGW,EAAwB,aAATt0B,EAAsBg0B,EAAeD,EAC1D,MAAc,QAAX1e,EAEC,4BACE,4BAEa,gBAATrV,EACE,kBAACujB,GAAA,EAAD,CACEC,YAAaC,KACXuQ,EAAahwB,KAAI,SAAA0f,GAAC,MAAK,CAAE1hB,GAAI0hB,EAAE6Q,SAASvyB,GAAIkC,KAAMwf,EAAE6Q,SAASrwB,SAC7D,MAEF4f,YAAa,SAAA5Y,GAAI,OAAIA,EAAO,EAAKzB,SAAS,CAAE2pB,YAAaloB,EAAKlJ,GAAI6xB,iBAAkB3oB,IAAU,EAAKzB,SAAS,CAAE2pB,YAAa,GAAIS,iBAAkB,QACjJ/Q,OAAQ,SAAAD,GAAI,OAAIsR,EAAetR,IAC/BlB,UAAWuS,EACXxf,aAAcmf,GAAoBA,EAAiB3vB,OAGrD,4BACErC,UAAU,eACVO,SAAU,SAAA/D,GAAC,OACT,EAAKoL,SAAL,eACY,gBAATzJ,EAAyB,cAAgB,sBAAwB3B,EAAEiE,OAAOd,UAI/E,4BAAQM,UAAQ,EAACqP,UAAQ,GAAzB,iBAGCmjB,EAAanlB,OACVmlB,EAAatwB,KAAI,SAAAqM,GAAC,OAClB,4BAAQ/D,IAAK+D,EAAErO,GAAIR,MAAO6O,EAAErO,IACzBqO,EAAEnM,SAGL,OAIZ,4BACE,4BACErC,UAAU,eACVO,SAAU,SAAA/D,GAAC,OACT,EAAKoL,SAAS,CACZ,eAAkBpL,EAAEiE,OAAOd,UAI/B,4BAAQM,UAAQ,EAACqP,UAAQ,GAAzB,iBAEE,CAAC,GAAI,GAAI,GAAI,IAAInN,KAAI,SAAAqM,GAAC,OACpB,4BAAQ/D,IAAK+D,EAAG7O,MAAO6O,GACpBA,QAMX,4BACE,2BACErQ,KAAK,SACL6B,UAAU,eACVumB,QAAS,SAAA/pB,GAAC,OACR,EAAKoL,SAAS,CACZgqB,kBAAmBp1B,EAAEiE,OAAOd,YAKpC,4BACE,4BACEK,UAAU,eACVO,SAAU,SAAA/D,GAAC,OACT,EAAKoL,SAAS,CACZ4pB,YAAah1B,EAAEiE,OAAOd,UAI1B,4BAAQM,UAAQ,EAACqP,UAAQ,GAAzB,iBAGC8iB,EAAkB9kB,OACf8kB,EAAkBjwB,KAAI,SAAAqM,GAAC,OACvB,4BAAQ/D,IAAK+D,EAAErO,GAAIR,MAAO6O,EAAErO,IACzBqO,EAAEnM,SAGL,OAGR,4BACE,yBAAKrC,UAAU,qBACb,2BAAO2tB,QAAO,iBAAYxvB,EAAZ,SACZ,2BACEA,KAAK,WACLgC,GAAE,iBAAYhC,EAAZ,QACFoC,SAAU,SAAA/D,GACRA,EAAEsf,kBACF,EAAKlU,SAAS,CAAE8pB,cAAe,EAAKrrB,MAAMqrB,aAAcK,YAAa,EAAK1rB,MAAMqrB,kBAGpF,8BACE,oCAKR,4BACE,4BACEzxB,UAAW0xB,IAAmBC,IAAsBJ,IAAiBD,IAAgBO,EACrFlkB,MAAM,OACN5N,UAAU,+BACV0C,QAAS,SAAAlG,GACPA,EAAEsf,kBACF,EAAKwK,YAAY,MAAO,KAAMnoB,GAC9B,EAAKioB,eAGP,uBAAGpmB,UAAU,iBAEf,mCACA,4BACE4N,MAAM,SACN5N,UAAU,qBACV0C,QAAS,SAAAlG,GACPA,EAAEsf,kBACF,EAAKsK,eAGP,uBAAGpmB,UAAU,qBAMT,SAAXwT,EAEC,kBAAC,KAAD,CACEpE,YAAa,SAAA5S,GACXA,EAAEsf,kBACF,EAAKwK,YAAY,OAAQV,EAAcznB,GACvC,EAAKioB,eAGP,4BACE,4BAEa,gBAATjoB,EACE,kBAACujB,GAAA,EAAD,CACEC,YAAaC,KACXuQ,EAAahwB,KAAI,SAAA0f,GAAC,MAAK,CAAE1hB,GAAI0hB,EAAE6Q,SAASvyB,GAAIkC,KAAMwf,EAAE6Q,SAASrwB,SAC7D,MAEF4f,YAAa,SAAA5Y,GAAI,OAAIA,EAAO,EAAKzB,SAAS,CAAE2pB,YAAaloB,EAAKlJ,GAAI6xB,iBAAkB3oB,IAAU,EAAKzB,SAAS,CAAE2pB,YAAa,GAAIS,iBAAkB,QACjJ/Q,OAAQ,SAAAD,GAAI,OAAIsR,EAAetR,IAC/BlB,UAAWuS,EACXxf,aAAcmf,GAAoBA,EAAiB3vB,OAGrD,4BACErC,UAAU,eACV6S,aAAc+S,EAAsB,gBAATznB,EAAyB,cAAgB,uBACpEoC,SAAU,SAAA/D,GAAC,OACT,EAAKoL,SAAL,eACY,gBAATzJ,EAAyB,cAAgB,sBAAwB3B,EAAEiE,OAAOd,UAI/E,4BAAQM,UAAQ,EAACqP,UAAQ,GAAzB,iBAGCmjB,EAAanlB,OACVmlB,EAAatwB,KAAI,SAAAqM,GAAC,OAClB,4BAAQ/D,IAAK+D,EAAErO,GAAIR,MAAO6O,EAAErO,IACzBqO,EAAEnM,SAGL,OAIZ,4BACE,4BACErC,UAAU,eACV6S,aAAc+S,EAAa+L,eAC3BpxB,SAAU,SAAA/D,GAAC,OACT,EAAKoL,SAAS,CACZ,eAAkBpL,EAAEiE,OAAOd,UAI/B,4BAAQM,UAAQ,EAACqP,UAAQ,GAAzB,iBAEE,CAAC,GAAI,GAAI,GAAI,IAAInN,KAAI,SAAAqM,GAAC,OACpB,4BAAQ/D,IAAK+D,EAAG7O,MAAO6O,GACpBA,QAMX,4BACE,2BACErQ,KAAK,SACL0U,aAAc+S,EAAagM,kBAC3B5xB,UAAU,eACVumB,QAAS,SAAA/pB,GAAC,OACR,EAAKoL,SAAS,CACZgqB,kBAAmBp1B,EAAEiE,OAAOd,YAKpC,4BACE,4BACEK,UAAU,eACV6S,aAAc+S,EAAa4L,YAC3BjxB,SAAU,SAAA/D,GAAC,OACT,EAAKoL,SAAS,CACZ4pB,YAAah1B,EAAEiE,OAAOd,UAI1B,4BAAQM,UAAQ,EAACqP,UAAQ,GAAzB,iBAGC8iB,EAAkB9kB,OACf8kB,EAAkBjwB,KAAI,SAAAqM,GAAC,OACvB,4BAAQ/D,IAAK+D,EAAErO,GAAIR,MAAO6O,EAAErO,IACzBqO,EAAEnM,SAGL,OAGR,4BACE,yBAAKrC,UAAU,qBACb,2BACE2tB,QAAO,iBAAYxvB,EAAZ,YACI,gBAATA,EAAyBynB,EAAa2L,YAAc3L,EAAakM,sBAGnE,2BACE3zB,KAAK,WACLgC,GAAE,iBAAYhC,EAAZ,YACS,gBAATA,EAAyBynB,EAAa2L,YAAc3L,EAAakM,qBAEnE7V,eAAgB2J,EAAa8L,aAC7BnxB,SAAU,SAAA/D,GACRA,EAAEsf,kBACF,EAAKlU,SAAS,CAAE8pB,cAAe,EAAKrrB,MAAMqrB,aAAcK,YAAa,EAAK1rB,MAAMqrB,kBAGpF,8BACE,oCAKR,4BACE,4BACE9jB,MAAM,SACN5N,UAAU,qBACV0C,QAAS,SAAAlG,GACPA,EAAEsf,kBACF,EAAKsK,eAGP,uBAAGpmB,UAAU,2BArIzB,G,wEA8IQ,IAAD,SACwB6E,KAAKxF,MAA5BqnB,EADD,EACCA,OAAQ5nB,EADT,EACSA,KAAMX,EADf,EACeA,KADf,EAKuD0G,KAAKwB,MAA3DmN,EALD,EAKCA,OAAQsP,EALT,EAKSA,YAAa8C,EALtB,EAKsBA,aAAciM,EALpC,EAKoCA,eAEvCyB,EACF,CAAC,UAAW,cAAcx2B,SAASqB,GAC/BW,EAAKwF,QAAO,SAAAkK,GAAC,OAA8B,OAA1BA,EAAEsjB,uBACnB,CAAC,WAAY,eAAeh1B,SAASqB,GACrCW,EAAKwF,QAAO,SAAAkK,GAAC,OAAsB,OAAlBA,EAAE+iB,eACnBzyB,EAEF,CAAC,cAAe,cAAchC,SAASqB,KACzCm1B,EAAUA,EAAQhvB,QAAO,SAAAkK,GAAC,OAAIA,EAAEmjB,mBAE9B,CAAC,WAAY,WAAW70B,SAASqB,KACnCm1B,EAAUA,EAAQhvB,QAAO,SAAAkK,GAAC,OAAyB,OAArBA,EAAEmjB,mBAElC,IAAM4B,EAjBkB,IAiBkBD,EAAQhmB,OAE5CkiB,EAA8B,IAAhB1M,EACd2M,EAAc3M,KApBI,IAkBcwQ,EAAQhmB,OAAShQ,KAAKk2B,KAAKF,EAAQhmB,OAlBjD,IAkB6E,GAGrG,OACE,yBAAKtN,UAAU,YACX4lB,EAIE,KAHF,4BAAQ5lB,UAAU,4BAA4B0C,QAAS,kBAAM,EAAKswB,gBAAgB70B,KAAlF,WAIF,2BAAO6B,UAAS,uBAA2B,UAAT7B,EAAmB,cAAgB,KACnE,+BACE,4BACGuoB,EAAOvkB,KAAI,SAAAqM,GAAC,OACX,4BAAKA,QAIX,+BACc,QAAXgF,EAAmB,CAAC,WAAY,UAAW,SAAS1W,SAASqB,GAAQ0G,KAAKwhB,YAAcxhB,KAAKwuB,sBAAwB,KACpHC,EAAQhmB,QAAWkG,EAOjB,CAAC,WAAY,UAAW,SAAS1W,SAASqB,GAAQ0G,KAAK2hB,WAAWroB,EAAM0G,KAAKmqB,SAASsE,EA7C1E,GA6CoGxQ,IAAgBje,KAAKuuB,sBAAsBj1B,EAAM0G,KAAKmqB,SAASsE,EA7CnK,GA6C6LxQ,IAN3M,4BACE,wBAAI6D,QAASD,EAAOpZ,OAAQtN,UAAU,eAAtC,iBASNuzB,EAiBE,KAhBF,yBAAKvzB,UAAU,mBACb,4BACE0C,QAAS,kBAAM,EAAK0sB,iBAAiB,SACrCnvB,SAAUuvB,EACVxvB,UAAU,mCAHZ,YAOA,4BACE0C,QAAS,kBAAM,EAAK0sB,iBAAiB,SACrCnvB,SAAUwvB,EACVzvB,UAAU,8BAHZ,SASJ,kBAAC,GAAD,CACEkxB,YAAatL,EACb5W,KAAM4W,EAAe,OAAS,MAC9B3Z,KAAM4lB,EACNT,YAAavsB,KAAKotB,iBAClB3L,YAAazhB,KAAKsuB,gC,GAp/Ba7zB,IAAM4D,WCH/C,SAAS0qB,GAAU9uB,GAUjB,OATgBA,EAAKqD,KAAI,SAAAygB,GAAO,MAAK,CACnCiL,SAAUhxB,IAAI+lB,EAAS,gBAAiB,IACxCkL,UAAWjxB,IAAI+lB,EAAS,iBAAkB,IAC1CmL,QAASxsB,KAAO1E,IAAI+lB,EAAS,WAAY,KAAKhhB,OAAO,cACrDosB,eAAgBnxB,IAAI+lB,EAAS,iBAAkB,IAC/CqL,YAAa1sB,KAAO1E,IAAI+lB,EAAS,eAAgB,KAAKhhB,OAAO,cAC7DssB,UAAWrxB,IAAI+lB,EAAS,mBAAoB,Q,IAgqBjCuL,G,YAzpBb,WAAY9uB,GAAQ,IAAD,8BACjB,4CAAMA,KAkDRonB,cAAgB,SAAAtoB,GACV,CAAC,cAAe,aAAc,UAAW,YAAYrB,SAASqB,GAChE,EAAKs1B,0BAEL,EAAKC,qBAvDU,EA2DnBC,kBAAoB,WAElB7Z,IACGjd,IAFS,UAGTic,MAAK,SAAAC,GACJ,EAAKnR,SAAS,CACZgsB,eAAgB7a,EAASja,KAAKsiB,OAAOyS,4BAGxC7a,OAAM,SAAAxc,GAAC,OAAID,YAAeC,OApEZ,EAuEnBs3B,oBAAsB,WACpB,EAAKlsB,SAAS,CACZmsB,uBAAuB,IAEzBja,IACGjd,IADH,iCAEGic,MAAK,SAAAC,GACJ,EAAKnR,SAAS,CACZosB,qBAAsBjb,EAASja,KAAKsiB,OAAOC,MAAK,SAACC,EAAGC,GAAJ,OAAYA,EAAEmN,aAAepN,EAAEoN,eAC/EqF,uBAAuB,OAG1B/a,OAAM,SAAAxc,GAAC,OAAID,YAAeC,OAnFZ,EAsFnB6S,SAAW,WAAO,IACRsf,EAAiB,EAAKtoB,MAAtBsoB,aACFtgB,EAAMsgB,EAAaxuB,GAAb,8BAAyCwuB,EAAaxuB,IAAO,mBACnE+e,EAASyP,EAAaxuB,GAAK,QAAU,OACrCslB,EAAgB,CACpBpjB,KAAMssB,EAAatsB,KACnBusB,YAAa7E,OAAO4E,EAAaC,aACjCF,YAAaC,EAAaD,aAGxBC,EAAaC,oBACRnJ,EAAcmJ,YAGvB9U,IACCoF,GAAQ7Q,EADT,eACmBoX,IAChB3M,MAAK,WACJ,EAAKlR,SAAS,CACZiY,KAAM,GACN8O,aAAc,OAEhB,EAAKmF,sBACL53B,aAAaH,QAAQ,mBAAmB,MAEzCid,OAAM,SAAAxc,GAAC,OAAID,YAAeC,OA9GZ,EAiHnBiP,SAAW,SAACtL,GACV2Z,IACGmG,OADH,8BACiC9f,IAC9B2Y,MAAK,WACJ,EAAKgb,sBACL53B,aAAaH,QAAQ,mBAAmB,MAEzCid,OAAM,SAAAxc,GAAC,OAAID,YAAeC,OAxHZ,EA0HnB4jB,kBAAoB,WAAO,IAAD,EASpB,EAAK/Z,MATe,IAEtBsoB,aACExuB,EAHoB,EAGpBA,GACAkC,EAJoB,EAIpBA,KACAusB,EALoB,EAKpBA,YACAF,EANoB,EAMpBA,YAEFsF,EARsB,EAQtBA,qBAEInF,GAAgB1uB,GAAM6zB,EAAqBlF,MAAK,SAAAtgB,GAAC,OAAIA,EAAEogB,cAAgB7E,OAAO6E,MACpF,OACE,4BACE,wBAAI5uB,UAAU,kBACZ,2BAAO7B,KAAK,WAAW6B,UAAU,cAAeic,eAAgByS,EAAanuB,SAAU,SAAA/D,GAAC,OAAI,EAAKoL,SAAS,CAAE+mB,aAAa,eAAM,EAAKtoB,MAAMsoB,aAAlB,CAAgCD,aAAclyB,EAAEiE,OAAOgC,gBAEjL,4BACE,2BACEtE,KAAK,OACLoC,SAAU,SAAA/D,GAAC,OAAI,EAAKoL,SAAS,CAAE+mB,aAAa,eAAM,EAAKtoB,MAAMsoB,aAAlB,CAAgCtsB,KAAM7F,EAAEiE,OAAOd,MAAO+uB,aAAclyB,EAAEiE,OAAOd,WACxHK,UAAU,eACV6S,aAAcxQ,KAGlB,4BACE,2BACElE,KAAK,SACLooB,QAAS,SAAA/pB,GAAC,OAAI,EAAKoL,SAAS,CAAE+mB,aAAa,eAAM,EAAKtoB,MAAMsoB,aAAlB,CAAgCC,YAAapyB,EAAEiE,OAAOd,WAChGovB,WAAY5uB,EACZH,UAAW6uB,EAAe,qBAAuB,eACjDhc,aAAc+b,KAGlB,wBAAI5uB,UAAU,kBACZ,4BAAQC,UAAWoC,GAAQwsB,EAAc7uB,UAAU,MAAM0C,QAAS,EAAK2M,UACrE,uBAAGrP,UAAU,0CAEd,IACD,4BAAQA,UAAU,MAAM0C,QAAS,kBAAM,EAAKkF,SAAS,CAAEiY,KAAM,GAAI8O,aAAc,SAC7E,uBAAG3uB,UAAU,8CAjKJ,EAwKnBi0B,iBAAmB,WAEjBna,IACGjd,IAFS,0BAGTic,MAAK,SAAAC,GACJ,EAAKnR,SAAS,CACZirB,kBAAmB9Z,EAASja,KAAKsiB,YAGpCpI,OAAM,SAAAxc,GAAC,OAAID,YAAeC,OAjLZ,EAoLnB03B,gBAAkB,WAEhBpa,IACGjd,IAFS,gCAGTic,MAAK,SAAAC,GACJ,EAAKnR,SAAS,CACZusB,eAAgBpb,EAASja,KAAKsiB,YAGjCpI,OAAM,SAAAxc,GAAC,OAAID,YAAeC,OA7LZ,EAgMnBi3B,wBAA0B,WAExB3Z,IACGjd,IAFS,uBAGTic,MAAK,SAAAC,GACJ,EAAKnR,SAAS,CACZwsB,cAAev3B,IAAIkc,EAAU,cAAe,IAAIsb,eAGnDrb,OAAM,SAAAxc,GAAC,OAAID,YAAeC,OAzMZ,EA4MnBk3B,kBAAoB,WAElB5Z,IACGjd,IAFS,sCAGTic,MAAK,SAAAC,GACJ,EAAKnR,SAAS,CACZ0sB,kBAAmBz3B,IAAIkc,EAAU,cAAe,IAAIsb,eAGvDrb,OAAM,SAAAxc,GAAC,OAAID,YAAeC,OArNZ,EAwNnB4xB,cAAgB,SAAAC,GACd,EAAKzmB,SAAS,CAAE0mB,WAAYD,KAzNX,EA4NnBkG,yBAA2B,SAAAlG,GAEzBvU,IACGjB,KAFS,UAIR,CACEgb,uBAAwBxF,IAG3BvV,MAAK,WACJ7a,YAAQ,mBAAoB,cAE7B+a,OAAM,SAAAxc,GAAC,OAAID,YAAeC,OAxOZ,EA2OnB81B,eAAiB,SAACtR,GACZA,IACF,EAAKpZ,SAAS,CACZyqB,uBAAuB,IAEzBvY,IACGjd,IADH,oCACoCmkB,EADpC,kBAEGlI,MAAK,SAAAvR,GACJ,EAAKK,SAAS,CACZ4sB,gBAAiBjtB,EAAIzI,KAAKsiB,OAC1BiR,uBAAuB,OAG1BrZ,OAAM,SAAAxc,GAAC,OAAID,YAAeC,QAxPd,EA4PnB4yB,iBAAmB,SAAC5b,GAAY,IAE5B6b,EACE,EAAKhpB,MADPgpB,SAEEC,EAAUD,EACC,SAAX7b,IACF8b,EAAuB,IAAbD,EAAiB,EAAIA,EAAW,GAE7B,SAAX7b,IACF8b,EAAUD,EAAW,GAEvB,EAAKznB,SACH,CACEynB,SAAUC,KAzQG,EA8QnBN,SAAW,SAACC,EAAOC,EAAWC,GAAnB,OAAmCF,EAAMze,OAAO2e,EAAc,GAAKD,EAAWC,EAAcD,IA5QrG,EAAK7oB,MAAQ,CACXioB,YAAY,EACZgG,kBAAmB,GACnBF,cAAe,GACfD,eAAgB,GAChBK,gBAAiB,GACjB3B,kBAAmB,GACnBe,gBAAgB,EAChBvB,uBAAuB,EACvB2B,qBAAsB,GACtBnU,KAAM,GACNwP,SAAU,EACVV,aAAc,KACdoF,uBAAuB,GAEzB,EAAKjT,eAAiBC,KAAS,EAAKuR,eAAe1tB,KAApB,gBAAgC,KAjB9C,E,iFAqBjBC,KAAK4uB,0BACL5uB,KAAK6uB,oBACL7uB,KAAKovB,mBACLpvB,KAAKqvB,kBACLrvB,KAAK8uB,oBACL9uB,KAAKivB,sBACL,IAAM7M,EAAOpiB,KAAKxF,MAAMzD,SAASqrB,KAC7BA,GACFxZ,SAASC,eAAeuZ,EAAKsI,QAAQ,IAAK,KAAK7G,gBAAe,K,2CAKhE,IAAM+L,EAAehnB,SAASinB,iBAAiB,sBAC/C,GAAID,EAAannB,OAEf,IADA,IAAIqnB,EAAe,CAAC,IAAK,IAAK,KACrB/pB,EAAI,EAAGA,EAAI6pB,EAAannB,OAAQ1C,IACvC6pB,EAAa7pB,GAAG2G,iBAAiB,SAAS,WACxC1M,KAAKlF,MAAQkF,KAAKlF,MAAM4vB,QAAQ,YAAa,OAG/CkF,EAAa7pB,GAAG2G,iBAAiB,WAAW,SAAS/U,GAC/Cm4B,EAAa73B,SAASN,EAAEiO,MAC1BjO,EAAEkO,sB,+BAoOF,IAAD,SAcH7F,KAAKwB,MAZPwZ,EAFK,EAELA,KACAwP,EAHK,EAGLA,SACAf,EAJK,EAILA,WACA8F,EALK,EAKLA,cACAR,EANK,EAMLA,eACAO,EAPK,EAOLA,eACAK,EARK,EAQLA,gBACA3B,EATK,EASLA,kBACAR,EAVK,EAULA,sBACAiC,EAXK,EAWLA,kBACAN,EAZK,EAYLA,qBACAD,EAbK,EAaLA,sBAKIa,EAAuB,CAAC,WAAY,SAAU,YAAa,iBAAkB,SAAU,UACvFpF,EAA2B,IAAbH,EACdI,GAAeuE,EAAqB1mB,QAAU0mB,EAAqB1mB,OAAS,GAC5E0Z,EAASniB,KAAKxF,MAAMzD,SAASqrB,KAEnC,OACE,yBAAKjnB,UAAU,MAAMG,GAAG,iBACtB,yBAAKH,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,aAAaqI,MAAO,CAAEoS,SAAU,OAAQ2E,cAAe,OAAQC,MAAO,SACnF,kBAAC,IAAD,CAAMlT,GAAG,YAAYyB,MAAM,QACzB,uBACE5N,UAAU,mBACVgX,cAAY,OACZ3O,MAAO,CAAE0P,MAAO,OAAQuH,YAAa,WAL3C,wBAUA,yBAAKtf,UAAU,wBACO,QAAnB7C,IAAUC,MAAiB,0BAC1B4C,UAAU,kCACVwa,KAAK,SACLra,GAAG,GACHmd,cAAY,WACZC,gBAAc,OACdC,gBAAc,QACd9a,QAAS,kBAAM,EAAK0rB,eAAc,KAPR,UAW5B,kBAAC7Y,EAAA,EAAD,CAAmBnG,YAAavK,KAAKupB,eACnC,yBACEpuB,UAAS,2DAAsDsuB,GAAc,QAC7E7Q,kBAAgB,mBAChBtd,GAAG,IAEH,kBAAC,WAAD,CACErB,KAAM8uB,GAAU,IAChB8B,SAAQ,kBAAanuB,OAASK,OAAO,0BAA7B,SAFV,cAMA,0BACEyG,MAAO,CAAEoS,SAAU,GAAI4E,MAAO,QAASC,YAAa,OAAQ/W,OAAQ,WACpE7F,QAAS,kBA3WX,SAAAitB,GACxB,IAAMD,EAAQ,mBAAenuB,OAASK,OAAO,0BAA/B,SAGRguB,EAAK,CAAEC,OAAQ,CAAE/wB,KADZgxB,SAAWC,cAAcJ,IACDK,WAAY,CAAC,SAC1CC,EAAcH,SAAWF,EAAI,CAAEM,SAAU,OAAQ/xB,KAAM,UACvDW,EAAO,IAAIkS,KAAK,CAACif,GAAc,CAAE9xB,KAJtB,oFAKjBgyB,UAAiBrxB,EAAM4wB,GAoWkBU,CAAWxC,GAAU,OAFtC,qBAYU,QAAnBzwB,IAAUC,MACT,yBAAK4C,UAAU,aACb,yBAAKA,UAAU,YACf,yBAAKqI,MAAO,CAAEoS,SAAU,OAAQ+E,aAAc,SAA9C,eACA,yBAAKxf,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,uEACA,4BACEA,UAAU,eACVO,SAAU,SAAA/D,GAAC,OAAI,EAAKoL,SAAS,CAAEyoB,cAAe7zB,EAAEiE,OAAOd,UAEvD,4BAAQA,MAAM,IAAd,UACA,4BAAQA,MAAM,KAAd,OACA,4BAAQA,MAAM,KAAd,WAOQ,QAAnBxC,IAAUC,MACT,yBAAK4C,UAAU,aACb,yBAAKA,UAAU,YACf,yBAAKqI,MAAO,CAAEoS,SAAU,OAAQ+E,aAAc,SAA9C,aACA,yBAAKxf,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,uEACA,4BACEA,UAAU,eACVO,SAAU,SAAA/D,GAAC,OAAI,EAAKoL,SAAS,CAAEyoB,cAAe7zB,EAAEiE,OAAOd,UAEvD,4BAAQA,MAAM,IAAd,UACA,4BAAQA,MAAM,KAAd,OACA,4BAAQA,MAAM,KAAd,WAOQ,QAAnBxC,IAAUC,MACT,yBAAK4C,UAAU,aACb,yBAAKA,UAAU,YACf,yBAAKA,UAAU,iBAAiBqI,MAAO,CAAEoS,SAAU,OAAQ+E,aAAc,SAAzE,mBAGA,0BAAMhM,OAAO,GAAG0L,OAAO,QACrB,yBAAKlf,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,kDAEF,4BAAQA,UAAU,gBAChB,4BAAQL,MAAM,IAAd,UACA,4BAAQA,MAAM,IAAd,OACA,4BAAQA,MAAM,IAAd,mBACA,4BAAQA,MAAM,IAAd,aAIN,yBAAKK,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,gDAEF,4BAAQA,UAAU,gBAChB,4BAAQL,MAAM,IAAd,UACA,4BAAQA,MAAM,IAAd,aACA,4BAAQA,MAAM,IAAd,cACA,4BAAQA,MAAM,IAAd,iBAIN,yBAAKK,UAAU,YACb,yBAAKA,UAAU,cACb,8BACE,kDAEF,4BAAQA,UAAU,gBAChB,4BAAQL,MAAM,IAAd,UACA,4BAAQA,MAAM,IAAd,iBACA,4BAAQA,MAAM,IAAd,iBACA,4BAAQA,MAAM,IAAd,iBAIN,yBAAKK,UAAU,aACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,YACb,yBAAKA,UAAU,wBAAwBqI,MAAO,CAAE+N,UAAW,SACzD,4BAAQjY,KAAK,SAAS6B,UAAU,0BAAhC,eASZ,kBAAC,IAAMsgB,SAAP,KACE,yBAAKtgB,UAAU,YACf,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OACb,wBAAIA,UAAU,iBAAd,kBACA,yBAAKA,UAAU,oBAAoByK,IAAKmpB,GACtC,2BAAOjG,QAAQ,QACb,2BACExvB,KAAK,WACL8d,eAAgB2X,EAChBzzB,GAAG,OACHI,SAAU,SAAA/D,GAAC,OAAI,EAAK+3B,yBAAyB/3B,EAAEiE,OAAOgC,YAExD,8BACE,qCAMV,yBAAKzC,UAAU,YACf,kBAAC+iB,GAAA,EAAD,CAAW/iB,UAAU,YAAYgjB,iBAA6B,sBAAXgE,GAAkC,IAAK7mB,GAAG,oBAC3F,kBAAC4iB,GAAA,EAAUG,OAAX,CACEljB,UAAU,iDACVmjB,GAAIpV,KAAKhB,OACTqW,SAAS,KAET,wBAAIpjB,UAAU,QAAd,4BAEF,kBAAC+iB,GAAA,EAAUW,SAAX,CAAoB1jB,UAAU,OAAOojB,SAAS,KAC5C,yBAAKpjB,UAAU,YACb,kBAAC,GAAD,CACE7B,KAAK,UACLW,KAAMs1B,EACN1N,OArMA,CAAC,SAAU,OAAQ,OAAQ,iBAAkB,oBAAqB,SAAU,UAsM5EwL,YAAaiC,EACb1N,cAAe5hB,KAAK4hB,cACpB2L,kBAAmBkC,IAErB,yBAAKt0B,UAAU,0BACf,4BAAI,yDACJ,kBAAC,GAAD,CACE7B,KAAK,aACLW,KAAMs1B,EACN1N,OAAM,CAAG,UAAH,mBAAgBkO,EAAqBpkB,MAAM,EAAG,KACpD0hB,YAAaiC,EACb1N,cAAe5hB,KAAK4hB,cACpB2L,kBAAmBkC,OAK3B,kBAACvR,GAAA,EAAD,CAAW/iB,UAAU,YAAYgjB,iBAA6B,uBAAXgE,GAAmC,IAAK7mB,GAAG,qBAC5F,kBAAC4iB,GAAA,EAAUG,OAAX,CACEljB,UAAU,iDACVmjB,GAAIpV,KAAKhB,OACTqW,SAAS,KAET,wBAAIpjB,UAAU,QAAd,6BAEF,kBAAC+iB,GAAA,EAAUW,SAAX,CAAoB1jB,UAAU,OAAOojB,SAAS,KAC5C,yBAAKpjB,UAAU,YACb,kBAAC,GAAD,CACE7B,KAAK,WACLW,KAAMs1B,EACN1N,OArOC,CAAC,WAAY,OAAQ,OAAQ,iBAAkB,oBAAqB,SAAU,UAsO/EyL,aAAcqC,EACd/N,cAAe5hB,KAAK4hB,cACpB2L,kBAAmBkC,EACnBhC,eAAgBztB,KAAKytB,eACrBD,sBAAuBA,EACvBQ,kBAAmBA,IAErB,yBAAK7yB,UAAU,0BACf,4BAAI,yDACJ,kBAAC,GAAD,CACE7B,KAAK,cACLW,KAAMs1B,EACN1N,OAAQkO,EACRzC,aAAcqC,EACd/N,cAAe5hB,KAAK4hB,cACpB2L,kBAAmBkC,EACnBhC,eAAgBztB,KAAKytB,eACrBD,sBAAuBA,EACvBQ,kBAAmBA,OAK3B,kBAAC9P,GAAA,EAAD,CAAW/iB,UAAU,YAAYgjB,iBAA6B,oBAAXgE,GAAgC,IAAK7mB,GAAG,kBACzF,kBAAC4iB,GAAA,EAAUG,OAAX,CACEljB,UAAU,iDACVmjB,GAAIpV,KAAKhB,OACTqW,SAAS,KAET,wBAAIpjB,UAAU,QAAd,cAEF,kBAAC+iB,GAAA,EAAUW,SAAX,CAAoB1jB,UAAU,OAAOojB,SAAS,KAC5C,yBAAKpjB,UAAU,YACb,kBAAC,GAAD,CACE7B,KAAK,QACLW,KAAMw1B,EACN5N,OAxQG,CAAC,KAAM,OAAQ,UAAW,OAAQ,UAyQrCD,cAAe5hB,KAAK4hB,oBAM9B,kBAAC1D,GAAA,EAAD,CAAW/iB,UAAU,YAAYgjB,iBAA6B,sBAAXgE,GAAkC,IAAK7mB,GAAG,oBAC3F,kBAAC4iB,GAAA,EAAUG,OAAX,CACEljB,UAAU,iDACVmjB,GAAIpV,KAAKhB,OACTqW,SAAS,KAET,wBAAIpjB,UAAU,QAAd,sBAEF,kBAAC+iB,GAAA,EAAUW,SAAX,CAAoB1jB,UAAU,OAAOojB,SAAS,KAC5C,yBAAKpjB,UAAU,aACb,kBAACuV,EAAA,EAAD,CAAmBnG,YAAa,kBAAM,EAAKxH,SAAS,CAAEiY,KAAM,GAAI8O,aAAc,SAC5E,yBAAK3uB,UAAU,gBAED,QAAT6f,EACC,4BAAQ7f,UAAU,4BAA4B0C,QAAS,SAAAlG,GACrDA,EAAEsf,kBACF,EAAKlU,SAAS,CAAE+mB,aAAc,CAAEtsB,KAAM,GAAIusB,YAAa,IAAM/O,KAAM,UAFrE,WAGsB,KAE1B,yBAAK7f,UAAU,mBACb,2BAAOA,UAAU,oBACf,4BACE,wBAAIA,UAAU,0BAAd,WACA,oCACA,2CACA,wBAAIA,UAAU,kBAAd,WAGS,QAAT6f,EAAiBhb,KAAKub,oBAAsB,KAG5Cvb,KAAKmqB,SAASgF,EAAsB,GAAI3E,GAAUltB,KAAI,SAACqM,EAAGD,GACxD,OAAIsR,IAAStR,EACJ,EAAK6R,oBAGV,wBAAI1d,QAAS,kBAAM,EAAKkF,SAAS,CAAEiY,KAAMtR,EAAOogB,aAAcngB,KAAO/D,IAAK+D,EAAEnM,MAC1E,wBAAIrC,UAAU,kBACZ,2BAAO7B,KAAK,WAAW6B,UAAU,cAAc0C,QAAS,SAAAlG,GAAC,OAAIA,EAAEsf,mBAAmBzZ,KAAMmM,EAAErO,GAAI8b,eAAgBzN,EAAEkgB,YAAanuB,SAAU,SAAA/D,GAAOA,EAAEsf,kBAAmB,EAAKlU,SAAS,CAAE+mB,aAAa,eAAMngB,EAAP,CAAUkgB,aAAclyB,EAAEiE,OAAOgC,WAAa,EAAK4M,cAEpP,4BACGb,EAAEnM,MAEL,4BACGmM,EAAEogB,aAEL,wBAAI5uB,UAAU,kBACZ,4BACEA,UAAU,MACV0C,QAAS,SAAAlG,GACPA,EAAEsf,kBAEF/I,aAAuB,CACrBhQ,QAAS,UACTmQ,IAAK,iDACL5G,OAAQ,WACN0G,eACA,EAAKvH,SAAS+C,EAAErO,SAKtB,uBAAGH,UAAU,mDAU3B+zB,EAAwB,yBAAK/zB,UAAU,UAAf,cAA2C,MAGvE,yBAAKA,UAAU,mBACb,4BACE0C,QAAS,kBAAM,EAAK0sB,iBAAiB,SACrCpvB,UAAU,kCACVC,SAAUuvB,GAHZ,YAOA,4BACE9sB,QAAS,kBAAM,EAAK0sB,iBAAiB,SACrCpvB,UAAU,6BACVC,SAAUwvB,GAHZ,uB,GApoBEnwB,IAAM4D,WCvC9B+T,GAAUC,gBAAK,kBAAM,6EACrBC,GAAI,SAACC,GAAD,OAAO,kBAAC,WAAD,CAAUC,SAAS,IAAID,EAAEE,QAE3BC,GADF,SAACH,GAAD,OAAO,kBAAC,GAAD,CAAGE,MAAO,kBAAC,GAAYF,MC4B5B,SAASyd,GAAWx1B,GASjC,OARAC,IAAMuW,WAAU,WACd,IAAM/W,EAAOnC,KAAKmB,MAAM9B,IAAagC,eACH,IAA9BnB,IAAIiC,EAAM,YAAa,KACzBO,EAAMkf,QAAQzN,KAAK,aAEpB,IAID,yBAAK9Q,UAAS,gCAAmCG,GAAG,aAClD,kBAAC,GAAWd,GACZ,yBAAKW,UAAU,gBAAgBG,GAAG,uBAChC,kBAAC,GAAD,MAEA,yBAAKH,UAAU,yBAEb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO80B,OAAK,EAAChE,KAAK,IAAIC,UAAWtd,KACjC,kBAAC,IAAD,CAAOqhB,OAAK,EAAChE,KAAK,aAAaC,UAAWtd,KAC1C,kBAAC,IAAD,CAAOqd,KAAK,YAAYC,UAAWld,KACnC,kBAAC,IAAD,CAAOid,KAAK,WAAWC,UAAWgE,KAClC,kBAAC,IAAD,CAAOjE,KAAK,eAAeC,UAAWjd,KACrC,kBAAC,IAAD,CAAOghB,OAAK,EAAChE,KAAK,aAAaC,UAAWiE,KAC3C,kBAAC,IAAD,CAAOlE,KAAK,iBAAiBC,UAAWiE,KACvC,kBAAC,IAAD,CAAOF,OAAK,EAAChE,KAAK,WAAWC,UAAWkE,KACzC,kBAAC,IAAD,CAAOnE,KAAK,eAAeC,UAAWkE,KACtC,kBAAC,IAAD,CAAOH,OAAK,EAAChE,KAAK,YAAYC,UAAWhd,KACzC,kBAAC,IAAD,CAAO+gB,OAAK,EAAChE,KAAK,WAAWC,UAAWmE,KACxC,kBAAC,IAAD,CAAOJ,OAAK,EAAChE,KAAK,YAAYC,UAAWoE,KACzC,kBAAC,IAAD,CAAOrE,KAAK,WAAWC,UAAWqE,KACd,QAAnBj4B,IAAUC,MAAkB,kBAAC,IAAD,CAAO0zB,KAAK,mBAAmBC,UAAWsE,KACvE,kBAAC,IAAD,CAAOvE,KAAK,oBAAoBC,UAAWuE,KAC3C,kBAAC,IAAD,CAAOxE,KAAK,oBAAoBC,UAAW1X,KAC3C,kBAAC,IAAD,CAAOyX,KAAK,qBAAqBC,UAAWwE,KAC5C,kBAAC,IAAD,CAAOzE,KAAK,wBAAwBC,UAAWyE,KAC/C,kBAAC,IAAD,CAAO1E,KAAK,2BAA2BC,UAAW9R,KAClD,kBAAC,IAAD,CAAO6R,KAAK,iCAAiCC,UAAW0E,KACxD,kBAAC,IAAD,CAAO3E,KAAK,iCAAiCC,UAAW2E,KACxD,kBAAC,IAAD,CAAO5E,KAAK,6BAA6BC,UAAW4E,KACpD,kBAAC,IAAD,CAAO7E,KAAK,iBAAiBC,UAAWjyB,KACxC,kBAAC,IAAD,CAAOgyB,KAAK,KAAKC,UAAW,kBAAM,iD,uBCxDxC6E,GAAiB,SAAC,GAAuC,IAA1B1yB,EAAyB,EAApC6tB,UAAyB8E,EAAW,6BAE5D,OADAp5B,QAAQC,IAAI,SAAUm5B,GAEtB,kBAAC,IAAD,eACEC,OAAQ,SAAAz2B,GAAK,OACXrD,IAAaa,MACX,kBAACqG,EAAc7D,GAEf,kBAAC,IAAD,CAAU8M,GAAI,CAAEtQ,SAAU,SAAUwK,MAAO,CAAE6F,KAAM7M,EAAMzD,eAGzDi6B,KAIJE,IAAmB,EACnBC,IAAkB,EAChBC,G,YACJ,WAAY52B,GAAQ,IAAD,EAQjB,IAAK,IAAIuL,KARQ,qBACjB,4CAAMvL,KACD62B,OAAS,CAAC,OAAQ,YAAa,YAAa,QAAS,SAAU,YACpE,EAAKC,KAAO,EAAKA,KAAKvxB,KAAV,gBACZ,EAAKlJ,OAAS,EAAKA,OAAOkJ,KAAZ,gBACd,EAAKwxB,aAAe,EAAKA,aAAaxxB,KAAlB,gBACpB,EAAKyxB,cAAgB,EAAKA,cAAczxB,KAAnB,gBACrBjJ,OAAO4V,iBAAiB,UAAW,EAAK8kB,eAAe,GACzC,EAAKH,OACjBv6B,OAAO4V,iBAAiB,EAAK2kB,OAAOtrB,GAAI,EAAKwrB,cAT9B,S,iFAcjBp6B,IAAaa,OAASgI,KAAKzI,e,oCAGfoE,GASZ,GARkB,cAAdA,EAAMiK,KACR9O,OAAOC,SAAS06B,QAAO,GAEP,cAAd91B,EAAMiK,MACR9O,OAAOG,eAAeC,QAAQ,SAAUJ,OAAOC,SAAS2jB,MACxD5jB,OAAOG,eAAeC,QAAQ,UAAWyE,EAAM+1B,UAClB,WAA7B56B,OAAOC,SAASC,UAAyBF,OAAOU,KAAK,SAAU,UAE/C,aAAdmE,EAAMiK,IACR,GAAIjK,EAAM+1B,WAAa56B,OAAOG,eAAeiB,QAAQ,WAAY,CAC/D,IAAMsR,EAAM1S,OAAOG,eAAeiB,QAAQ,UACtCsR,GACF1S,OAAOU,KAAKgS,EAAK,cAGnB1S,OAAO2a,U,mJAMPzR,KAAK2xB,aAAaC,aAAa5xB,KAAK2xB,aACpC3xB,KAAK6xB,eAAeD,aAAa5xB,KAAK6xB,mB,iJAI1C,GAAK16B,IAAa26B,eAAlB,CAGA,IAAMC,EAAwC,SAAnBz5B,IAAUC,KAAkB,IAAiB,KAClEy5B,EAAW76B,IAAa26B,eAAiBr5B,KAAKC,OAAM,IAAIC,MAAOC,WAAam5B,EAElF/xB,KAAK2xB,YAAcp6B,WAAWyI,KAAKsxB,KAAMU,GACzC,IAAMC,EAAa96B,IAAa26B,eAAiBr5B,KAAKC,OAAM,IAAIC,MAAOC,WAEvEoH,KAAK6xB,cAAgBt6B,WAAWyI,KAAKnJ,OAAQo7B,Q,qCAG/B,IAAD,OACb,GAAIf,GAAkB,CAEpB,GADAA,IAAmB,EACfC,GACF,OAEFA,IAAkB,EAClBlc,IACGjd,IAAI,SACJic,MAAK,SAAAC,GACJid,IAAkB,EAClBh6B,IAAa2c,IAAII,EAASja,KAAKmV,MAAO8E,EAASja,KAAK,eACpD,EAAK23B,eACL,EAAKr6B,gBACJ4c,OAAM,SAAAxc,GACPd,sBAGJmJ,KAAK4xB,eACL5xB,KAAKzI,e,6BAKP25B,IAAmB,I,+BAKhBtoB,SAASspB,YACVr7B,gB,6CAKFmJ,KAAKmyB,Y,gCAML,IAAK,IAAIpsB,KAFT/F,KAAK4xB,eAES5xB,KAAKqxB,OACjBv6B,OAAO6V,oBAAoB3M,KAAKqxB,OAAOtrB,GAAI/F,KAAKuxB,gB,+BAKlD,OACE,6BACE,kBAAC,EAAD,MACA,kBAACa,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOrC,OAAK,EAAChE,KAAK,SAASC,UAAWxd,IACrC,kBAAC,IAAD,CAAOuhB,OAAK,EAAChE,KAAK,UAAUC,UAAWqG,KACxC,kBAAC,IAAD,CAAOtC,OAAK,EAAChE,KAAK,mBAAmBC,UAAWsG,KAChD,kBAAC,IAAD,CAAOvC,OAAK,EAAChE,KAAK,kBAAkBC,UAAWuG,KAC/C,kBAAC,GAAD,CAAgBxG,KAAK,IAAIC,UAAW8D,Y,GApH7B3xB,aAgIJkD,gBAJS,iBAAO,KAEJ,GAEZA,CAA6C6vB,I,+DC/IzC,SAAnB94B,IAAUC,OAAoBX,QAAQC,IAAMD,QAAQ05B,KAAO15B,QAAQkC,MAAQ,cAM3EN,IAAMk5B,UAAU,CACd74B,UAAW,IACX84B,WAAW,IAGbC,IAAS3B,OACP,kBAAC,IAAD,CAAUvyB,MAAOA,KACf,kBAAC,GAAD,OAEFkK,SAASC,eAAe,U,mBClC1BgqB,EAAOC,QAAU,IAA0B,kC,gCCA3C,oEAAO,IAAMzd,EAAgB,2DAChB7O,EAAa,+D,gCCD1B,gOAEO,SAASusB,IAAmD,IAAhCC,EAA+B,uDAAzB,GAAIC,IAAqB,yDAChE,IAAKD,GAAc,GAAPA,EACV,MAAO,GAET,IAAIE,EAAaF,EAAM,GAAK,EACxBzW,EAAS2W,EAAahO,OAAO8N,GAAKxN,QAAQ,GAAK/sB,KAAKC,MAAMs6B,GAM9D,OALIC,IACF1W,EAAS9jB,KAAKC,MAAM6jB,IAEtBA,EAAS2I,OAAOiO,MAAM5W,GAAU,EAAIA,EAE7B2I,OAAO3I,GAAQ6W,eAAe,MAGhC,SAASpO,IAAmB,IAAXgO,EAAU,uDAAJ,GAC5B,OAAQA,GAAe,IAARA,EAAiB,8BAAOlQ,EAAerqB,KAAKC,MAAMs6B,IAAM,GAAM,IAAlD,GAItB,SAASK,EAAWL,GACzB,OAAOv6B,KAAKq1B,IAAIkF,GAAO,MACnBD,EAAmBt6B,KAAKq1B,IAAIr1B,KAAK66B,KAAKN,IAAQv6B,KAAKq1B,IAAIkF,GAAO,OAAU,IACxED,EAAmBt6B,KAAKq1B,IAAIr1B,KAAK66B,KAAKN,GAAOv6B,KAAKq1B,IAAIkF,KAGrD,SAASO,EAAWP,GACzB,OAAOv6B,KAAKq1B,IAAIkF,GAAO,OACnBD,GAAoBt6B,KAAK66B,KAAKN,IAAQv6B,KAAKq1B,IAAIkF,GAAO,MAAUxN,QAAQ,IAAI,GAAS,IACrFuN,EAAmBt6B,KAAK66B,KAAKN,GAAOv6B,KAAKq1B,IAAIkF,IAAM,GAGlD,SAASQ,EAAWR,GACzB,OAAOv6B,KAAKq1B,IAAIkF,GAAO,UACnBD,GAAoBt6B,KAAK66B,KAAKN,IAAQv6B,KAAKq1B,IAAIkF,GAAO,MAAaxN,QAAQ,IAAI,GAAS,IACxFuN,EAAmBt6B,KAAK66B,KAAKN,GAAOv6B,KAAKq1B,IAAIkF,IAAM,GAGlD,SAASlQ,EAAekQ,GAA6C,IAAxCS,IAAuC,yDAAhBC,IAAgB,yDACrEh7B,EAAQwsB,OAAO8N,GACnB,GAAI9N,OAAOiO,MAAMz6B,KAAYs6B,GAAe,IAARA,GAAsB,OAARA,EAChD,MAAO,GAET,IAAMW,EAAaj7B,EAAQ,EAC3BA,EAAQwsB,OAAOzsB,KAAKq1B,IAAIkF,IAcxB,IAAMzW,IAXF7jB,EAFAg7B,EACEh7B,EAAQ,UACF86B,EAAW96B,GACVA,EAAQ,OACT66B,EAAW76B,GACVA,EAAQ,MACT26B,EAAW36B,GAEXq6B,EAAmBt6B,KAAKC,MAAMA,IAGhCq6B,EAAmBr6B,KAEK,IAAVA,IAAe+6B,EAAkBE,EAAU,YAAQj7B,GAAR,WAAsBA,GAAoBA,EAC7G,OAAO6jB,EAGF,SAASxC,EAAmBvc,EAAMyN,GAClCA,IAAKA,EAAMnU,OAAOC,SAAS2jB,MAChCld,EAAOA,EAAKktB,QAAQ,UAAW,QAC/B,IACEkJ,EADU,IAAIC,OAAO,OAASr2B,EAAO,qBACrBs2B,KAAK7oB,GACvB,OAAK2oB,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAGlJ,QAAQ,MAAO,MAD5B,GADH,KAKhB,IAAMsJ,EAAgB,SAAAjQ,GAC3B,IAAMkQ,EAAalQ,EAAS,EACtBmQ,EAAcz7B,KAAKC,MAAMD,KAAKq1B,IAAI/J,IACxC,OAAIkQ,EACI,KAAN,OAAYC,EAAYzuB,WAAWilB,QAAQ,wBAAyB,MAEhE,IAAN,OAAWwJ,EAAYzuB,WAAWilB,QAAQ,wBAAyB,OAGxDphB,EAAmB,SAAC0pB,GAC/B,OAAIA,EAEM9N,OAAOiP,UAAUjP,OAAO8N,IAG3BA,EAFE9N,OAAOA,OAAO8N,GAAKxN,QAAQ,IAF3B,I,+BCpFX,4KAQM4O,EAAWvf,IAAQC,QAInBuf,EAAe,SAAAppB,GAAG,OACtBA,EACG3C,MAAM,KACN7I,QAAO,SAAAlC,GAAC,OAAIA,KACZD,KAAI,SAAAC,GAAC,OAAIA,EAAE+K,MAAM,QACjBhL,KAAI,SAAAg3B,GAAK,MAAK,CAAC,YAAa,WAAWr8B,SAASq8B,EAAM,IAAM,CAACA,EAAM,GAAI3yB,YAAW2yB,EAAM,KAAOA,KAC/Fh3B,KAAI,SAAAC,GAAC,OAAIA,EAAEg3B,KAAK,QAChBA,KAAK,MAEGC,EAAwB,WACnC,IACQrlB,EADMxQ,IAAYC,WAClBuQ,KACR,OAAOnX,IAAImX,EAAM,QAAS,KAd1B,yKAiBIslB,EAA2B,SAAAC,GAG/B,OAFAA,EAAQC,cAAgBH,IACxBE,EAAQ,gBAAkB,mBACnBA,GAGIzf,EAAWL,IAAMwR,OAAO,CACnCwO,QAASR,EACTS,iBAAkB,CAChB,SAAC56B,EAAMy6B,GAEL,OADAA,EAAUD,EAAyBC,GAC5B58B,KAAKC,UAAUkC,OAM5Bgb,EAAS6f,aAAaC,QAAQC,KAC5B,SAAA/vB,GASE,OARAA,EAAOgG,IAAMopB,EAAapvB,EAAOgG,KAC5BjT,IAAIiN,EAAQ,OAAQ,MACvBA,EAAOkK,KAAO,CACZ4F,SAAU5d,IAAaa,MACvByc,SAAUhc,KAAKyhB,SAASzU,SAAS,MAGrC7N,QAAQC,IAAI,WAAYoN,GACjBA,KAET,SAAAnL,GAEE,OAAOm7B,QAAQC,OAAOp7B,MAI1Bmb,EAAS6f,aAAa5gB,SAAS8gB,KAC7B,SAAA9gB,GACE,OAAOA,KAET,SAAApa,GACE,OAAOm7B,QAAQC,OAAOp7B,MAsBnB,IAAMuiB,EAAoBzH,IAAMwR,OAAO,CAC5CwO,QAASR,EACTS,iBAAkB,CAChB,SAAC56B,EAAMy6B,GAEL,OADAA,EAAUD,EAAyBC,GAC5B58B,KAAKC,UAAUkC,OAM5BoiB,EAAkByY,aAAaC,QAAQC,KACrC,SAAA/vB,GASE,OARAA,EAAOgG,IAAMopB,EAAapvB,EAAOgG,KAC5BjT,IAAIiN,EAAQ,OAAQ,MACvBA,EAAOkK,KAAO,CACZ4F,SAAU5d,IAAaa,MACvByc,SAAUhc,KAAKyhB,SAASzU,SAAS,MAGrC7N,QAAQC,IAAI,WAAYoN,GACjBA,KAET,SAAAnL,GAEE,OAAOm7B,QAAQC,OAAOp7B,MAI1B,IAAIq3B,EAAkB,GAWtB9U,EAAkByY,aAAa5gB,SAAS8gB,KACtC,SAAA9gB,GACE,OAAOA,KAET,SAAApa,GAAU,IAKFq7B,EADFr7B,EAFFmL,OAIF,IACqB,QAAnB3M,IAAUC,MAAkBX,QAAQC,IAAI,4BAA6BC,KAAKC,UAAUo9B,IACpF,MAAOx9B,GACPC,QAAQC,IAAI,wBAAyBF,GAEvC,OAAKK,IAAI8B,EAAO,kBAAmB,IAG1Bm7B,QAAQC,OAAOp7B,GA5BP,SAAAq7B,GACnB,OAAIhE,IAAoBgE,EAAgBlqB,IAC/B,MAETkmB,EAAkBgE,EAAgBlqB,IAC3B,IAAIgqB,SAAQ,SAACG,EAASF,GAC3BE,EAAQ/Y,EAAkB8Y,QAoBjBE,CAAaF,MAuBnB,IAAMphB,EAAoBa,IAAMwR,OAAO,CAC5CwO,QAASR,EACTS,iBAAkB,CAChB,SAAC56B,EAAMy6B,GAGL,OAFAA,EAAQC,cAAgBH,IACxBE,EAAQ,gBAAkB,sBACnBz6B,MAwBb8Z,EAAkB+gB,aAAaC,QAAQC,KACrC,SAAA/vB,GASE,OARAA,EAAOgG,IAAMopB,EAAapvB,EAAOgG,KAC5BjT,IAAIiN,EAAQ,OAAQ,MACvBA,EAAOkK,KAAO,CACZ4F,SAAU5d,IAAaa,MACvByc,SAAUhc,KAAKyhB,SAASzU,SAAS,MAGrC7N,QAAQC,IAAI,WAAYoN,GACjBA,KAET,SAAAnL,GAEE,OAAOm7B,QAAQC,OAAOp7B,O,sIC9MpB+iB,G,mBACF,WAAYriB,GAAQ,IAAD,8BACf,4CAAMA,KAqCVkB,SAAW,SAAA/D,GACP,IAAM29B,EAAY39B,EAAE49B,cAAcz6B,MAClC,EAAKN,MAAM4hB,OAAOkZ,GAElB,EAAKvyB,SAAS,CACVyyB,iBAAkB,EAClBC,iBAAiB,EACjBC,MAAM,EACNC,QAAQ,EACRL,UAAW39B,EAAE49B,cAAcz6B,SA/ChB,EAmDnB+C,QAAU,SAAClG,EAAG6M,EAAMgxB,GAChB,EAAKzyB,SAAS,CACVyyB,mBACAC,iBAAiB,EACjBE,QAAQ,EACRD,MAAM,EACNJ,UAAW,KAEf,EAAK96B,MAAM4iB,YAAY5Y,IA3DR,EA8DnBoC,SAAW,WACP,EAAK7D,SAAS,CACVyyB,iBAAkB,EAClBC,iBAAiB,EACjBE,QAAQ,EACRD,MAAM,EACNJ,UAAW,KAEf,EAAK96B,MAAM4iB,YAAY,OAtER,EAyEnBtW,UAAY,SAAAnP,GAAM,IAAD,EACqC,EAAK6J,MAA/Cg0B,EADK,EACLA,iBAAkBI,EADb,EACaA,oBADb,EAKT,EAAKp7B,MAFLwT,EAHS,EAGTA,aACAoP,EAJS,EAITA,YAGc,KAAdzlB,EAAEk+B,SACFl+B,EAAEkO,iBACF,EAAK9C,SAAS,CACVuyB,UAAW,GACXE,iBAAkBA,GAAoB,EACtCC,iBAAiB,IAErBrY,EAAYwY,EAAoBJ,GAAoB,KAGjC,KAAd79B,EAAEk+B,QACkB,IAArBL,EACA,EAAKzyB,SAAS,CAAEyyB,qBAAoB,kBAAM,EAAKM,WAAWN,MAE1D,EAAKzyB,SAAS,CAAEyyB,iBAAkBA,EAAmB,IAAK,kBAAM,EAAKM,WAAWN,EAAiB,MAIlF,KAAd79B,EAAEk+B,QACHL,EAAmB,IAAOI,EAAoBntB,QAAyC,IAA/BmtB,EAAoBntB,OAC5E,EAAK1F,SAAS,CAAEyyB,qBAAoB,kBAAM,EAAKM,WAAWN,MAE1D,EAAKzyB,SAAS,CAAEyyB,iBAAkBA,EAAmB,IAAK,kBAAM,EAAKM,WAAWN,EAAiB,MAIlF,IAAd79B,EAAEk+B,SACP,EAAK9yB,SAAS,CACVuyB,UAAWtnB,IACZ,kBAAMoP,EAAY,UA7GV,EAiHnB0Y,WAAa,SAACN,GACV,GAAI5sB,SAASmtB,cAAc,sBAAuB,CAC9C,IAAMC,EAAKptB,SAASmtB,cAAc,gBAC9BE,EAAWrtB,SAASmtB,cAAc,sBAAsBG,aACxDC,EAAYH,EAAGG,UACfC,EAAWD,EAAYH,EAAGE,aAC1BG,EAAWJ,EAAWT,GACtBa,EAAWF,GAAcE,EAAWJ,EAAYG,KAChDJ,EAAGG,UAAYE,KAtHvB,EAAK70B,MAAQ,CAETg0B,iBAAkB,EAElBI,oBAAqB,GAErBH,iBAAiB,EAEjBH,UAAW,GACXI,MAAM,EACNC,QAAQ,EACRW,gBAAgB,GAdL,E,iFAkBE,IAAD,EACiBt2B,KAAKxF,MAA9BwT,EADQ,EACRA,aAAcoO,EADN,EACMA,OACtBpc,KAAK+C,SAAS,CACV6yB,oBAAqB51B,KAAKxF,MAAMsiB,YAAYrU,OAASzI,KAAKxF,MAAMsiB,YAAc,KAE9E9O,IACAoO,EAAOpO,GACPhO,KAAK+C,SAAS,CAAEuzB,gBAAgB,EAAMhB,UAAWtnB,O,gDAI/BhL,GAAY,IAAD,OAC3B4yB,EAAsB5yB,EAAU8Z,YAAYrU,OAASzF,EAAU8Z,YAAc,GAC/E9c,KAAKwB,MAAM80B,gBAAkBV,EAAoB,GACjD51B,KAAK+C,SAAS,CAAEuzB,gBAAgB,EAAOV,oBAAqB,KAAM,kBAAM,EAAKp7B,MAAM4iB,YAAYwY,EAAoB,OAEnH51B,KAAK+C,SAAS,CAAE6yB,0B,+BA4Fd,IAuBFW,EAvBC,OAED76B,EAmBAsE,KAnBAtE,SACAmC,EAkBAmC,KAlBAnC,QACAiJ,EAiBA9G,KAjBA8G,UAJC,EAqBD9G,KAhBAxF,MACIygB,EANH,EAMGA,UACAjgB,EAPH,EAOGA,YACAgT,EARH,EAQGA,aACAkP,EATH,EASGA,eACAC,EAVH,EAUGA,sBAVH,EAqBDnd,KATAwB,MACIg0B,EAbH,EAaGA,iBACAI,EAdH,EAcGA,oBACAU,EAfH,EAeGA,eACAb,EAhBH,EAgBGA,gBACAH,EAjBH,EAiBGA,UAEAI,GAnBH,EAkBGC,OAlBH,EAmBGD,MAkCR,OA7BIza,IAAcqb,EACdC,EACI,yBAAKp7B,UAAU,kBACX,4CAGDs6B,GAAmBH,IACtBM,EAAoBntB,OACpB8tB,EACI,wBAAIp7B,UAAW0L,IAAG,cAAe,CAAC6uB,KAAM11B,KAAKwB,MAAMk0B,QAC9CE,EAAoBn2B,QAAO,SAAAlC,GAAC,OAAIA,EAAEC,QAAMF,KAAI,SAACk5B,EAAY9sB,GACtD,IAAMvO,EAAY0L,IAAG,CAAE,oBAAqB6C,IAAU8rB,GAAmB,CAACgB,EAAWl9B,OACrF,OACI,wBAAI6B,UAAWA,EAAWyK,IAAK4wB,EAAWh5B,KAAKkM,EAAO7L,QAAS,SAAClG,GAAD,OAAOkG,EAAQlG,EAAG6+B,EAAY9sB,KACxFzQ,IAAMu9B,EAAWh5B,YAMhC83B,GAAcra,GAAc2a,EAAoBntB,SACtD8tB,EACI,yBAAKp7B,UAAU,kBACX,0CAOZ,kBAAC,IAAD,CAAmBoP,YAAa,kBAAM,EAAKxH,SAAS,CAAE0yB,iBAAiB,EAAOC,MAAM,MAChF,yBAAKp6B,GAAG,sBAAsBH,UAAW0L,IAAG,6BAA8BsW,IACtE,2BACI7jB,KAAK,OACLoC,SAAUA,EACVyC,QAAS,kBAAM,EAAK4E,SAAS,CAAE2yB,MAAM,EAAOD,iBAAiB,KAC7D3uB,UAAWA,EAEXhM,MAAOkT,GAAgBsnB,EAEvBt6B,YAAaA,GAAe,GAC5BG,UAAW0L,IAAG,kCAAD,WAAwC6uB,GAAQJ,EAAY,qBAAuB,IAAKpY,KAGpGlP,IAAiBsoB,EAElB,uBAAGz4B,QAASmC,KAAK4G,SAAUzL,UAAU,qBAAqBgX,cAAY,SAErE,uBAAGhX,UAAU,sBAAsBgX,cAAY,SAEnDokB,Q,GAzMMl4B,cAgNZwe,O,gCChNAlD,IANJ,SAAAnf,GACT,OAAIA,EAAMof,UACDpf,EAAMuQ,SAER,O,8ICsBT,IAAM0rB,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,IAAWplB,aAAX,MAAmB,GAAnB,SACd,yBAAK9N,MAAO,CAAE2F,OAAQ,OAAQmI,MAAO,OAAQqlB,SAAU,SACrD,yBAAK3jB,IAAK0jB,EAAQ3jB,IAAI,GAAGvP,MAAO,CAAEozB,UAAW,aAAcD,SAAU,QAAUx7B,UAAS,UAAKmW,OAI3FulB,EAAU,SAAC,GAAD,IAAGH,EAAH,EAAGA,OAAQttB,EAAX,EAAWA,SAAX,OACd,6BACIA,EAQA,2BAAOjO,UAAU,yCAAyC6X,IAAG,UAAK0jB,GAAU3jB,IAAI,YAPhF,2BACE5X,UAAU,yCACV6X,IAAG,iFAC0B0jB,GAC7B3jB,IAAI,cAQN+jB,EAAU,SAAC,GAAD,IAAGJ,EAAH,EAAGA,OAAH,OACd,2BACEv7B,UAAU,yCACV6X,IAAG,6DAAwD0jB,MAMzDK,EAAU,SAAC,GAAD,IAAGL,EAAH,EAAGA,OAAH,OACd,2BAAOv7B,UAAU,yCAAyC6X,IAAG,4CAAuC0jB,EAAvC,qBAK1CM,E,iLACT,IAAD,EAC0Ch3B,KAAKxF,MAA9Ck8B,EADD,EACCA,OADD,EACSxkB,QADT,EACkB1U,KAGzB,OAhEG,YAA8D,IAAjCk5B,EAAgC,EAAhCA,OAAQplB,EAAwB,EAAxBA,MAAOlI,EAAiB,EAAjBA,SAEjD,OAFkE,EAAPwG,KACvC5E,YAAgB0rB,IAElC,IAAK,MACL,IAAK,OACL,IAAK,MACH,OAAO,kBAAC,EAAD,CAASA,OAAQA,EAAQplB,MAAOA,IACzC,IAAK,MACH,OAAO,kBAAC,EAAD,CAASolB,OAAQA,EAAQplB,MAAOA,EAAOlI,SAAUA,IAC1D,IAAK,MACL,IAAK,OACH,OAAO,kBAAC,EAAD,CAASstB,OAAQA,EAAQplB,MAAOA,IACzC,IAAK,MACL,IAAK,OACL,IAAK,MACL,IAAK,OACL,IAAK,MACH,OAAO,kBAAC,EAAD,CAASolB,OAAQA,EAAQplB,MAAOA,IACzC,QACE,OAAO,MA6CF2lB,CAAkB,CAAEP,SAAQttB,SAJ5B,EACwBA,SAGcwG,IAJtC,EACkCA,U,GAFNvR,aC9DvC,oEAQO,IAAM64B,EAAa,SAAAj9B,GACxByE,IAAMY,SAAS,CACbhG,KAAMY,IAAc2T,iBACpBzT,QAASH,KAIAk9B,EAAe,WAC1Bz4B,IAAMY,SAAS,CACbhG,KAAMY,IAAc4T,0BAIXzE,EAAkB,SAAC+tB,EAAK99B,GAC/B89B,GAAgB,QAAT99B,EACOxC,OAAOU,KAAK,GAAI,UACtBoR,SAASyuB,MACjB,wEAA0EC,UAAUF,GAAO,eAG7FtgC,OAAOU,KAAK4/B,EAAK,WAmDN71B,iBANf,SAAyBC,GACvB,MAAO,CACLwO,QAASxO,EAAMwO,WAIqB,KAAzBzO,EA/CC,SAAC,GAAD,QACdyO,QADc,IACH5I,YADG,aACW9N,YADX,MACkB,GADlB,MACsBW,YADtB,MAC6B,GAD7B,MACiCuD,YADjC,MACwC,KADxC,MAC8C4L,gBAD9C,aACgEwG,WADhE,MACsE,KADtE,SAGd,6BACE,kBAAC7H,EAAA,EAAD,CAAOX,KAAMA,EAAMT,KAAK,KAAKqB,SAAS,SAAS7M,UAAU,OAAO8M,OAAQkvB,GACtE,kBAACpvB,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,yBAAKhN,UAAU,SACb,gCAASqC,GACT,uBACEK,QAAS,WASPwL,EAAgBpP,EAAM,QAExBkB,UAAU,qDACV4N,MAAM,SACNvF,MAAO,CAAEoS,SAAU,QAIzB,kBAAC7N,EAAA,EAAMM,KAAP,KACE,kBAACsR,EAAA,EAAD,CAAIC,UAAoB,QAATtgB,GACb,kBAAC,EAAD,CACEo9B,OAAM,sCAAiCz8B,GACvCuD,KAAMA,EACNoS,IAAKA,EACLxG,SAAUA,EACV8I,QAASilB,Y,sJC7DAzS,E,2MACnBljB,MAAQ,CAAEwI,UAAU,EAAOlP,MAAO9C,IAAI,EAAKwC,MAAMM,OAAQmP,YAAY,G,EAMrEC,YAAc,SAAAC,GACZ,EAAKpH,SAAS,CAAEiH,SAAUG,EAAMF,YAAY,IADxB,IAEZnP,EAAU,EAAK0G,MAAf1G,MACPA,IAAU,EAAKN,MAAMM,OAAU,EAAKN,MAAM4P,YAAYtP,I,mFANvDkF,KAAK+C,SAAS,CAAEjI,MAAOkF,KAAKxF,MAAMM,U,gDASVuP,GACpBrK,KAAKwB,MAAM1G,QAAUuP,EAASvP,OAChCkF,KAAK+C,SAAS,CAAEjI,MAAOuP,EAASvP,U,+BAI1B,IAAD,SAC6BkF,KAAKxF,MAAjC8P,uBADD,WAEiCtK,KAAKwB,MAArCwI,EAFD,EAECA,SAAUlP,EAFX,EAEWA,MAAOmP,EAFlB,EAEkBA,WACzB,OAAOD,EACL,kBAAC,IAAD,CAAmBO,YAAavK,KAAKkK,aACnC,0BAAM/O,UAAU,OAAOqP,SAAU,kBAAM,EAAKN,aAAY,KACtD,2BACE5O,GAAG,gBACHhC,KAAK,OACLoC,SAAU,SAAA/D,GACR,EAAKoL,SAAS,CAAEjI,MAAO9C,IAAIL,EAAG,eAAgB,OAEhDmP,UAAW,SAAAnP,GACK,QAAVA,EAAEiO,MACJjO,EAAEkO,iBACF,EAAKqE,aAAY,KAGrB9L,OAAQ,kBAAM,EAAK8L,aAAY,IAC/BpP,MAAOA,MAKb,yBACEK,UAAU,OACV0C,QAAS,SAAClG,GACRA,EAAEsf,kBACF,EAAKlU,SAAS,CAAEiH,UAAU,IAAQ,WAChCpB,SAASC,eAAe,iBAAiB6B,YAG7CC,aAAc,WACZ,EAAK5H,SAAS,CAAEkH,YAAY,KAE9BW,aAAc,WACZ,EAAK7H,SAAS,CAAEkH,YAAY,MAG7BnP,GAAS,KACRwP,GAAmBL,GACnB,0BAAM9O,UAAU,QACd,uBAAGA,UAAU,2B,GA7DmBV,IAAM4D,a","file":"static/js/main.f8e93cc6.chunk.js","sourcesContent":["import get from \"lodash/get\";\nimport TokenManager from \"utils/TokenManager\";\n\nexport const logout = () => {\n  /* Set current tab data */\n  if (window.location.pathname !== \"/login\") {\n    window.sessionStorage.setItem(\"loggedOutInSameSession\", window.location.pathname);\n    window.sessionStorage.setItem(\"loggedoutUser\", TokenManager.getUserId());\n  }\n  /* Set other open tabs data */\n  window.localStorage.setItem(\"loggedout\", TokenManager.getUserId());\n  TokenManager.remove();\n  /* wait for localStorage to be cleared */\n  setTimeout(() => {\n    window.location.pathname !== \"/login\" && window.open(`${window.location.origin}/login`, \"_self\");\n  }, 200);\n};\n\nexport const handleAPIError = (e) => {\n  // \"Request failed with status code 401\"\n  console.log(\"API e: \", JSON.stringify(e));\n  if (get(e, \"message\", \"-\").includes(\"401\")) logout();\n};\n","import axios from \"axios\";\nimport Configs from \"constants/Configs\";\nimport { logout,  handleAPIError } from \"handlers/setters\";\nimport get from \"lodash/get\";\nimport fe_config from \"constants/Configs\";\n\nexport default class TokenManager {\n  static get() {\n    return localStorage.getItem(\"auth\");\n  }\n\n  static set(idToken, expired_at) {\n    if (idToken) {\n      // let expired_at_in_seconds = Math.round(new Date(expired_at).getTime() / 1000);\n      const SESSION_LENGTH = fe_config.MODE === \"PROD\" ? (30 * 60 * 1000 - 10 * 1000) : (5 * 60 * 1000 - 10 * 1000);\n      let expired_at_in_seconds = Math.round(new Date().getTime()) + SESSION_LENGTH;\n      localStorage.setItem(\"expired_at\", expired_at_in_seconds);\n      localStorage.setItem(\"auth\", idToken);\n    }\n  }\n\n  static remove() {\n    localStorage.removeItem(\"auth\");\n  }\n\n  static setUserName(userName, userid) {\n    if (userName) {\n      localStorage.setItem(\"username\", userName);\n      localStorage.setItem(\"userid\", userid);\n    }\n  }\n\n  static setUserData(userData) {\n    if (userData) {\n      localStorage.setItem(\"loggedInUserData\", JSON.stringify(userData));\n    }\n  }\n  static getUserData() {\n    return localStorage.getItem(\"loggedInUserData\") || \"{}\";\n  }\n\n  static getUserEmail() {\n    const userData = JSON.parse(localStorage.getItem(\"loggedInUserData\") || \"{}\");\n    return get(userData, \"email\", \"\");\n  }\n\n  static getIsAdmin() {\n    const loggedInUserData = JSON.parse(TokenManager.getUserData());\n    return get(loggedInUserData, \"roles\", []).includes(\"admin\") || get(loggedInUserData, \"roles\", []).includes(\"payadmin\") || get(loggedInUserData, \"role\", \"\") === 1 || get(loggedInUserData, \"role\", \"\") === 2;\n  }\n\n  static getIsPayAdmin() {\n    const loggedInUserData = JSON.parse(TokenManager.getUserData());\n    return get(loggedInUserData, \"roles\", []).includes(\"payadmin\");\n  }\n\n  static getUserName() {\n    return localStorage.getItem(\"username\");\n  }\n  static getExpiredAt() {\n    return localStorage.getItem(\"expired_at\");\n  }\n  static getUserId() {\n    return localStorage.getItem(\"userid\");\n  }\n}\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\n\nconst Toaster = (message, type, time) => {\n  switch (type) {\n    case \"success\":\n      toast.success(message, {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: time || 2000\n      });\n      break;\n    case \"error\":\n      toast.error(message, {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: time || 2000\n      });\n      break;\n    case \"info\":\n      toast.info(message, {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: time || 2000\n      });\n      break;\n    default:\n      toast(\"Default Notification !\");\n      break;\n  }\n};\n\nexport default Toaster;\n","import { ReducersTypes } from \"constants/ReducersTypes\";\n\nexport const setDynamicForm = (data) => ({\n    type: ReducersTypes.DYNAMIC_FORM,\n    payload: data,\n  });\n  \n  export const addDynamicForm = (data) => ({\n    type: ReducersTypes.ADD_DYNAMIC_FORM,\n    payload: data,\n  });\n","import React from \"react\";\nimport initjson from \"../Data/initjson\";\nimport KEYS from \"../KEYS\";\n\nexport default function TextComp(props) {\n  const [focused, setFocused] = React.useState(false);\n  const { field, updateData } = props;\n  const {\n    value = \"\",\n    iserr = function() {},\n    placeholder = \"\",\n    label = \"\",\n    helperText = \"\",\n    className = \"\",\n    disabled = false,\n    maxLength = null,\n    id = \"text\"\n  } = field;\n  function handleChange(event) {\n    updateData({ id: field.id, value: event.target.value });\n  }\n  const inputClass = iserr({ fielddata: field }) ? \"form-control is-invalid\" : \"form-control\";\n  const labelClass = iserr({ fielddata: field }) ? \"text-danger\" : \"\";\n\n  return (\n    <div>\n      <div className={`${labelClass}`}>{label}</div>\n      <input\n        className={inputClass}\n        type=\"text\"\n        id={id}\n        onChange={handleChange}\n        placeholder={placeholder}\n        value={value}\n        error={iserr({ fielddata: field })}\n        helperText={focused && helperText}\n        disabled={disabled}\n        maxlength={maxLength}\n      />\n    </div>\n  );\n}\n\nexport const textinputconverter = field => [\n  {\n    ...initjson,\n    ...field,\n    typeid: KEYS.Text\n  }\n];\n","import React from \"react\";\nimport initjson from \"../Data/initjson\";\nimport KEYS from \"../KEYS\";\n\nexport default function TextAreaComp(props) {\n  const [focused, setFocused] = React.useState(false);\n  const { field, updateData } = props;\n  const {\n    value = \"\",\n    iserr = function() {},\n    error = false,\n    placeholder = \"\",\n    label = \"\",\n    helperText = \"\",\n    className = \"\",\n    disabled = false\n  } = field;\n  function handleChange(event) {\n    updateData({ id: field.id, value: event.target.value });\n  }\n  return null;\n  // return (\n  //   <div>\n  //     <div>{label}</div>\n  //     <TextArea\n  //       multiline\n  //       className={`w-100 ${className}`}\n  //       variant=\"outlined\"\n  //       value={value}\n  //       onChange={handleChange}\n  //       placeholder={placeholder}\n  //       error={error || iserr({ fielddata: field })}\n  //       helperText={focused ? helperText : \"\"}\n  //       {...props}\n  //       disabled={disabled}\n  //       onFocus={() => setFocused(true)}\n  //       onBlur={() => setFocused(false)}\n  //     />\n  //   </div>\n  // );\n}\n\nexport const textareainputconverter = field => [\n  {\n    ...initjson,\n    ...field,\n    typeid: KEYS.TextArea\n  }\n];\n","import React from \"react\";\nimport initjson from \"../Data/initjson\";\nimport KEYS from \"../KEYS\";\n\nexport default function IntegerComp(props) {\n  const [focused, setFocused] = React.useState(false);\n  const { field, updateData } = props;\n  const {\n    value = \"\",\n    iserr = () => {},\n    placeholder = \"\",\n    label = \"\",\n    helperText = \"enter valid number\",\n    className = \"\",\n    disabled = false,\n    min = 0,\n    max = null\n  } = field;\n\n  function handleChange(event) {\n    updateData({ id: field.id, value: event.target.value ? parseInt(event.target.value) : null });\n    // let valuetemp = event.target.value;\n    // console.log(\"valuetemp: \", valuetemp);\n    // valuetemp = valuetemp ? parseInt(valuetemp.replace(\".\", \"\")) : \"\";\n    // if ((min != null ? valuetemp >= min : true) && (max ? valuetemp <= max : true)) {\n    //   updateData({\n    //     id: field.id,\n    //     value: valuetemp ? Math.trunc(valuetemp) : valuetemp\n    //   });\n    // } else {\n    //   updateData({ id: field.id, value: \"\" });\n    // }\n  }\n\n  const tempprops = { ...props };\n  max && (tempprops.max = max);\n  min && (tempprops.min = min);\n  const inputClass = iserr({ fielddata: field }) ? \"form-control is-invalid\" : \"form-control\";\n  const labelClass = iserr({ fielddata: field }) ? \"text-danger\" : \"\";\n\n  return (\n    <div>\n      <div className={`${labelClass}`}>{label}</div>\n      <input\n        className={inputClass}\n        type=\"number\"\n        onChange={handleChange}\n        placeholder={placeholder}\n        value={value}\n        error={iserr({ fielddata: field })}\n        min={min}\n        max={max}\n        helperText={focused && helperText}\n      />\n    </div>\n  );\n}\n\nexport const integerinputconverter = field => [\n  {\n    ...initjson,\n    ...field,\n    typeid: KEYS.Integer\n  }\n];\n","import React from \"react\";\nimport initjson from \"../Data/initjson\";\nimport KEYS from \"../KEYS\";\n\nexport default function FloatComp(props) {\n  const [focused, setFocused] = React.useState(false);\n  const { field, updateData } = props;\n  const {\n    value = \"\",\n    iserr = () => {},\n    placeholder = \"\",\n    label = \"\",\n    helperText = \"enter valid number\",\n    className = \"\",\n    disabled = false,\n    min = 0,\n    max = null\n  } = field;\n\n  function handleChange(event) {\n    updateData({ id: field.id, value: event.target.value ? parseFloat(event.target.value) : null });\n    // let valuetemp = event.target.value;\n    // console.log(\"valuetemp: \", valuetemp);\n    // valuetemp = valuetemp ? parseInt(valuetemp.replace(\".\", \"\")) : \"\";\n    // if ((min != null ? valuetemp >= min : true) && (max ? valuetemp <= max : true)) {\n    //   updateData({\n    //     id: field.id,\n    //     value: valuetemp ? Math.trunc(valuetemp) : valuetemp\n    //   });\n    // } else {\n    //   updateData({ id: field.id, value: \"\" });\n    // }\n  }\n\n  const tempprops = { ...props };\n  max && (tempprops.max = max);\n  min && (tempprops.min = min);\n \n  const inputClass = iserr({ fielddata: field }) ? \"form-control is-invalid\" : \"form-control\";\n  const labelClass = iserr({ fielddata: field }) ? \"text-danger\" : \"\";\n\n  return (\n    <div>\n      <div className={`${labelClass}`}>{label}</div>\n      <input\n        className={inputClass}\n        type=\"number\"\n        onChange={handleChange}\n        placeholder={placeholder}\n        value={value}\n        error={iserr({ fielddata: field })}\n        min={min}\n        max={max}\n        helperText={focused && helperText}\n      />\n    </div>\n  );\n}\n\nexport const floatinputconverter = field => [\n  {\n    ...initjson,\n    ...field,\n    typeid: KEYS.Integer\n  }\n];\n","import React from \"react\";\nimport initjson from \"../Data/initjson\";\nimport KEYS from \"../KEYS\";\nimport SingleDatePicker from \"components/SingleDatePicker\";\nimport moment from \"moment\";\n// import { getUserDateFormat } from \"../../../Utils/dates\";\n\nexport default function DateComp(props) {\n  let dateRef = null;\n  // eslint-disable-next-line no-unused-vars\n  const [focused, setFocused] = React.useState(false);\n  const { field, updateData } = props;\n  const {\n    value = \"\",\n    iserr = function() {},\n    placeholder = \"\",\n    label = \"\",\n    helperText = \"\",\n    min = null,\n    max = null,\n    className = \"\"\n  } = field;\n\n  function handleChange(newvalue) {\n    updateData({ id: field.id, value: newvalue });\n  }\n\n  const inputClass = iserr({ fielddata: field }) ? \"form-control is-invalid\" : \"form-control\";\n  const labelClass = iserr({ fielddata: field }) ? \"text-danger\" : \"\";\n\n  return (\n    <div className={`${className} single-date-picker`}>\n      <div className={`${labelClass}`}>{label}</div>\n      <SingleDatePicker\n        labelFormat=\"MMM DD, YYYY\"\n        startDate={value ? moment(new Date(value)) : undefined}\n        getSelectedDates={(date) => handleChange(date.format(\"YYYY-MM-DD\"))}\n      />\n    </div>\n  );\n}\n\nexport const dateinputconverter = field => [\n  {\n    ...initjson,\n    ...field,\n    typeid: KEYS.Date\n  }\n];\n","import React from \"react\";\nimport initjson from \"../Data/initjson\";\nimport KEYS from \"../KEYS\";\n\nexport default function TimeComp(props) {\n  const [focused, setFocused] = React.useState(false);\n  const { field, updateData } = props;\n  const { value = \"\", iserr = function() {}, placeholder = \"\", label = \"\", helperText = \"\", className = \"\" } = field;\n\n  function handleChange(event) {\n    updateData({ id: field.id, value: event.target.value });\n  }\n  return null;\n  // return (\n  //   <div>\n  //     <div>{label}</div>\n  //     <Time\n  //       type=\"time\"\n  //       className={`w-100 ${className}`}\n  //       variant=\"outlined\"\n  //       onChange={handleChange}\n  //       placeholder={placeholder}\n  //       value={value}\n  //       {...props}\n  //       error={iserr({ fielddata: field })}\n  //       helperText={focused && helperText}\n  //       onFocus={() => setFocused(true)}\n  //       onBlur={() => setFocused(false)}\n  //     />\n  //   </div>\n  // );\n}\nexport const timeinputconverter = field => [\n  {\n    ...initjson,\n    ...field,\n    typeid: KEYS.Time\n  }\n];\n","import React from \"react\";\nimport initjson from \"../Data/initjson\";\nimport KEYS from \"../KEYS\";\n\nexport default function DateTimeComp(props) {\n  const [focused, setFocused] = React.useState(false);\n  const { field, updateData } = props;\n  const {\n    value = \"\",\n    iserr = function() {},\n    placeholder = \"\",\n    label = \"\",\n    helperText = \"\",\n    min = null,\n    max = null\n  } = field;\n\n  function handleChange(event) {\n    updateData({ id: field.id, value: event.value });\n  }\n\n  return null;\n  // return (\n  //   <div>\n  //     <div>{label}</div>\n  //     <DateTime\n  //       className=\"w-100\"\n  //       change={handleChange}\n  //       placeholder={placeholder}\n  //       value={value}\n  //       {...props}\n  //       error={iserr({ fielddata: field })}\n  //       helperText={focused && helperText}\n  //       onFocus={() => setFocused(true)}\n  //       onBlur={() => setFocused(false)}\n  //       min={min}\n  //       // max={max}\n  //     />\n  //     {/* {iserr({ fielddata: field }) && <p className=\"input-label-err\">invalid</p>} */}\n  //   </div>\n  // );\n}\n\nexport const datetimeinputconverter = field => [\n  {\n    ...initjson,\n    ...field,\n    typeid: KEYS.DateTime\n  }\n];\n","import React from \"react\";\nimport initjson from \"../Data/initjson\";\nimport KEYS from \"../KEYS\";\n\nexport const SelectComponent = props => {\n  const [focused, setFocused] = React.useState(false);\n\n  const { field, updateData } = props;\n  const {\n    value = \"\",\n    iserr = function() {},\n    placeholder = \"Select\",\n    label = \"Select\",\n    helperText = \"\",\n    options = [],\n    disabled = false\n  } = field;\n\n  function handleChange(selectedOption) {\n    console.log(\"selectedOption: \", selectedOption);\n    updateData({ id: field.id, value: selectedOption.target.value });\n  }\n  const inputClass = iserr({ fielddata: field }) ? \"form-control is-invalid\" : \"form-control\";\n  const labelClass = iserr({ fielddata: field }) ? \"text-danger\" : \"\";\n\n  return (\n    <div>\n      <div className={`${labelClass}`}>{label}</div>\n      <select\n        className={inputClass}\n        onChange={handleChange}\n        placeholder={placeholder}\n        error={iserr({ fielddata: field })}\n        helperText={focused && helperText}\n        isDisabled={disabled}\n        disabled={disabled}\n        value={value}\n      >\n        <option value=\"\">Select</option>\n        {options.map(x => (\n          <option value={x.id}>{x.name}</option>\n        ))}\n      </select>\n      {/* <Dropdown\n        className=\"w-100\"\n        getOptionLabel={(option) => option.displayname}\n        getOptionValue={(option) => option.displayvalue}\n        variant=\"outlined\"\n        options={options}\n        {...props}\n        onFocus={() => setFocused(true)}\n        onBlur={() => setFocused(false)}\n        value={selectedOption || null}\n      /> */}\n    </div>\n  );\n};\n\nexport default SelectComponent;\n\nexport const selectinputconverter = field => [\n  {\n    ...initjson,\n    ...field,\n    typeid: KEYS.Select\n  }\n];\n","import React from \"react\";\nimport initjson from \"../Data/initjson\";\nimport KEYS from \"../KEYS\";\n\nexport const MultiSelectComp = props => {\n  const [focused, setFocused] = React.useState(false);\n\n  const { field, updateData } = props;\n  const {\n    value = [],\n    iserr = function() {},\n    placeholder = \"\",\n    label = \"\",\n    helperText = \"\",\n    options,\n    disabled = false,\n    idonly = false\n  } = field;\n\n  function handleChange(selectedOptions) {\n    if (idonly) {\n      updateData({ id: field.id, value: selectedOptions ? selectedOptions.map(x => x.displayvalue) : [] });\n    } else {\n      updateData({ id: field.id, value: selectedOptions });\n    }\n  }\n  return null;\n  // return (\n  //   <div>\n  //     <div>{label}</div>\n  //     <MultiSelect\n  //       className=\"w-100\"\n  //       getOptionLabel={(option) => option.displayname}\n  //       getOptionValue={(option) => option.displayvalue}\n  //       variant=\"outlined\"\n  //       options={options || []}\n  //       onChange={handleChange}\n  //       isMulti\n  //       helperText={focused && helperText}\n  //       value={idonly ? options.filter((x) => value && value.findIndex((y) => y == x.displayvalue) != -1) : value}\n  //       placeholder={placeholder}\n  //       error={iserr({ fielddata: field })}\n  //       {...props}\n  //       isDisabled={disabled}\n  //       onFocus={() => setFocused(true)}\n  //       onBlur={() => setFocused(false)}\n  //     />\n  //   </div>\n  // );\n};\n\nexport default MultiSelectComp;\n\nexport const multiselectinputconverter = field => [\n  {\n    ...initjson,\n    value: [],\n    ...field,\n    typeid: KEYS.MultiSelect\n  }\n];\n","import React from \"react\";\nimport initjson from \"../Data/initjson\";\nimport KEYS from \"../KEYS\";\n\nexport default function TextComp(props) {\n  // const [focused, setFocused] = React.useState(false);\n  const { field, updateData } = props;\n  const {\n    value = false,\n    iserr = function() {},\n    placeholder = \"\",\n    label = \"\",\n    helperText = \"\",\n    disabled = false\n  } = field;\n\n  function handleChange(event) {\n    !disabled && updateData({ id: field.id, value: !value });\n  }\n\n  return (\n    <div>\n      <input\n        type=\"checkbox\"\n        onChange={handleChange}\n        placeholder={placeholder}\n        value={value}\n        checked={value}\n        disabled={disabled}\n        error={iserr({ fielddata: field })}\n      />\n      <p className=\"cursour-pointer\" onClick={handleChange}>\n        {label}\n      </p>\n    </div>\n  );\n}\n\nexport const checkboxinputconverter = field => [\n  {\n    ...initjson,\n    ...field,\n    typeid: KEYS.CheckBox\n  }\n];\n","import initjson from \"../Data/initjson\";\nimport KEYS from \"../KEYS\";\n\nexport default function RadioComp(props) {\n  // const [focused, setFocused] = React.useState(false);\n  const { field, updateData } = props;\n  const {\n    value = false,\n    iserr = () => {},\n    placeholder = \"\",\n    label = \"\",\n    helperText = \"\",\n    labelclass = \"\",\n    iconclass = \"\",\n    disabled = false\n  } = field;\n\n  function handleChange() {\n    !disabled && updateData({ id: field.id, value: value == true ? false : true });\n  }\n  return null;\n  // return (\n  //   <div>\n  //     <span onClick={handleChange}>\n  //       <Radio\n  //         className={`dynamic-form-checkbox cursour-pointer`}\n  //         placeholder={placeholder}\n  //         error={iserr({ fielddata: field })}\n  //         // value={false}\n  //         // value={!value}\n  //         // onChange={handleChange}\n  //         checked={value}\n  //         {...props}\n  //       />\n  //     </span>\n  //     <span onClick={handleChange}>\n  //       <p className={`${labelclass || \"input-label margin-top-4\"} floatleft margin-left-4 width80 cursour-pointer`}>{label}</p>\n  //     </span>\n  //   </div>\n  // );\n}\n\nexport const radioinputconverter = field => [\n  {\n    ...initjson,\n    ...field,\n    typeid: KEYS.Radio\n  }\n];\n","import React from \"react\";\nimport initjson from \"../Data/initjson\";\nimport KEYS from \"../KEYS\";\n\nexport default function TextComp(props) {\n  const [focused, setFocused] = React.useState(false);\n  const { field, updateData } = props;\n  const { value = \"\", iserr = function () {}, placeholder = \"\", label = \"\", helperText = \"\" } = field;\n  function handleChange(event) {\n    updateData({ id: field.id, value: event.target.value });\n  }\n  return (\n    <div>\n      <div>{label}</div>\n      <input\n        type=\"file\"\n        className=\"w-100 form-control\"\n        variant=\"outlined\"\n        value={value}\n        onChange={handleChange}\n        placeholder={placeholder}\n        error={iserr({ fielddata: field })}\n        helperText={focused ? helperText : \"\"}\n        {...props}\n        onFocus={() => setFocused(true)}\n        onBlur={() => setFocused(false)}\n      />\n    </div>\n  );\n}\n\nexport const imageinputconverter = (field) => [\n  {\n    ...initjson,\n    ...field,\n    typeid: KEYS.ImageInput,\n  },\n];\n","import React from \"react\";\nimport initjson from \"../Data/initjson\";\nimport KEYS from \"../KEYS\";\n\nexport const Component = props => {\n  const [focused, setFocused] = React.useState(false);\n\n  const { field, updateData } = props;\n  const { value = \"\", iserr = function() {}, placeholder = \"\", label = \"\", helperText = \"\", options } = field;\n\n  function handleChange(selectedOption) {\n    updateData({ id: field.id, value: selectedOption.displayvalue });\n  }\n\n  const selectedOption = options.find(opt => opt.displayvalue == value);\n  console.log(\"selectedOption: \", selectedOption);\n\n  return null;\n  // return (\n  //   <div>\n  //     <div>{label}</div>\n  //     <Dropdown\n  //       className=\"w-100\"\n  //       getOptionLabel={(option) => option.displayname}\n  //       getOptionValue={(option) => option.displayvalue}\n  //       variant=\"outlined\"\n  //       options={options}\n  //       onChange={handleChange}\n  //       placeholder={placeholder}\n  //       error={iserr({ fielddata: field })}\n  //       helperText={focused && helperText}\n  //       {...props}\n  //       onFocus={() => setFocused(true)}\n  //       onBlur={() => setFocused(false)}\n  //       value={selectedOption || null}\n  //     />\n  //   </div>\n  // );\n};\n\nexport default Component;\n\nexport const groupselectinputconverter = field => [\n  {\n    ...initjson,\n    ...field,\n    typeid: KEYS.Select\n  }\n];\n","import get from \"lodash/get\";\nimport createstore from \"../../../store\";\nimport { ReducersTypes } from \"constants/ReducersTypes\";\nimport Toaster from \"components/Toaster\";\n\nexport const fetchAllFormsFunction = () => {\n  const store = createstore.getState();\n  return get(store, \"dynamicformReducer.forms\", []);\n};\n\nexport const fetchMyFormFunction = formKey => {\n  const store = createstore.getState();\n  const res = get(store, \"dynamicformReducer.forms\", []).find(form => form.formKey === formKey);\n  return res;\n};\n\n// sets showAllErr flag in selected dynamic form\nexport const showAllErrorsFunction = formKey => {\n  let myForm;\n  const forms = fetchAllFormsFunction();\n  const formIndex = forms.findIndex(form => form.formKey === formKey);\n  if (formIndex != -1) {\n    myForm = forms[formIndex];\n    myForm.fields = myForm.fields.map(field => ({ ...field, showAllErr: true }));\n    forms[formIndex] = myForm;\n  }\n  createstore.dispatch({ type: ReducersTypes.DYNAMIC_FORM, payload: { forms } });\n  // also returns value if required\n  return myForm.fields;\n};\n\nexport const validateMyFormFunction = ({ formKey }) => {\n  const fields = showAllErrorsFunction(formKey);\n  if (fields) {\n    let error = \"\";\n    fields.forEach(field => {\n      if (field.iserr({ fielddata: field }) && !error) {\n        error = field.errorText || \"Please fill required fields\";\n        Toaster(error, \"error\");\n        showAllErrorsFunction(formKey);\n      }\n    });\n    return { error, fields };\n  }\n  return { error: \"Please fill required fields\" };\n};\n\nexport const deleteMyFormFunction = formKey => {\n  const store = createstore.getState();\n  const forms = get(store, \"dynamicformReducer.forms\", []).filter(form => form.formKey !== formKey);\n  createstore.dispatch({ type: ReducersTypes.DYNAMIC_FORM, payload: { forms } });\n};\n","import get from \"lodash/get\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport KEYS from \"./KEYS\";\nimport { setDynamicForm, addDynamicForm } from \"./Functions/setters.js\";\nimport TextComp from \"./Fields/Text\";\nimport TextAreaComp from \"./Fields/Textarea\";\nimport IntegerComp from \"./Fields/Integer\";\nimport FloatComp from \"./Fields/Float\";\nimport DateComp from \"./Fields/Date\";\nimport TimeComp from \"./Fields/Time\";\nimport DateTimeComp from \"./Fields/DateTime\";\nimport SelectComp from \"./Fields/Select\";\nimport MultiSelectComp from \"./Fields/MultiSelect\";\nimport CheckBoxComp from \"./Fields/CheckBox\";\nimport RadioComp from \"./Fields/Radio\";\nimport ImageInput from \"./Fields/ImageInput\";\nimport GroupSelect from \"./Fields/GroupSelect\";\nimport {\n  showAllErrorsFunction,\n  fetchMyFormFunction,\n  deleteMyFormFunction,\n  validateMyFormFunction,\n  fetchAllFormsFunction\n} from \"./Functions/getters.js\";\n\n/**\n * these are the functions to control dynamic form\n */\nexport const fetchMyForm = fetchMyFormFunction;\nexport const deleteMyForm = deleteMyFormFunction;\nexport const showAllErrors = showAllErrorsFunction;\nexport const validateMyForm = validateMyFormFunction;\nexport const fetchAllForms = fetchAllFormsFunction;\n\n/**\n * @class Dynamic Form Details\n * @param { function } onChange - if this function present, using dynamic form for single field\n * @param {array} fields - this is array of fields, which needs to be rendered in our form\n * @param {string} formKey - this is unique identifier for our form\n * @param {function} fetchMyForm - you can access our form from anywhere by passing 'formKey' identifier\n * @param {function} deleteMyForm - you can delete the dynamic form uding this function\n */\nclass DynamicForm extends Component {\n  constructor(props) {\n    super(props);\n    this.getField = this.getField.bind(this);\n    this.updateData = this.updateData.bind(this);\n  }\n\n  componentDidMount() {\n    const { fields, formKey, onChange } = this.props;\n    if (!fetchMyForm(formKey) && !onChange) {\n      // form doesn't present, so create new form\n      \n      this.props.addDynamicForm({ forms: [{ fields, formKey }] });\n    }\n  }\n\n  updateData({ id, value }) {\n    \n    const { formKey, onChange } = this.props;\n    if (onChange) {\n      onChange(value);\n    } else {\n      const RESULT = get(this.props, \"dynamicformReducer.forms\", []).map(form => ({\n        ...form,\n        fields:\n          form.formKey === formKey\n            ? form.fields.map(field => ({\n                ...field,\n                [id]: value,\n                value: field.id === id ? value : field.value\n              }))\n            : form.fields\n      }));\n      this.props.setDynamicForm({ forms: RESULT });\n    }\n  }\n\n  componentWillUnmount() {\n    const { formKey, onChange } = this.props;\n    if (!onChange) deleteMyForm(formKey);\n  }\n\n  getField({ field, showAllErr }) {\n    const PROPS = {\n      field,\n      updateData: this.updateData,\n      showAllErr\n    };\n    switch (field.typeid) {\n      case KEYS.Text:\n        return <TextComp {...PROPS} />;\n      case KEYS.TextArea:\n        return <TextAreaComp {...PROPS} />;\n      case KEYS.Integer:\n        return <IntegerComp {...PROPS} />;\n      case KEYS.Float:\n        return <FloatComp {...PROPS} />;\n      case KEYS.Date:\n        return <DateComp {...PROPS} />;\n      case KEYS.Time:\n        return <TimeComp {...PROPS} />;\n      case KEYS.DateTime:\n        return <DateTimeComp {...PROPS} />;\n      case KEYS.Select:\n        return <SelectComp {...PROPS} />;\n      case KEYS.CheckBox:\n        return <CheckBoxComp {...PROPS} />;\n      case KEYS.Radio:\n        return <RadioComp {...PROPS} />;\n      case KEYS.MultiSelect:\n        return <MultiSelectComp {...PROPS} />;\n      case KEYS.ImageInput:\n        return <ImageInput {...PROPS} />;\n      case KEYS.GroupSelect:\n        return <GroupSelect {...PROPS} />;\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const { formKey, onChange, fields, numberOfColumns = 1 } = this.props;\n    const form = onChange ? { fields } : fetchMyForm(formKey);\n    const fieldClass = numberOfColumnsClass[numberOfColumns];\n    return (\n      <div className=\"row\">\n        {get(form, \"fields\", []).map(field => (\n          <div className={fieldClass}>\n            <div className=\"w-100\">{this.getField({ field, showAllErr: get(form, \"shoAllErr\", \"\") })}</div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst numberOfColumnsClass = {\n  1: \"col-md-12 mt-3\",\n  2: \"col-md-6 mt-3\",\n  3: \"col-md-4 mt-3\"\n};\n\nfunction mapStateToProps(state) {\n  return {\n    dynamicformReducer: state.dynamicformReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ setDynamicForm, addDynamicForm }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DynamicForm);\n","import moment from \"moment\";\n\nexport const isinbetween = (date, startdate, enddate) => {\n  const startdiff = betweenDays({ startdate, date });\n  const enddiff = betweenDays({ date, enddate });\n  return startdiff >=0 && enddiff >= 0;\n}\n\nexport const getUTCDate = date => {\n  if (date) {\n    let io_format = \"MM/DD/YYYY\";\n    return moment.utc(date).format(io_format) === \"Invalid date\" ||\n      moment.utc(date).format(io_format) === null ||\n      moment.utc(date).format(io_format) === \"null\"\n      ? \"\"\n      : moment.utc(date).format(io_format);\n  }\n  return null;\n};\n\nexport const getFormattedDate = (date, ip_format = \"YYYY-MM-DD\") => {\n  if (date) {\n    let op_format = \"MM/DD/YYYY\";\n    return moment(date).format(op_format) === \"Invalid date\" ||\n      moment(date).format(op_format) === null ||\n      moment(date).format(op_format) === \"null\"\n      ? \"\"\n      : moment(date, ip_format).format(op_format);\n  }\n  return null;\n};\n\nexport function new_ts() {\n  return moment()\n    .toDate()\n    .getTime();\n}\n\nexport function ts_str({ ts, timeformat = \"MM/DD/YYYY\" }) {\n  if (!ts) return \"\";\n  return moment(ts).format(timeformat);\n}\n\nexport function str_ts({ str, timeformat = \"MM/DD/YYYY\" }) {\n  if (!str) return \"\";\n  return moment(str, timeformat)\n    .toDate()\n    .getTime();\n}\n\nexport function betweenDays({ startdate = moment(), enddate = moment() }) {\n  enddate = moment.isMoment(enddate) ? enddate : moment(enddate);\n  startdate = moment.isMoment(startdate) ? startdate : moment(startdate);\n  const duration = moment.duration(enddate.diff(startdate));\n  const res = duration.asDays();\n  return parseInt(res);\n}\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport \"bootstrap-daterangepicker/daterangepicker.css\";\nconst defaultLabel = \"MM/DD/YYYY\";\n\nclass SingleDatePicker extends Component {\n  constructor(props) {\n    super(props);\n    // let startDate = moment();\n    this.state = {\n      startDate: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      startDate: this.props.startDate ? moment(this.props.startDate) : undefined,\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(this.props.startDate != nextProps.startDate) {\n      this.setState({\n        startDate: nextProps.startDate ? moment(nextProps.startDate) : undefined,\n      });\n    }\n  }\n\n  getDates = ({ startDate }) => {\n    this.setState(\n      {\n        startDate,\n      },\n      () => this.props.getSelectedDates(this.state.startDate)\n    );\n  };\n\n  render() {\n    const { startDate } = this.state;\n\n    const { parentEl, labelFormat } = this.props;\n    const format = labelFormat || defaultLabel;\n    const selectedDates = startDate ? `${moment(startDate).format(format)}` : \"\";\n    return (\n      <div className=\"w-100\" id=\"datepicker-wrap\">\n        <DateRangePicker\n          className=\"w-100\"\n          parentEl={parentEl}\n          singleDatePicker={true}\n          startDate={startDate}\n          endDate={startDate}\n          autoApply\n          onApply={(e, picker) => this.getDates(picker)}\n        >\n          <div\n            className=\"w-100\"\n            id=\"wrap-date\"\n            style={{\n              background: \"#fff\",\n              cursor: \"pointer\",\n              padding: \"5px 10px\",\n              border: \"1px solid #ccc\",\n              minWidth: 120,\n            }}\n          >\n            <i className=\"fa fa-calendar pull-left pt-1\"></i>\n            {selectedDates ? <span>{selectedDates}</span> : <span className=\"text-secondary\">{format}</span>}\n            <i className=\"fa fa-caret-down pull-right pt-1\"></i>\n          </div>\n        </DateRangePicker>\n      </div>\n    );\n  }\n}\n\nexport default SingleDatePicker;\n","import React from \"react\";\nimport { NativeTypes } from \"react-dnd-html5-backend\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport { useDrop } from \"react-dnd\";\nconst TextareaDropBox = props => {\n  const { onDrop, charLimit, onTextChange, body } = props;\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: [NativeTypes.FILE],\n    drop(item, monitor) {\n      if (onDrop) {\n        onDrop({item, props, monitor});\n      }\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n  const isActive = canDrop && isOver;\n  return (\n    <div ref={drop} className=\"w-100\" >\n      {isActive ? (\n        <div className=\"w-100 d-flex justify-content-center my-auto align-items-center\" style={{ \"height\": \"250px\", \"border\": \"1px dotted #ccc\" }}>\n          Release to drop\n        </div>\n      ) : (\n          <CKEditor\n            editor={ClassicEditor}\n            data={body ? body : \"\"}\n            config={{\n              toolbar: ['heading', '|', 'bold', 'italic', 'numberedList', 'bulletedList']\n            }}\n            onChange={(event, editor) => {\n              const data = editor.getData();\n              onTextChange(data);\n            }}\n          />\n      )}\n    </div>\n  );\n};\nexport default TextareaDropBox;\n","import React from \"react\";\nimport { emailRegEx } from \"constants/regex\";\nimport cx from 'classnames';\nimport Chip from '@material-ui/core/Chip';\n\nexport default class EmailInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: props.email || [],\n            value: \"\",\n            error: null\n        };\n    }\n\n    onBlur = () => {\n        const value = this.state.value.trim();\n\n        if (value && this.isValid(value)) {\n            this.setState({\n                items: [...this.state.items, this.state.value],\n                value: \"\"\n            }, () => this.props.getEmailId(this.props.label, this.state.items.toString()));\n        }\n    }\n\n    handleKeyDown = evt => {\n        if ([\"Enter\", \"Tab\", \",\"].includes(evt.key)) {\n            evt.preventDefault();\n            this.onBlur();\n        }\n    };\n\n    handleChange = evt => {\n        this.setState({\n            value: evt.target.value,\n            error: null\n        });\n    };\n\n    handleDelete = item => {\n        this.setState({\n            items: this.state.items.filter(i => i !== item)\n        }, () => this.props.getEmailId(this.props.label, this.state.items.toString()));\n    };\n\n    handlePaste = evt => {\n        evt.preventDefault();\n\n        const paste = evt.clipboardData.getData(\"text\");\n        const emails = paste.match(/[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/g);\n\n        if (emails) {\n            const toBeAdded = emails.filter(email => this.isValid(email));\n\n            this.setState({\n                items: [...this.state.items, ...toBeAdded]\n            }, () => this.props.getEmailId(this.props.label, this.state.items.toString()));\n        }\n    };\n\n    isValid = (email) => {\n        let error = null;\n\n        if (this.isInList(email)) {\n            error = `${email} has already been added.`;\n        }\n\n        if (!this.isEmail(email)) {\n            error = `${email} is not a valid email address.`;\n        }\n\n        if (error) {\n            this.setState({ error });\n            return false;\n        }\n\n        return true;\n    }\n\n    isInList = (email) => this.state.items.includes(email);\n\n    isEmail = (email) => emailRegEx.test(email);\n\n    render() {\n        const {\n            items,\n            error,\n            value,\n        } = this.state;\n        return (\n            <>\n                {items.map(item => (\n                    <span className=\"tag-item d-inline-block mr-1 mb-1\" key={item}>\n                        <Chip label={item} size=\"small\" onDelete={() => this.handleDelete(item)}/>\n                    </span>\n                ))}\n\n                <input\n                    className={cx(\"multiemail-input\", { error: !!error })}\n                    value={value}\n                    placeholder=\"Enter email address\"\n                    onBlur={this.onBlur}\n                    onKeyDown={this.handleKeyDown}\n                    onChange={this.handleChange}\n                    onPaste={this.handlePaste}\n                />\n            </>\n        );\n    }\n}\n","import React from \"react\";\nimport get from \"lodash/get\";\nimport { connect } from \"react-redux\";\nimport store from \"store\";\nimport { Button, Card, Modal } from \"react-bootstrap\";\nimport DNDContainer from \"components/DNDContainer\";\nimport { previewInNewTab } from \"components/Preview\";\nimport TextareaDropBox from \"components/TextareaDropBox\";\nimport Toaster from \"components/Toaster\";\nimport { ReducersTypes } from \"constants/ReducersTypes\";\nimport { convertDecimalNo } from \"utils\";\nimport EmailInput from './EmailInput';\nimport \"./emailcreator.css\";\n\nexport const setemailData = (data) => {\n  store.dispatch({\n    type: ReducersTypes.EMAIL_DATA,\n    payload: data,\n  });\n};\n\nexport const resetemail = () => {\n  store.dispatch({\n    type: ReducersTypes.EMAIL_RESET,\n  });\n};\n\nfunction EmailCreator(props) {\n  const {\n    email: { show, from = \"\", to = \"\", cc = \"\", subject = \"\", body = \"\", onSave, files = [], fetchingInvoices = false },\n    email,\n    charLimit = 2000,\n  } = props;\n\n  const handleClose = (event, reason) => {\n    return;\n    // if (reason === \"clickaway\") {\n    //   return;\n    // }\n    // resetemail();\n  };\n\n  function onChange(key, value) {\n    const data = { ...email, [key]: value };\n    setemailData(data);\n  }\n\n  function removeFiles(index) {\n    const updatedFiles = files.filter((d, i) => i !== index);\n    const data = { ...email, files: updatedFiles };\n    setemailData(data);\n  }\n\n  function onDrop({ item, props, monitor }) {\n    const maxSize = 1024 * 1024 * 5;\n    let updatedFiles = [...files, ...get(item, \"files\", [])];\n    let totalSize = 0;\n    updatedFiles.forEach((file) => {\n      totalSize = totalSize + file.size;\n    });\n    if (totalSize > maxSize) {\n      Toaster(\"Maximum attachments size is 5MB\", \"error\");\n      return;\n    }\n    const data = { ...email, files: updatedFiles };\n    setemailData(data);\n  }\n\n  return (\n    <Modal\n      show={show}\n      size=\"lg\"\n      backdrop=\"static\"\n      onHide={() => {\n        handleClose();\n        resetemail();\n      }}\n      className=\"mt-4\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title className=\"h6\">New Email</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div style={{ \"maxHeight\": \"calc(90vh - 190px)\", \"overflowY\": \"auto\" }} className=\"email-wrapper\">\n          <div className=\"m-2 border rounded input-email-box\">\n            <div className=\"p-2 d-table-cell text-left label\">TO</div>\n            <div className=\"p-2 d-table-cell\">\n              <EmailInput email={to ? [...to.split(',')] : []} getEmailId={onChange} label=\"to\" />\n            </div>\n          </div>\n          <div className=\"m-2 border rounded input-email-box\">\n            <div className=\"p-2 d-table-cell text-left label\">CC</div>\n            <div className=\"p-2 d-table-cell\">\n              <EmailInput email={cc ? [...cc.split(',')] : []} getEmailId={onChange} label=\"cc\"  />\n            </div>\n          </div>\n          <div className=\"m-2 border rounded input-email-box\">\n            <div className=\"py-2 pl-2\">\n              <input\n                type=\"text\"\n                placeholder=\"Subject\"\n                className=\"input-email w-80\"\n                onChange={(e) => onChange(\"subject\", e.target.value)}\n                value={subject}\n                pattern={/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/}\n              />\n            </div>\n          </div>\n          <div className=\"m-2\">\n            <DNDContainer>\n              <TextareaDropBox\n                onDrop={onDrop}\n                maxlength={charLimit}\n                onTextChange={(body) => body && onChange(\"body\", body)}\n                body={body}\n              />\n            </DNDContainer>\n            <div className=\"text-right pb-2 text-small text-danger\">\n              {body.length === charLimit && <i>Max characters limit: {charLimit}</i>}\n            </div>\n          </div>\n\n          <input\n            data-cy=\"attach\"\n            type=\"file\"\n            id=\"attach\"\n            className=\"d-none\"\n            multiple\n            onChange={(e) => {\n              onDrop({ item: e.target });\n            }}\n          />\n          <div className=\"text-secondary ml-2 my-2\">\n            <span>\n              Attachments:\n              <i\n                className=\"fas fa-paperclip cursor-pointer pl-2\"\n                onClick={() => {\n                  document.getElementById(\"attach\").click();\n                }}\n                title=\"Add attachments\"\n              />\n            </span>\n          </div>\n          {fetchingInvoices ? (\n            <div className=\"row mx-2\">\n              <div className=\"text-center w-100 p-2 text-secondary \">\n                fetching invoices &nbsp; <i className=\"ml-2 fa fa-spinner fa-spin text-primary\" />\n              </div>\n            </div>\n          ) : (\n            <div className=\"row mx-2\">\n              {files.map((file, i) => {\n                const filetTypes = {\n                  \"pdf\": \"fa fa-file-pdf-o red-file-highlighter\",\n                  \"jpeg\": \"fa fa-file-photo-o blue-file-highlighter\",\n                  \"png\": \"fa fa-file-photo-o blue-file-highlighter\",\n                  \"jpg\": \"fa fa-file-photo-o blue-file-highlighter\",\n                  \"xlsx\": \"fa fa-file-excel-o green-file-highlighter\",\n                  \"xls\": \"fa fa-file-excel-o green-file-highlighter\",\n                };\n                const fileName = file.name.split('.')[file.name.split('.').length - 1];\n                return (\n                  <Card className=\"col-md-3 emailthumbnail cursour-pointer\" height=\"80\">\n                    {!file.isbase64 ? (\n                      <div>\n                        <div className=\"file-wrapper\">\n                          <span className=\"invoice-file-name\">{fileName}</span>\n                          <span className=\"invoice-file-size\">{convertDecimalNo(file.size/1000)}kB</span>\n                        </div>\n                        <div\n                          className=\"file-icon\"\n                          onClick={() => {\n                            if (file.isbase64) {\n                              previewInNewTab(JSON.parse(get(file, \"content\", \"\")), \"pdf\");\n                            } else {\n                              previewInNewTab(URL.createObjectURL(file), \"other\");\n                            }\n                          }}\n                        >\n                          <i className={`${filetTypes[fileName] ? filetTypes[fileName] : 'fa fa-file-o'} fa-7x`}></i>\n                        </div>\n                      </div>\n                    ) : (\n                      <div\n                        onClick={() => {\n                          previewInNewTab(JSON.parse(get(file, \"content\", \"\")), \"pdf\");\n                        }}\n                      >\n                        <div className=\"file-wrapper\">\n                          <span className=\"invoice-file-name\">{fileName}</span>\n                          <span className=\"invoice-file-size\">{convertDecimalNo(file.content.length/1000)}kB</span>\n                        </div>\n                        <div className=\"file-icon\">\n                          <i className={`${filetTypes[fileName] ? filetTypes[fileName] : 'fa fa-file-o'} fa-7x`}></i>\n                        </div>\n                        <div className=\"overlay\"></div>\n                      </div>\n                    )}\n                    <Card.Body>\n                      <Card.Text>\n                        <div className=\"row p-0\">\n                          <div className=\"col-md-9 text-truncate\">\n                            <span title={file.name}>{file.name}</span>\n                          </div>\n                          <div className=\"col-md-3\">\n                            <i\n                              body=\"Remove attachment\"\n                              className=\"fa fa-remove cursor-pointer pull-right\"\n                              onClick={() => removeFiles(i)}\n                            />\n                          </div>\n                        </div>\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <Button\n              disabled={!to || !subject || !body}\n              variant=\"primary\"\n              className=\"pull-right mr-2\"\n              data-cy=\"sendemail\"\n              onClick={() => {\n                if (!subject) {\n                  Toaster(\"Please enter subject\", \"error\");\n                  return;\n                } else if (!body) {\n                  Toaster(\"Please enter text in body\", \"error\");\n                  return;\n                }\n                onSave(to, subject, body, files, cc);\n              }}\n            >\n              Send\n            </Button>\n          </div>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.email,\n});\n\nexport default connect(mapStateToProps, null)(EmailCreator);\n","import ClickAwayListener from \"components/ClickAwayListener\";\nimport get from \"lodash/get\";\nimport React from \"react\";\n\nexport default class SelectEditorCell extends React.Component {\n  state = { editmode: false, value: get(this.props.value), showpencil: false };\n\n  componentDidMount() {\n    this.setState({ value: this.props.value });\n  }\n\n  setEditMode = mode => {\n    this.setState({ editmode: mode, showpencil: false });\n    const { value } = this.state;\n    (value !== this.props.value || value == 0) && this.props.updateValue(value);\n  };\n\n  componentWillReceiveProps(newprops) {\n    if (this.state.value !== newprops.value) {\n      this.setState({ value: newprops.value });\n    }\n  }\n\n  render() {\n    const { iscellcomponent = false, options } = this.props;\n    const { editmode, value, showpencil } = this.state;\n    const name = get(\n      options.find(opt => opt.value == value),\n      \"name\",\n      \"\"\n    );\n    return editmode ? (\n      <ClickAwayListener onClickAway={this.setEditMode}>\n        <form className=\"mr-2\" onSubmit={() => this.setEditMode(false)}>\n          <select id=\"amount-editor\" className=\"py-1 px-2 w-50\" onChange={e => this.setState({ value: e.target.value })}>\n            <option disabled selected value=\"\">Select</option>\n            {options.map(opt => (\n              <option value={opt.value} selected={value == opt.value}>{opt.name}</option>\n            ))}\n          </select>\n        </form>\n      </ClickAwayListener>\n    ) : (\n      <div\n        className=\"mr-2\"\n        onClick={() => {\n          this.setState({ editmode: true }, () => {\n            document.getElementById(\"amount-editor\").focus();\n          });\n        }}\n        onMouseEnter={() => {\n          this.setState({ showpencil: true });\n        }}\n        onMouseLeave={() => {\n          this.setState({ showpencil: false });\n        }}\n      >\n        {name || \"-\"}\n        {!iscellcomponent && showpencil && (\n          <span className=\"ml-3\">\n            <i className=\"fa fa-pencil-alt\" />\n          </span>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\nimport PropTypes from 'prop-types';\n\nconst DNDContainer = props => (\n    <DndProvider backend={HTML5Backend}>\n        {props.children}\n    </DndProvider>\n);\n\nDNDContainer.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.array, PropTypes.object]),\n    scrollContainerClass: PropTypes.string,\n};\n\nexport default DNDContainer;\n","import React, { useLayoutEffect, useState } from 'react';\nimport get from \"lodash/get\";\nimport { instanceMultipart } from \"actions/axiosInstance\";\n\nexport const getOSName = () => navigator.appVersion;\n\nexport const isMacOS = () => navigator.appVersion.includes(\"Macintosh\");\n\nexport const isIncognitoMode = () => Promise((resolve, reject) => {\n    const fs = window.RequestFileSystem || window.webkitRequestFileSystem;\n    if (!fs) reject(\"Check incognito failed\");\n    else fs(window.TEMPORARY, 100, () => resolve(false), () => resolve(true));\n  });\n\nexport const getSubdomain = () => {\n  const subdomain = get(window, \"location.hostname\", \"\").split(\".\");\n  return subdomain[0];\n};\n\nexport function getUrlExtension(url) {\n  return url\n    .split(/\\#|\\?/)[0]\n    .split(\".\")\n    .pop()\n    .trim();\n}\n\nexport function getFnameFromUrl(url) {\n  return url.substring(url.lastIndexOf(\"/\") + 1);\n}\n\nexport async function getFileUrl({ file, fileurl, maxsize }) {\n  let res = \"\";\n  const fileAPIresp = await instanceMultipart.post(fileurl, file);\n  res = get(fileAPIresp, \"data.result[0].imagepath\", \"\");\n  return res;\n}\n\nexport function b64toBlob (b64Data, contentType='', sliceSize=512) {\n  const byteCharacters = atob(b64Data);\n  const byteArrays = [];\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n    const byteNumbers = new Array(slice.length);\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    const byteArray = new Uint8Array(byteNumbers);\n    byteArrays.push(byteArray);\n  }\n\n  const blob = new Blob(byteArrays, {type: contentType});\n  return blob;\n}\n\nexport function useWindowSize() {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n}\n\n// export function getCookie(cname) {\n//   const cookies = new Cookies();\n//   return cookies.get(cname) || null;\n// }\n","// eslint-disable-next-line no-unused-vars\nimport Production from \"./PROD.json\";\nimport Development from \"./DEV.json\";\n\n// export default Development;\n// export default Production;\n// const fe_config = Production;\nconst fe_config = process.env.NODE_ENV === \"PROD\" ? Production : Development;\nexport default fe_config;\n","export default {\n  Text: 1,\n  Date: 2,\n  DateTime: 3,\n  Float: 4,\n  Time: 5,\n  Select: 6,\n  TextArea: 7,\n  Integer: 8,\n  Radio: 9,\n  CheckBox: 10,\n  MultiSelect: 11,\n  ImageInput: 12,\n  GroupSelect: 13,\n};\n","export const ReducersTypes = {\n  SIGNUP: \"SIGNUP\",\n  LOGIN: \"LOGIN\",\n  AUTH: \"AUTH\",\n  DASHBOARD: \"DASHBOARD\",\n  PAYABLES: \"PAYABLES\",\n  NAVIGATION: \"NAVIGATION\",\n  NAVIGATION_RESET: \"NAVIGATION_RESET\",\n  PAYMENT_METHODS: \"PAYMENT_METHODS\",\n  RECEIVABLES: \"RECEIVABLES\",\n  SETTINGS: \"SETTINGS\",\n  UPDATE_RECEIVABLES_DATA: \"UPDATE_RECEIVABLES_DATA\",\n  SNACKBAR_DATA: \"SNACKBAR_DATA\",\n  SNACKBAR_MSG: \"SNACKBAR_MSG\",\n  SNACKBAR_RESET: \"SNACKBAR_RESET\",\n  CONFIRMATION_BOX: \"CONFIRMATION_BOX\",\n  CONFIRMATION_BOX_RESET: \"CONFIRMATION_BOX_RESET\",\n  EMAIL_DATA: \"EMAIL_DATA\",\n  EMAIL_RESET: \"EMAIL_RESET\",\n  DYNAMIC_FORM: \"DYNAMIC_FORM\",\n  ADD_DYNAMIC_FORM: \"ADD_DYNAMIC_FORM\",\n  PREVIEW_DOCUMENT: \"PREVIEW_DOCUMENT\",\n  RESET_PREVIEW_DOCUMENT: \"RESET_PREVIEW_DOCUMENT\"\n};\n","export default {\n  typeid: null,\n  id: null,\n  value: null,\n  required: false,\n  options: null,\n  placeholder: \"Enter\",\n  label: \"\",\n  helperText: \"\",\n  defaultValue: \"\",\n  disabled: false,\n  isDisabled: false,\n  iserr: ({ fielddata }) => {\n    const { showAllErr, required, value, customiserr } = fielddata;\n    if (customiserr && customiserr({ fielddata }) === true) {\n      return true;\n    } else if (showAllErr && required && !value && typeof value !== \"boolean\" && value !== 0) {\n      return true;\n    }\n    return false;\n  },\n};\n","import React from \"react\";\nimport { ReducersTypes } from \"constants/ReducersTypes\";\nimport { connect } from \"react-redux\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport store from \"store\";\n\nexport const setconfirmationboxData = data => {\n  store.dispatch({\n    type: ReducersTypes.CONFIRMATION_BOX,\n    payload: data\n  });\n};\n\nexport const resetconfirmationboxData = () => {\n  store.dispatch({\n    type: ReducersTypes.CONFIRMATION_BOX_RESET\n  });\n};\n\nfunction CustomSnackbar(props) {\n  const {\n    confirmationbox: { msg = \"\", onSave }\n  } = props;\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    resetconfirmationboxData();\n  };\n\n  return (\n    <Modal show={msg !== \"\"} onHide={handleClose} className=\"mt-4\" style={{ zIndex: 9999 }}>\n      <Modal.Body>\n        <div className=\"text-center\">{msg}</div>\n        <form className=\"row d-flex justify-content-center mt-3\">\n          <Button variant=\"secondary\" onClick={handleClose} className=\"col-sm-5\">\n            Cancel\n          </Button>\n          <Button variant=\"primary\" autofocus className=\"ml-3 mr-2 col-sm-5\" onClick={onSave}>\n            Confirm\n          </Button>\n        </form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nconst mapStateToProps = state => ({\n  confirmationbox: state.confirmationbox\n});\n\nexport default connect(mapStateToProps, null)(CustomSnackbar);\n","import { ReducersTypes } from \"../../constants/ReducersTypes\";\n\nexport const login = (\n  state = {\n    data: \"kiran\",\n  },\n  action,\n) => {\n  switch (action.type) {\n    case ReducersTypes.LOGIN:\n      return { data: action.payload.data };\n    default:\n      return state;\n  }\n};\n\nexport default { login };\n","const dashboard = (\n  state = {\n    payablesData: [],\n    receivablesData: [],\n    isFetching: true,\n  },\n  action,\n) => {\n  switch (action.type) {\n    case 'SET_PAYABLE_DATA':\n      return {\n        ...state,\n        payablesData: action.payload.data,\n        isFetching: action.isFetching,\n      };\n\n    case 'SET_RECEIVABLE_DATA':\n      return {\n        ...state,\n        receivablesData: action.payload.data,\n        isFetching: action.isFetching\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default dashboard;\n","import { ReducersTypes } from \"../../constants/ReducersTypes\";\n\nexport const payables = (\n  state = {\n    data: \"payables data\"\n  },\n  action\n) => {\n  switch (action.type) {\n    case ReducersTypes.PAYABLES:\n      return { data: action.payload.data };\n    default:\n      return state;\n  }\n};\n\nexport default { payables };\n","import { ReducersTypes } from \"../../constants/ReducersTypes\";\n\nexport const receivables = (\n  state = {\n    data: \"receivables data\"\n  },\n  action\n) => {\n  switch (action.type) {\n    case ReducersTypes.RECEIVABLES:\n      return { data: action.payload.data };\n    default:\n      return state;\n  }\n};\n\nexport default { receivables };\n","import { ReducersTypes } from \"../../constants/ReducersTypes\";\n\nexport const settings = (\n  state = {\n    data: \"settings data\"\n  },\n  action\n) => {\n  switch (action.type) {\n    case ReducersTypes.SETTINGS:\n      return { data: action.payload.data };\n    default:\n      return state;\n  }\n};\n\nexport default { settings };\n","import { ReducersTypes } from \"../constants/ReducersTypes\";\n\nexport const auth = (\n  state = {\n    token: \"-\"\n  },\n  action\n) => {\n  switch (action.type) {\n    case ReducersTypes.AUTH:\n      return { data: action.payload.data };\n    default:\n      return state;\n  }\n};\n\nexport default { auth };\n","import { ReducersTypes } from \"../constants/ReducersTypes\";\nimport TokenManager from \"utils/TokenManager\";\n\nconst initsnackbar = {\n  ...{\n    msg: \"\",\n    variant: \"info\" // \"success\", \"error\", \"warning\", \"info\"\n  }\n};\n\nconst snackbar = (state = initsnackbar, action) => {\n  switch (action.type) {\n    case ReducersTypes.SNACKBAR_MSG:\n      return { msg: action.payload };\n    case ReducersTypes.SNACKBAR_DATA:\n      return { ...state, ...action.payload };\n    case ReducersTypes.SNACKBAR_RESET:\n      return initsnackbar;\n    default:\n      return state;\n  }\n};\n\nconst initconfirmationbox = {\n  ...{\n    msg: \"\",\n    variant: \"info\", // \"success\", \"error\", \"warning\", \"info\",\n    onSave: null\n  }\n};\n\nconst confirmationbox = (state = initsnackbar, action) => {\n  switch (action.type) {\n    case ReducersTypes.CONFIRMATION_BOX:\n      return { ...state, ...action.payload };\n    case ReducersTypes.CONFIRMATION_BOX_RESET:\n      return initconfirmationbox;\n    default:\n      return state;\n  }\n};\n\nconst initnavigation = {\n  ...{\n    openleftnav: true\n  }\n};\n\nconst navigation = (state = initnavigation, action) => {\n  switch (action.type) {\n    case ReducersTypes.NAVIGATION:\n      return { ...state, ...action.payload };\n    case ReducersTypes.NAVIGATION_RESET:\n      return initnavigation;\n    default:\n      return state;\n  }\n};\n\nconst initemail = {\n  ...{\n    show: false,\n    from: \"\",\n    to: \"\",\n    cc: TokenManager.getUserEmail(),\n    subject: \"\",\n    body: \"\",\n    files: []\n  }\n};\n\nconst email = (state = initemail, action) => {\n  switch (action.type) {\n    case ReducersTypes.EMAIL_DATA:\n      return { ...state, ...action.payload };\n    case ReducersTypes.EMAIL_RESET:\n      return initemail;\n    default:\n      return state;\n  }\n};\n\nexport const dynamicformReducer = (\n  state = {\n    forms: [],\n    count: 0\n  },\n  action\n) => {\n  switch (action.type) {\n    case ReducersTypes.DYNAMIC_FORM:\n      return { ...state, forms: action.payload.forms };\n    case ReducersTypes.ADD_DYNAMIC_FORM:\n      return { ...state, forms: [...state.forms, ...action.payload.forms], count: state.count + 1 };\n    default:\n      return state;\n  }\n};\n\nconst initpreview = {\n  show: false,\n  type: \"\", // doc, policy, info\n  data: \"\",\n  name: \"\",\n  isbase64: false,\n  ext: \"\"\n};\n\nexport const preview = (\n  state = initpreview,\n  action\n) => {\n  switch (action.type) {\n    case ReducersTypes.PREVIEW_DOCUMENT:\n      return { ...state, ...action.payload };\n    case ReducersTypes.RESET_PREVIEW_DOCUMENT:\n      return { ...initpreview };\n    default:\n      return state;\n  }\n};\n\nexport default {\n  snackbar,\n  confirmationbox,\n  email,\n  dynamicformReducer,\n  navigation,\n  preview\n};\n","import { combineReducers } from \"redux\";\nimport login from \"./containers/login/reducer\";\nimport dashboard from \"./containers/dashboard/reducer\";\nimport payables from \"./containers/payables/reducer\";\nimport receivables from \"./containers/receivables/reducer\";\nimport settings from \"./containers/settings/reducer\";\nimport auth from \"./reducers/auth\";\nimport global from \"reducers/global\";\n\nexport default combineReducers({\n  login,\n  auth,\n  dashboard,\n  payables,\n  receivables,\n  settings,\n  ...global,\n});\n","import { applyMiddleware, createStore } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./combineReducers\";\n\nconst middleware = [thunk, createLogger({ collapsed: true, duration: true })];\nexport default createStore(reducers, applyMiddleware(...middleware));\n","import React, { useRef, useEffect } from \"react\";\n\nconst useOutsideAlerter = (ref, onClickAway) => {\n  const handleClickOutside = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      onClickAway && onClickAway(false);\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n}\n\nexport default function ClickAwayListener(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, props.onClickAway);\n\n  return (\n    <div ref={wrapperRef} {...props}>\n      {props.children}\n    </div>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\n// import MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport store from \"store\";\nimport { ReducersTypes } from \"constants/ReducersTypes\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nexport const setsnackbarMsg = data => {\n  store.dispatch({\n    type: ReducersTypes.SNACKBAR_MSG,\n    payload: data\n  });\n};\n\nexport const setsnackbarData = data => {\n  store.dispatch({\n    type: ReducersTypes.SNACKBAR_DATA,\n    payload: data\n  });\n};\n\nexport const resetsnackbar = () => {\n  store.dispatch({\n    type: ReducersTypes.SNACKBAR_RESET\n  });\n};\n\n// function Alert(props) {\n//   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n// }\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  },\n  close: {\n    padding: theme.spacing(0.5)\n  }\n}));\n\nfunction CustomSnackbar(props) {\n  const {\n    snackbar: { msg = \"\", variant = \"info\", onSave }\n  } = props;\n  const classes = useStyles();\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    resetsnackbar();\n  };\n  const bgclass = variantBackgrounds[variant];\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={msg ? true : false}\n      autoHideDuration={onSave ? 20000 : 2000}\n      onClose={handleClose}\n    >\n      <div className={`snackbar-wrapper ${bgclass}`}>\n        <span className=\"snackbar-msg\">{msg}</span>\n        <i onClick={handleClose} className=\"fa fa-times-circle snackbar-closeicon pull-right\" aria-hidden=\"true\" />\n        {onSave && (\n          <i\n            onClick={() => {\n              handleClose();\n              onSave();\n            }}\n            className=\"fa fa-check snackbar-closeicon pull-right mr-3\"\n            aria-hidden=\"true\"\n          />\n        )}\n      </div>\n    </Snackbar>\n  );\n}\n\nconst variantBackgrounds = {\n  success: \"bg-success\",\n  error: \"bg-danger\",\n  warning: \"bg-warning\",\n  info: \"bg-info\"\n};\n\nconst mapStateToProps = state => ({\n  snackbar: state.snackbar\n});\n\nexport default connect(mapStateToProps, null)(CustomSnackbar);\n","import React, { Suspense, lazy } from \"react\";\n\nconst PageRef = lazy(() => import(\"./login\"));\nconst C = (p) => <Suspense fallback=\"\">{p.Child}</Suspense>;\nconst Page = (p) => <C Child={<PageRef {...p} />} />;\nexport default Page;\n","import logo from \"assets/images/logo.jpg\";\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { handleAPIError } from \"handlers/setters\";\nimport { instance, instanceMultipart } from \"actions/axiosInstance\";\nimport TokenManager from \"utils/TokenManager\";\n\nexport function Advanced(props) {\n  const [postdata, setpostdata] = useState({});\n\n  function update(e) {\n    const { name, value } = e.target;\n    setpostdata({ ...postdata, [name]: value });\n  }\n\n  function onSubmit() {\n    // props.changeActiveIndex(2);\n    const { company_type=\"\", industry=\"\", phone=\"\", employee_size=\"\", apspend=\"\", erp_software=\"\" } = postdata;\n    const body =\n      \"<p>New registration,</p><ul>\" +\n      `<li>Company type: ${company_type}</li>` +\n      `<li>Industry: ${industry}</li>` +\n      `<li>Phone: ${phone}</li>` +\n      `<li>Employees size: ${employee_size}</li>` +\n      `<li>Monthly non-payroll AP spend: ${apspend}</li>` +\n      `<li>ERP software: ${erp_software}</li>` +\n      `</ul><p>Thanks,</p><p>${TokenManager.getUserName()}</p>`;\n\n    const postData = { to: \"admin@payference.com\", subject: \"New company details\", message: body };\n    let bodyFormData = new FormData();\n    bodyFormData.set(\"metadata\", JSON.stringify(postData));\n\n    instanceMultipart\n      .post(`sendemail?supplier_id=1`, bodyFormData)\n      .then(response => {\n        props.changeActiveIndex(2);\n      })\n      .catch(err => {\n        props.changeActiveIndex(2);\n        handleAPIError(err);\n      });\n  }\n\n  return (\n    <div className=\"signup-container\">\n      <div className=\"logo\">\n        <img alt=\"loading\" src={logo} height=\"60\" width=\"60\" />\n        <span style={{ color: \"white\" }}> Payference </span>\n      </div>\n\n      <div className=\"form-widget\">\n        <div className=\"inner-form-widget\">\n          <h3\n            className=\"t-global text-center\"\n          >\n            Tell us more about your company\n          </h3>\n          {/* <p className=\"t-global text-center\">It's quick and easy</p> */}\n\n          <form className=\"w-100 mt-3\">\n            <div className=\"col-md-12\">\n              <div className=\"form-group\">\n                <span>\n                  <label>Company type</label>\n                </span>\n                <select name=\"company_type\" onChange={update} className=\"form-control\">\n                  <option value=\"\">Select</option>\n                  <option value=\"private\">Private</option>\n                  <option value=\"public\">Public</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"col-md-12\">\n              <div className=\"form-group\">\n                <span>\n                  <label>Industry</label>\n                </span>\n                <input type=\"text\" name=\"industry\" onChange={update} className=\"form-control\" placeholder=\"Enter ...\" />\n              </div>\n            </div>\n            <div className=\"col-md-12\">\n              <div className=\"form-group\">\n                <span>\n                  <label>Phone</label>\n                </span>\n                <input type=\"text\" name=\"phone\" onChange={update} className=\"form-control\" placeholder=\"Enter ...\" />\n              </div>\n            </div>\n            <div className=\"col-md-12\">\n              <div className=\"form-group\">\n                <span>\n                  <label>Employees size</label>\n                </span>\n\n                <select name=\"employee_size\" onChange={update} className=\"form-control\">\n                  <option value=\"\">Select</option>\n                  <option value=\"1-10\">1-10</option>\n                  <option value=\"11-50\">11-50</option>\n                  <option value=\"51-100\">51-100</option>\n                  <option value=\"101-200\">101-200</option>\n                  <option value=\"201-500\">201-500</option>\n                  <option value=\"501-1000\">501-1000</option>\n                  <option value=\"1000+\">1000+</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"col-md-12\">\n              <div className=\"form-group\">\n                <span>\n                  <label>Monthly non-payroll AP spend</label>\n                </span>\n                <select name=\"apspend\" onChange={update} className=\"form-control\">\n                  <option value=\"\">Select one</option>\n                  <option value=\"$0 - $5,000\">$0 - $5,000</option>\n                  <option value=\"$5,001 - $10,000\">$5,001 - $10,000</option>\n                  <option value=\"$10,001 - $20,000\">$10,001 - $20,000</option>\n                  <option value=\"$20,001 - $50,000\">$20,001 - $50,000</option>\n                  <option value=\"$50,001 - $200,000\">$50,001 - $200,000</option>\n                  <option value=\"$200,001 - $500,000\">$200,001 - $500,000</option>\n                  <option value=\"$500,001+\">$500,001+</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"col-md-12\">\n              <div className=\"form-group\">\n                <span>\n                  <label>ERP software</label>\n                </span>\n                <select name=\"erp_software\" onChange={update} className=\"form-control\">\n                  <option value=\"\">Select one</option>\n                  <option value=\"NetSuite\">NetSuite</option>\n                  <option value=\"QuickBooks Online\">QuickBooks Online</option>\n                  <option value=\"QuickBooks Desktop Pro / Enterprise\">QuickBooks Desktop Pro / Enterprise</option>\n                  <option value=\"Sage Intacct\">Sage Intacct</option>\n                  <option value=\"SAP Cloud ERP\">SAP Cloud ERP</option>\n                  <option value=\"Xero\">Xero</option>\n                  <option value=\"Other\">Other</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"col-md-12\">\n              <div className=\"w-100 text-right\">\n                <Button\n                  className=\"mt-3 mr-3 pull-left width-94px\"\n                  variant=\"secondary\"\n                  onClick={() => {\n                    props.changeActiveIndex(2);\n                  }}\n                >\n                  Skip\n                </Button>\n                <Button className=\"mt-3 width-94px\" variant=\"primary\" onClick={onSubmit}>\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Advanced;\n","import logo from \"assets/images/logo.jpg\";\nimport axios from \"axios\";\nimport get from \"lodash/get\";\nimport cx from \"classnames\";\nimport Toaster from \"components/Toaster\";\nimport Configs from \"constants/Configs\";\nimport { emailRegEx, passwordRegEx } from \"constants/regex\";\nimport { handleAPIError } from \"handlers/setters\";\nimport React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nimport TokenManager from \"utils/TokenManager\";\nimport { instance } from \"actions/axiosInstance\";\n\nclass Login extends Component {\n  state = {\n    showPassword: false,\n    email: {\n      value: \"\",\n      isFocused: false,\n      error: \"\"\n    },\n    company: {\n      value: \"\",\n      isFocused: false,\n      error: \"\"\n    },\n    password: {\n      value: \"\",\n      isFocused: false,\n      error: \"\"\n    },\n    confirmPassword: {\n      value: \"\",\n      isFocused: false,\n      error: \"\"\n    },\n    formError: \"\"\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { password, confirmPassword } = this.state;\n    if (password.value !== confirmPassword.value) {\n      Toaster(\"Passwords not matching\", \"error\");\n      return;\n    }\n    const postdata = {\n      email: this.state.email.value,\n      password: this.state.password.value\n    };\n    if (!(postdata.email && postdata.password)) {\n      return;\n    }\n    axios\n      .post(`${Configs.API_URL}user/addtosandbox`, postdata)\n      .then(response => {\n        axios\n          .get(`${Configs.API_URL}token`, {\n            auth: {\n              username: postdata.email,\n              password: postdata.password\n            }\n          })\n          .then(response => {\n            TokenManager.set(response.data.token, response.data[\"expires at\"]);\n            TokenManager.setUserName(this.state.email.value, response.data[\"id\"]);\n\n            let URL = `/client/user?id=${TokenManager.getUserId()}`;\n            instance.get(URL).then(resp => {\n              const datatemp = {\n                ...response.data,\n                ...get(resp, \"data.result[0]\", {})\n              };\n              TokenManager.setUserData(datatemp);\n              this.props.changeActiveIndex(1);\n            });\n          })\n          .catch(error => {\n            this.setState({\n              formError: \"Invalid Credentials please try again.\"\n            });\n          });\n      })\n      .catch(err => {\n        this.props.changeActiveIndex(1);\n        handleAPIError(err);\n      });\n  };\n\n  onChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: {\n        value,\n        isFocused: true,\n        error: value\n          ? name === \"email\"\n            ? !emailRegEx.test(value)\n              ? \"Email not valid\"\n              : \"\"\n            : name === \"password\"\n            ? !passwordRegEx.test(value)\n              ? \"8 characters, minimum 1 digit\"\n              : \"\"\n            : name === \"confirmPassword\"\n            ? value !== this.state.password.value\n              ? \"Not matching\"\n              : \"\"\n            : \"\"\n          : \"required\"\n      }\n    });\n  };\n\n  onBlurr = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: {\n        value,\n        isFocused: false,\n        error: this.state[name].error\n      }\n    });\n  };\n\n  togglePassword = (type = \"showPassword\") => {\n    this.setState({\n      [type]: !this.state[type]\n    });\n  };\n\n  render() {\n    const { showPassword, email, password, confirmPassword, showConfirmPassword, formError, company } = this.state;\n\n    return (\n      <div className=\"signup-container\">\n        <div className=\"logo\">\n          <img alt=\"loading\" src={logo} height=\"60\" width=\"60\" />\n          <span style={{ color: \"white\" }}> Payference </span>\n        </div>\n        <div className=\"form-widget\">\n          <div className=\"inner-form-widget\">\n            <h3\n              className=\"t-global text-center\"\n            >\n              Create an account\n            </h3>\n            <p className=\"t-global text-center\">It's quick and easy</p>\n\n            <form onSubmit={this.onSubmit}>\n              <div\n                className={cx(\"clearfix field-wrapper mt-4\", {\n                  \"label-active\": email.isFocused,\n                  \"border border-danger\": email.error && !email.isFocused\n                })}\n              >\n                <label className={cx(\"float-left\", { focused: email.isFocused })}>\n                  <span className={cx(\"label\", { focused: email.isFocused })}>Email</span>\n                  <input\n                    type=\"text\"\n                    name=\"email\"\n                    placeholder={!email.isFocused ? \"Email\" : \"\"}\n                    onFocus={this.onChange}\n                    onChange={this.onChange}\n                    onBlur={this.onBlurr}\n                    autoComplete=\"off\"\n                  />\n                </label>\n                <div className=\"float-right\">\n                  <span className=\"helptxt\">{email.error}</span>\n                </div>\n              </div>\n              <div\n                className={cx(\"clearfix field-wrapper\", {\n                  \"label-active\": password.isFocused,\n                  \"border border-danger\": password.error && !password.isFocused\n                })}\n              >\n                <label className={cx(\"float-left\", { focused: password.isFocused })}>\n                  <span className={cx(\"label\", { focused: password.isFocused })}>Password</span>\n                  <input\n                    type={showPassword ? \"text\" : \"password\"}\n                    placeholder={!password.isFocused ? \"Password\" : \"\"}\n                    onFocus={this.onChange}\n                    onChange={this.onChange}\n                    onBlur={this.onBlurr}\n                    name=\"password\"\n                    autoComplete=\"off\"\n                  />\n                </label>\n                <div className=\"float-right\">\n                  <span className=\"helptxt\">{password.error}</span>\n                  {/* <span\n                    style={{ position: \"absolute\", right: 0 }}\n                    className=\"show-hide-toggle\"\n                    role=\"presentation\"\n                    onClick={this.togglePassword}\n                  >\n                    {showPassword ? (\n                      <i className=\"fa fa-eye\" style={{ cursor: \"pointer\", fontSize: \"15px\" }} title=\"Show Password\" />\n                    ) : (\n                      <i\n                        className=\"fa fa-eye-slash\"\n                        style={{ cursor: \"pointer\", fontSize: \"15px\" }}\n                        title=\"Show Password\"\n                      />\n                    )}\n                  </span> */}\n                </div>\n              </div>\n              <div\n                className={cx(\"clearfix field-wrapper\", {\n                  \"label-active\": confirmPassword.isFocused,\n                  \"border border-danger\": confirmPassword.error && !confirmPassword.isFocused\n                })}\n              >\n                <label className={cx(\"float-left\", { focused: confirmPassword.isFocused })}>\n                  <span className={cx(\"label\", { focused: confirmPassword.isFocused })}>Confirm password</span>\n                  <input\n                    type={showConfirmPassword ? \"text\" : \"password\"}\n                    placeholder={!confirmPassword.isFocused ? \"Confirm Password\" : \"\"}\n                    onFocus={this.onChange}\n                    onChange={this.onChange}\n                    onBlur={this.onBlurr}\n                    name=\"confirmPassword\"\n                    autoComplete=\"off\"\n                  />\n                </label>\n                <div className=\"float-right\">\n                  <span className=\"helptxt\">{confirmPassword.error}</span>\n                  <span\n                    style={{ position: \"absolute\", right: 0 }}\n                    className=\"show-hide-toggle\"\n                    role=\"presentation\"\n                    onClick={() => this.togglePassword(\"showConfirmPassword\")}\n                  >\n                    {showConfirmPassword ? (\n                      <i\n                        className=\"fa fa-eye\"\n                        style={{ cursor: \"pointer\", fontSize: \"15px\" }}\n                        title=\"Show Confirm Password\"\n                      />\n                    ) : (\n                      <i\n                        className=\"fa fa-eye-slash\"\n                        style={{ cursor: \"pointer\", fontSize: \"15px\" }}\n                        title=\"Show Confirm Password\"\n                      />\n                    )}\n                  </span>\n                </div>\n              </div>\n              <div className={cx(\"clearfix field-wrapper\", { \"label-active\": company.isFocused })}>\n                <label className={cx(\"float-left\", { focused: company.isFocused })}>\n                  <span className={cx(\"label\", { focused: company.isFocused })}>Company name</span>\n                  <input\n                    type=\"text\"\n                    name=\"company\"\n                    placeholder={!company.isFocused ? \"Company\" : \"\"}\n                    onFocus={this.onChange}\n                    onChange={this.onChange}\n                    onBlur={this.onBlurr}\n                    autoComplete=\"off\"\n                  />\n                </label>\n                <div className=\"float-right\">\n                  <span className=\"helptxt\">{company.error}</span>\n                </div>\n              </div>\n\n              <Button\n                className=\"w-100 mt-3 p-3\"\n                variant=\"primary\"\n                onClick={this.onSubmit}\n                disabled={!confirmPassword.value || confirmPassword.error || password.error || email.error}\n              >\n                Sign up\n              </Button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ login: state });\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\n// export const basic = props => {\n//   return (\n//     <div>\n//       <img className=\"d-block w-100\" src={logo} alt=\"First slide\" />\n//       <Carousel.Caption>\n//       <form onSubmit={this.onSubmit}>\n//             <div className={cx(\"clearfix field-wrapper\", { \"label-active\": email.isFocused })}>\n//               <label className={cx(\"float-left\", { focused: email.isFocused })}>\n//                 <span className={cx(\"label\", { focused: email.isFocused })}>Username</span>\n//                 <input\n//                   type=\"text\"\n//                   name=\"email\"\n//                   placeholder={!email.isFocused ? \"Username\" : \"\"}\n//                   onFocus={this.onChange}\n//                   onChange={this.onChange}\n//                   onBlur={this.onBlurr}\n//                   autoComplete=\"off\"\n//                 />\n//               </label>\n//               <div className=\"float-right\">\n//                 <span className=\"helptxt\">{email.error}</span>\n//               </div>\n//             </div>\n//             <div className={cx(\"clearfix field-wrapper\", { \"label-active\": password.isFocused })}>\n//               <label className={cx(\"float-left\", { focused: password.isFocused })}>\n//                 <span className={cx(\"label\", { focused: password.isFocused })}>Password</span>\n//                 <input\n//                   type={showPassword ? \"text\" : \"password\"}\n//                   placeholder={!password.isFocused ? \"Password\" : \"\"}\n//                   onFocus={this.onChange}\n//                   onChange={this.onChange}\n//                   onBlur={this.onBlurr}\n//                   name=\"password\"\n//                   autoComplete=\"off\"\n//                 />\n//               </label>\n//               <div className=\"float-right\">\n//                 <span className=\"helptxt\">{password.error}</span>\n//                 <span\n//                   style={{ position: \"absolute\", right: 0 }}\n//                   className=\"show-hide-toggle\"\n//                   role=\"presentation\"\n//                   onClick={this.togglePassword}\n//                 >\n//                   {showPassword ? (\n//                     <i className=\"fa fa-eye\" style={{ cursor: \"pointer\", fontSize: \"15px\" }} title=\"Show Password\" />\n//                   ) : (\n//                     <i\n//                       className=\"fa fa-eye-slash\"\n//                       style={{ cursor: \"pointer\", fontSize: \"15px\" }}\n//                       title=\"Show Password\"\n//                     />\n//                   )}\n//                 </span>\n//               </div>\n//             </div>\n//             <div className=\"link-wrapper clearfix\">\n//               <Link to=\"/forgot-password\" className=\"forgot-password float-right t-global\">\n//                 Forgot your password?\n//               </Link>\n//             </div>\n//             <button className=\"button bg-primary-gradient\" type=\"submit\">\n//               Login\n//             </button>\n//           </form>\n\n//       </Carousel.Caption>\n//     </div>\n//   );\n// };\n\n// export default basic;\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table-v6\";\nimport PlaidLink from \"react-plaid-link\";\nimport axios from \"axios\";\nimport { instance } from \"actions/axiosInstance\";\nimport get from \"lodash/get\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Toaster from \"./Toaster\";\nimport fe_config from \"constants/Configs\";\n\nclass CustomPlaidLink extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      allaccounts: [],\n      showModal: false\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOnSuccess = this.handleOnSuccess.bind(this);\n    this.handleOnSuccess = this.handleOnSuccess.bind(this);\n  }\n\n  handleOnSuccess(public_token, metadata) {\n    const postdata = {\n      public_token,\n      accounts: metadata.accounts.map(x => ({\n        account_id: x.id,\n        name: `${get(metadata, \"institution.name\", \"\")} - ${x.name}`\n      }))\n    };\n    instance\n      .put(\"bankaccount\", postdata)\n      .then(() => {\n        Toaster(\"Accounts Added successfully\", \"success\");\n        this.setState({ showModal: false });\n        this.props.getAccount && this.props.getAccount();\n      });\n\n    // send token to client server\n    // instance\n    //   .get(`plaid/accounts?public_token=${public_token}`, {\n    //     public_token: public_token\n    //   })\n    //   .then(resp => {\n    //     this.props.getAccount();\n    //     // this.setState({ public_token, allaccounts: get(resp, \"data.accounts.accounts\", []), showModal: true });\n    //   });\n  }\n\n  saveAccounts = () => {\n    const { public_token } = this.state;\n    const selectedAccounts = get(this.state, \"allaccounts\", []).filter(x => x.isselected);\n    if (!get(selectedAccounts, \"[0]\", \"\")) {\n      return;\n    }\n    const postdata = {\n      public_token,\n      accounts: selectedAccounts.map(x => ({\n        account_id: x.account_id,\n        name: x.name\n      }))\n    };\n    instance\n      .put(\"bankaccount\", postdata)\n      .then(() => {\n        Toaster(\"Accounts Added successfully\", \"success\");\n        this.setState({ showModal: false });\n      });\n  };\n\n  handleOnExit() {\n    // handle the case when your user exits Link\n    // For the sake of this tutorial, we're not going to be doing anything here.\n  }\n\n  handleClick(res) {\n    axios.get(\"/transactions\").then(res => {\n      this.setState({ transactions: res.data });\n    });\n  }\n\n  setallaccounts = acc => {\n    this.setState({ allaccounts: acc });\n  };\n\n  render() {\n    const { showModal, allaccounts } = this.state;\n\n    const columns = [\n      {\n        Header: (\n          <input\n            className=\"md-checkbox bg-white\"\n            type=\"checkbox\"\n            onChange={() => {\n              const newvalue = !(allaccounts && !allaccounts.find(x => !x.isselected));\n              this.setallaccounts(allaccounts.map(x => ({ ...x, isselected: newvalue })));\n            }}\n            checked={get(allaccounts, \"[0]\", \"\") && !allaccounts.find(x => !x.isselected)}\n          />\n        ),\n        accessor: \"isselected\",\n        Cell: props => (\n          <div\n            className=\" bg-white text-secondary\"\n            onClick={e => {\n              e.stopPropagation();\n              const newvalue = !props.value;\n              const updatedallaccounts = [...allaccounts];\n              updatedallaccounts[props.index][\"isselected\"] = newvalue;\n              this.setallaccounts(updatedallaccounts);\n            }}\n          >\n            <input\n              className=\"md-checkbox\"\n              style={{ marginLeft: 15 }}\n              type=\"checkbox\"\n              defaultChecked={props.value}\n              checked={props.value}\n            />\n          </div>\n        ),\n        sortable: false,\n        filterable: false,\n        width: 50\n      },\n      {\n        Header: \"Select all\",\n        accessor: \"name\",\n        Cell: data => get(data, \"value\", \"\")\n      }\n    ];\n\n    return (\n      <div className=\"mt-2 p-1\">\n        <Modal show={showModal} size=\"md\" onHide={() => this.setState({ showModal: false })} className=\"mt-4\">\n          <Modal.Header closeButton>\n            <Modal.Title className=\"h6\">Select Accounts</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <ReactTable\n              noDataText=\"No data found\"\n              minRows={allaccounts.length > 10 ? 10 : allaccounts.length}\n              resizable={true}\n              showPagination={false}\n              // getTrProps={(state, rowInfo, column) => ({\n              //   onClick: e => {\n              //     window.open(`${window.location.origin}/payables/${get(rowInfo.original, \"id\", \"-\")}`, \"_self\");\n              //   }\n              // })}\n              columns={columns}\n              data={allaccounts || []}\n            />\n          </Modal.Body>\n          <Modal.Footer closeButton>\n            <Button onClick={this.saveAccounts}>Connect</Button>\n          </Modal.Footer>\n        </Modal>\n\n        <PlaidLink\n          clientName=\"React Plaid Setup\"\n          env={fe_config.PLAID_env}\n          product={[\"transactions\"]}\n          publicKey={fe_config.PLAID_publicKey}\n          onExit={this.handleOnExit}\n          onSuccess={this.handleOnSuccess}\n          classNaCustomPlaidLinkme=\"test\"\n          className=\"width-200px\"\n        >\n          Connect Bank Account\n        </PlaidLink>\n        {/* <div>\n          <button onClick={this.handleClick}>Get Transactions</button>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default CustomPlaidLink;\n","import logo from \"assets/images/logo.jpg\";\nimport ClickAwayListener from \"components/ClickAwayListener\";\nimport CustomPlaidLink from \"components/CustomPlaidLink\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport TokenManager from \"utils/TokenManager\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { logout } from \"handlers/setters\";\n\nexport const Linkaccounts = props => {\n  const [showpopup, setshowpopup] = React.useState(false);\n  const [showModal, setshowModal] = React.useState(false);\n  const username = TokenManager.getUserName() || \"-\";\n\n  return (\n    <div className=\"link-account-page\">\n      <Modal show={showModal} size=\"md\" onHide={() => setshowModal(false)} className=\"mt-4\">\n        <Modal.Header closeButton>\n          {/* <Modal.Title className=\"h6\">Finish setup</Modal.Title> */}\n          <div className=\"row mt-3 ml-3\">\n            <div className=\"col-md-12 text-center\">\n              <img alt=\"loading\" src={logo} height=\"60\" width=\"60\" />\n            </div>\n            <div className=\"col-md-12 text-center\">\n              <h2>Thank you</h2>\n            </div>\n            <div className=\"col-md-12 text-center\">\n              <div className=\"form-group\">\n                <span>\n                  <label>To finish setup, contact us at </label>\n                  <strong> contact@payference.com</strong>\n                </span>\n              </div>\n            </div>\n          </div>\n        </Modal.Header>\n      </Modal>\n      <div className=\"row w-100\" id=\"topHeader2\">\n        <div className=\"logop-expanded switchButton p-3\">\n          <img className=\"logo\" src={logo} alt=\"loading\" />\n          Payference\n        </div>\n        <div className=\"col mp-0\">\n          <div className=\"row mp-0\">\n            <div className=\"col-md-8\">\n              <form className=\"navbar-form navbar-left searchform\">\n                <div className=\"input-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"searchbar\"\n                    placeholder=\"Search for an invoice, customer or vendor\"\n                  />\n                  <div className=\"input-group-btn\">\n                    <button className=\"btn btn-default\" type=\"submit\" id=\"searchButton\">\n                      <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"pull-right\">\n                <div className=\"dropdown pull-right\">\n                  <div\n                    className=\"btn cursour-pointer\" // dropdown-toggle for down arrow icon\n                    to=\"#\"\n                    role=\"button\"\n                    id=\"profile\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                    onClick={() => setshowpopup(!showpopup)}\n                  >\n                    <div className=\"text-icon-big rounded-circle\">{username[0]}</div>\n                  </div>\n                  <ClickAwayListener onClickAway={setshowpopup}>\n                    <div\n                      className={`dropdown-menu ${showpopup && \"open-profilepic-menu show\"}`}\n                      id=\"profilebox\"\n                      aria-labelledby=\"dropdownMenuLink\"\n                    >\n                      <div className=\"text-icon-big rounded-circle\">{username[0]}</div>\n                      <p className=\"text-center\">{username}</p>\n                      <div className=\"row\" id=\"dtwrapper\">\n                        {/* <div className=\"col-md-6\">\n                            <Link onClick={() => setshowpopup(false)} to=\"/settings/profile\">\n                              Profile\n                            </Link>\n                          </div> */}\n                        <div className=\"col-md-12 align-right\">\n                          <Link\n                            disabled\n                            onClick={() => {\n                              setshowpopup(false);\n                              logout();\n                            }}\n                          >\n                            Signout\n                          </Link>\n                        </div>\n                      </div>\n                    </div>\n                  </ClickAwayListener>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"form-widget\">\n        <div className=\"inner-form-widget\">\n          <div className=\"w-100\">\n            <div className=\"my-auto w-100\">\n              <h3 className=\"t-global text-center\">Lets connect your bank account</h3>\n              <div className=\"w-100 text-center\">\n                <CustomPlaidLink disabled />\n              </div>\n              <div className=\"w-100 mt-3\" style={{ minHeight: 55 }}>\n                <Button\n                  className=\"mt-3 width-200px pull-left\"\n                  variant=\"secondary\"\n                  onClick={() => {\n                    props.changeActiveIndex(1);\n                  }}\n                >\n                  Edit company details\n                </Button>\n                <Button\n                  className=\"mt-3 width-200px pull-right\"\n                  variant=\"primary\"\n                  onClick={() => {\n                    setshowModal(true);\n                  }}\n                >\n                  Finish setup\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Linkaccounts;\n","import { instance } from \"actions/axiosInstance\";\nimport axios from \"axios\";\nimport Configs from \"constants/Configs\";\nimport get from \"lodash/get\";\nimport React, { Component } from \"react\";\nimport { Carousel } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport TokenManager from \"utils/TokenManager\";\nimport Advanced from \"./advanced.js\";\nimport Basic from \"./basic.js\";\nimport LinkAccounts from \"./linkaccounts.js\";\nimport \"./style.scss\";\nconst activeIndexClasses = {\n  0: { classes: \"\", styles: {} },\n  1: { classes: \"\", styles: {} },\n  2: { classes: \"\", styles: {} }\n};\n\nclass Login extends Component {\n  state = {\n    showPassword: false,\n    email: {\n      value: \"\",\n      isFocused: false,\n      error: \"\"\n    },\n    password: {\n      value: \"\",\n      isFocused: false,\n      error: \"\"\n    },\n    formError: \"\",\n    activeIndex: 0\n  };\n\n  componentDidMount() {\n    const data = JSON.parse(TokenManager.getUserData());\n    if(get(data, \"client_id\", \"\") == 10) {\n      this.setState({ activeIndex: 2 })\n    }\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    return;\n    const { email, password } = e.target.elements;\n\n    this.setState(\n      {\n        email: {\n          value: email.value,\n          isFocused: false,\n          error: !email.value ? \"required\" : \"\"\n        },\n        password: {\n          value: password.value,\n          isFocused: false,\n          error: !password.value ? \"required\" : \"\"\n        }\n      },\n      () => {\n        const { email, password } = this.state;\n        if (email.value && password.value) {\n          axios\n            .get(`${Configs.API_URL}token`, {\n              auth: {\n                username: this.state.email.value,\n                password: this.state.password.value\n              }\n            })\n            .then(response => {\n              TokenManager.set(response.data.token, response.data[\"expires at\"]);\n              TokenManager.setUserName(this.state.email.value, response.data[\"id\"]);\n\n              let URL = `/client/user?id=${TokenManager.getUserId()}`;\n              instance\n                .get(URL, {\n                  auth: {\n                    username: TokenManager.get(),\n                    password: Math.random().toString(20)\n                  }\n                })\n                .then(resp => {\n                  const datatemp = {\n                    ...response.data,\n                    ...get(resp, \"data.result[0]\", {})\n                  };\n                  TokenManager.setUserData(datatemp);\n\n                  if (!response.data.status) {\n                    this.props.history.push(\"/reset-password\");\n                  } else {\n                    window.location.reload();\n                  }\n                });\n            })\n            .catch(error => {\n              this.setState({\n                formError: \"Invalid Credentials please try again.\"\n              });\n            });\n        }\n      }\n    );\n  };\n\n  onChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: {\n        value,\n        isFocused: true,\n        error: !value ? \"required\" : \"\"\n      }\n    });\n  };\n\n  onBlurr = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: {\n        value,\n        isFocused: false,\n        error: this.state[name].error\n      }\n    });\n  };\n\n  togglePassword = () => {\n    this.setState({\n      showPassword: !this.state.showPassword\n    });\n  };\n\n  changeActiveIndex = index => {\n    this.setState({ activeIndex: index });\n  };\n\n  render() {\n    const { showPassword, email, password, formError, activeIndex } = this.state;\n\n    return (\n      <div style={activeIndexClasses[activeIndex].styles} className={`signuppage`}>\n      \n          <div>\n            <Carousel className=\"w-100\" slide={false} activeIndex={activeIndex} indicators={false}>\n              <Carousel.Item>\n                <Basic changeActiveIndex={this.changeActiveIndex} />\n              </Carousel.Item>\n\n              <Carousel.Item className=\"\">\n                <Advanced changeActiveIndex={this.changeActiveIndex} />\n              </Carousel.Item>\n\n              <Carousel.Item>\n                <LinkAccounts changeActiveIndex={this.changeActiveIndex} />\n              </Carousel.Item>\n            </Carousel>\n          </div>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ login: state });\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport cx from 'classnames';\nimport { instance } from \"../../actions/axiosInstance\";\nimport If from 'components/If';\nimport logo from \"assets/images/logo.jpg\";\nimport './style.css';\nclass ForgotPassword extends Component {\n  state = {\n    email: {\n      value: \"\",\n      isFocused: false,\n      error: \"\"\n    },\n    formError: ''\n  };\n\n  componentDidMount() {\n    document.title = \"Forgot Password - Payference\";\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const {\n      email,\n    } = e.target.elements;\n\n    this.setState({\n      email: {\n        value: email.value,\n        isFocused: false,\n        error: !email.value ? 'required' : ''\n      },\n    }, () => {\n      const {\n        email,\n      } = this.state;\n      if (email.value) {\n        instance.post('/forgotpassword', {\n            email: this.state.email.value,\n          }).then((response) => {\n            alert(`We emailed a password reset link to ${email.value}. Please follow the instructions in that email.`)\n          this.props.history.push('/login');\n        }).catch((error) => {\n          this.setState({\n            formError: 'Invalid Credentials please try again.'\n          });\n        });\n      }\n    });\n  }\n\n  onChange = (e) => {\n    const {\n      name,\n      value,\n    } = e.target;\n    this.setState({\n      [name]: {\n        value,\n        isFocused: true,\n        error: !value ? 'required' : '',\n      }\n    });\n  }\n\n  onBlurr = (e) => {\n    const {\n      name,\n      value,\n    } = e.target;\n    this.setState({\n      [name]: {\n        value,\n        isFocused: false,\n        error: this.state[name].error,\n      }\n    });\n  }\n\n  togglePassword = () => {\n    this.setState({\n      showPassword: !this.state.showPassword,\n    })\n  }\n\n  render() {\n    const {\n      email,\n      formError,\n    } = this.state;\n\n    return (\n      <div className=\"loginpage-container\">\n        <div className=\"logo\">\n          <img alt=\"loading\" src={logo} height=\"60\" width=\"60\" />\n          <span style={{ color: \"white\" }}> Payference </span>\n        </div>\n        <div className=\"form-widget\">\n          <h2 className=\"title\">Forgot password</h2>\n          <p className=\"text-center\">Please enter your email address, and we will send you a link to reset your password</p>\n          <If condition={formError}>\n            <span className=\"form-error\">{formError}</span>\n          </If>\n          <form onSubmit={this.onSubmit}>\n            <div className={cx(\"clearfix field-wrapper\", { \"label-active\": email.isFocused })}>\n              <label className={cx(\"float-left\", { focused: email.isFocused })}>\n                <span className={cx(\"label\", { focused: email.isFocused })}>Email address</span>\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder={!email.isFocused ? \"Email address\" : \"\"}\n                  onFocus={this.onChange}\n                  onChange={this.onChange}\n                  onBlur={this.onBlurr}\n                  autoComplete=\"off\"\n                />\n              </label>\n              <div className=\"float-right\">\n                <span className=\"helptxt\">{email.error}</span>\n              </div>\n            </div>\n            <div className=\"link-wrapper text-center\">\n              <Link to=\"/login\" className=\"forgot-password\">Back to login</Link>\n            </div>\n            <button className=\"button\" type=\"submit\">Submit</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ login: state });\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ForgotPassword);\n","import React, { Component } from \"react\";\nimport cx from \"classnames\";\nimport get from \"lodash/get\";\nimport { instance } from \"../../actions/axiosInstance\";\nimport If from \"components/If\";\nimport logo from \"assets/images/logo.jpg\";\nimport \"../forgetPassword/style.css\";\nimport TokenManager from \"utils/TokenManager\";\nimport { getParameterByName } from \"utils\";\nimport { passwordRegEx } from \"constants/regex\";\n\nclass ResetPassword extends Component {\n  state = {\n    password: {\n      value: \"\",\n      isFocused: false,\n      error: \"\"\n    },\n    confirmPassword: {\n      value: \"\",\n      isFocused: false,\n      error: \"\"\n    },\n    showPassword: false,\n    showConfirmPassword: false,\n    formError: \"\",\n    urlToken: getParameterByName(\"token\")\n  };\n\n  componentDidMount() {\n    document.title = \"Reset Password - Payference\";\n    if (this.state.urlToken) {\n      instance\n        .get(\"/token\", {\n          auth: {\n            username: this.state.urlToken,\n            password: Math.random().toString(20)\n          }\n        })\n        .then(response => {\n          TokenManager.set(response.data.token, response.data[\"expires at\"]);\n          TokenManager.setUserName(response.data.username, response.data[\"id\"]);\n\n          let URL = `/client/user?id=${response.data.id}`;\n          instance.get(URL).then(resp => {\n            const datatemp = {\n              ...response.data,\n              ...get(resp, \"data.result[0]\", {})\n            };\n            TokenManager.setUserData(datatemp);\n\n            if (!response.data.status) {\n              this.props.history.push(\"/reset-password\");\n            } else {\n              // window.location.reload();\n            }\n          });\n        });\n    }\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { password, confirmPassword } = e.target.elements;\n\n    this.setState(\n      {\n        password: {\n          value: password.value,\n          isFocused: false,\n          error: !password.value ? \"required\" : this.state.password.error\n        },\n        confirmPassword: {\n          value: confirmPassword.value,\n          isFocused: false,\n          error: !confirmPassword.value ? \"required\" : this.state.password.error\n        }\n      },\n      () => {\n        const { password, confirmPassword } = this.state;\n        if (password.value && confirmPassword.value && !password.error && !confirmPassword.error) {\n          instance\n            .post(\n              \"/user/setpassword\",\n              {\n                password: this.state.password.value\n              },\n              {\n                auth: {\n                  username: TokenManager.get(),\n                  password: this.state.password.value\n                }\n              }\n            )\n            .then(() => {\n              alert(\"Password reset successful.\");\n              this.props.history.push(\"/dashboard\");\n            })\n            .catch(error => {\n              this.setState({\n                formError: \"Something went wrong please try again.\"\n              });\n            });\n        }\n      }\n    );\n  };\n\n  onChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: {\n        value,\n        isFocused: true,\n        error: \"\"\n      }\n    });\n  };\n\n  onBlurr = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: {\n        value,\n        isFocused: false,\n        error: value\n          ? name === \"password\"\n            ? !passwordRegEx.test(value)\n              ? \"8 characters, minimum 1 digit\"\n              : \"\"\n            : name === \"confirmPassword\"\n            ? this.state.password.value !== value\n              ? \"Not matching\"\n              : \"\"\n            : \"\"\n          : \"required\"\n      }\n    });\n  };\n\n  chechPasswordEquality = () => {\n    const { password, confirmPassword } = this.state;\n    if (!confirmPassword.value) {\n      return \"\";\n    }\n    if (password.value !== confirmPassword.value) {\n      return \"Password does't match\";\n    }\n    return \"\";\n  };\n\n  togglePassword = () => {\n    this.setState({\n      showPassword: !this.state.showPassword\n    });\n  };\n\n  checkPasswordStrength = password => {\n    return \"\";\n    // return password ? \"8 characters, minimum 1 digit\" : \"\";\n    // if(password.length !== 8) {\n    //   return 'Password should contain minimum 8 characters';\n    // }\n    // if (!(/[a-zA-Z]/.test(password))) {\n    //   return 'Password should contain atleast 1 character';\n    // }\n    // if (!(/\\d/.test(password))) {\n    //   return 'Password should contain atleast 1 digit';\n    // }\n  };\n\n  render() {\n    const { password, formError, urlToken, confirmPassword, showConfirmPassword, showPassword } = this.state;\n\n    return (\n      <div className=\"loginpage-container\">\n        <div className=\"logo\">\n          <img alt=\"loading\" src={logo} height=\"60\" width=\"60\" />\n          <span style={{ color: \"white\" }}> Payference </span>\n        </div>\n        <div className=\"form-widget\">\n          <h2 className=\"title\">Enter Password</h2>\n          {urlToken ? null : (\n            <p className=\"text-center\">\n              Welcome to Payference! please select a password to get started\n            </p>\n          )}\n          <If condition={formError}>\n            <span className=\"form-error\">{formError}</span>\n          </If>\n          <form onSubmit={this.onSubmit}>\n            <div\n              className={cx(\"clearfix field-wrapper\", {\n                \"label-active\": password.isFocused,\n                \"border border-danger\": password.error && !password.isFocused\n              })}\n            >\n              <label className={cx(\"float-left\", { focused: password.isFocused })}>\n                <span className={cx(\"label\", { focused: password.isFocused })}>Password</span>\n                <input\n                  type={showPassword ? \"text\" : \"password\"}\n                  name=\"password\"\n                  placeholder={!password.isFocused ? \"8 characters, minimum 1 digit\" : \"\"}\n                  onFocus={this.onChange}\n                  onChange={this.onChange}\n                  onBlur={this.onBlurr}\n                  autoComplete=\"off\"\n                />\n              </label>\n              <div className=\"float-right\">\n                <span className=\"helptxt\">{password.error}</span>\n                {/* <span\n                  className=\"show-hide-toggle\"\n                  role=\"presentation\"\n                  onClick={() => this.setState({ showPassword: !showPassword })}\n                >\n                  {showPassword ? (\n                    <i className=\"fa fa-eye\" style={{ cursor: \"pointer\", fontSize: \"15px\" }} title=\"Show Password\" />\n                  ) : (\n                    <i\n                      className=\"fa fa-eye-slash\"\n                      style={{ cursor: \"pointer\", fontSize: \"15px\" }}\n                      title=\"Show Password\"\n                    />\n                  )}\n                </span> */}\n              </div>\n            </div>\n            <div\n              className={cx(\"clearfix field-wrapper\", {\n                \"label-active\": confirmPassword.isFocused,\n                \"border border-danger\": confirmPassword.error && !confirmPassword.isFocused\n              })}\n            >\n              <label className={cx(\"float-left\", { focused: confirmPassword.isFocused })}>\n                <span className={cx(\"label\", { focused: confirmPassword.isFocused })}>Confirm Password</span>\n                <input\n                  type={showConfirmPassword ? \"text\" : \"password\"}\n                  name=\"confirmPassword\"\n                  placeholder={!confirmPassword.isFocused ? \"Confirm Password\" : \"\"}\n                  onFocus={this.onChange}\n                  onChange={this.onChange}\n                  onBlur={this.onBlurr}\n                  autoComplete=\"off\"\n                />\n              </label>\n              <div className=\"float-right\">\n                <span className=\"helptxt\">{confirmPassword.error}</span>\n                <span\n                  className=\"show-hide-toggle\"\n                  role=\"presentation\"\n                  onClick={() => this.setState({ showConfirmPassword: !showConfirmPassword })}\n                >\n                  {showConfirmPassword ? (\n                    <i className=\"fa fa-eye\" style={{ cursor: \"pointer\", fontSize: \"15px\" }} title=\"Show Password\" />\n                  ) : (\n                    <i\n                      className=\"fa fa-eye-slash\"\n                      style={{ cursor: \"pointer\", fontSize: \"15px\" }}\n                      title=\"Show Password\"\n                    />\n                  )}\n                </span>\n              </div>\n            </div>\n            <button\n              className=\"btn btn-primary w-100 p-3 mt-2\"\n              type=\"submit\"\n              disabled={!confirmPassword.value || confirmPassword.error || password.error }\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ResetPassword;\n","import React, { Suspense, lazy } from \"react\";\n\nconst PageRef = lazy(() => import(\"./backlog\"));\nconst C = (p) => <Suspense fallback=\"\">{p.Child}</Suspense>;\nconst Page = (p) => <C Child={<PageRef {...p} />} />;\nexport default Page;\n","import React, { Suspense, lazy } from \"react\";\n\nconst PageRef = lazy(() => import(\"./backlog\"));\nconst C = (p) => <Suspense fallback=\"\">{p.Child}</Suspense>;\nconst Page = (p) => <C Child={<PageRef {...p} />} />;\nexport default Page;\n","import React, { Suspense, lazy } from \"react\";\n\nconst PageRef = lazy(() => import(\"./customers\"));\nconst C = (p) => <Suspense fallback=\"\">{p.Child}</Suspense>;\nconst Page = (p) => <C Child={<PageRef {...p} />} />;\nexport default Page;\n","import React, { Suspense, lazy } from \"react\";\n\nconst PageRef = lazy(() => import(\"./reports\"));\nconst C = (p) => <Suspense fallback=\"\">{p.Child}</Suspense>;\nconst Page = (p) => <C Child={<PageRef {...p} />} />;\nexport default Page;\n","import React, { Suspense, lazy } from \"react\";\n\nconst PageRef = lazy(() => import(\"./insights\"));\nconst C = (p) => <Suspense fallback=\"\">{p.Child}</Suspense>;\nconst Page = (p) => <C Child={<PageRef {...p} />} />;\nexport default Page;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./payroll.css\"\nimport fe_config from \"constants/Configs\";\n\nexport class Entity extends Component {\n  render() {\n    return (\n      <div className=\"row px-15\" id=\"dashboardBody\">\n        <div className=\"col-md-12\">\n          <div className=\"card\">\n            <div className=\"card-body payrollmanage\">\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <form action=\"\" method=\"post\">\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <div style={{ clear: \"both\" }}>\n                          <div\n                            className=\"titletranshist\"\n                            style={{ fontSize: \"18px\", paddingBottom: \"15px\", float: \"left\" }}\n                          >\n                            <Link to=\"/settings\" key=\"back\">\n                              <i className=\"fa fa-arrow-left\" style={{ color: \"#ddd\", marginRight: \"5px\" }} />{\" \"}\n                            </Link>\n                            &nbsp;Payroll - Entity\n                          </div>\n                          <div className=\"dropdown float-right\">\n                            {fe_config.MODE === \"DEV\" && <a\n                              className=\"btn dropdown-toggle btn-primary\"\n                              href=\"#\"\n                              role=\"button\"\n                              id=\"export\"\n                              data-toggle=\"dropdown\"\n                              aria-haspopup=\"true\"\n                              aria-expanded=\"false\"\n                            >\n                              Export\n                            </a>}\n                            <div\n                              className=\"dropdown-menu dropdown-menu-right\"\n                              aria-labelledby=\"dropdownMenuLink\"\n                              id=\"exportlist\"\n                            >\n                              <a href=\"#\">Export CSV</a>\n                              <a href=\"#\">Export Excel</a>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-12\">\n                        <div className=\"divider\"></div>\n                        <div className=\"\">\n                          <div className=\"titletranshist\" style={{ fontSize: 18, marginBottom: 15 }}>\n                            Add Entity\n                          </div>\n\n                          <div className=\"row\">\n                            <div className=\"col-md-4\">\n                              <div className=\"form-group\">\n                                <label>Entity</label>\n                                <input type=\"text\" name=\"\" className=\"form-control\" placeholder=\"Enter ...\" />\n                              </div>\n                            </div>\n                            <div className=\"col-md-8\">\n                              <div className=\"form-group\" style={{ textAlign: \"right\", marginTop: 30 }}>\n                                <button className=\"btn btn-primary payrollsumbtn\">Submit</button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-12\">\n                        <div className=\"divider\"></div>\n                        <div className=\"\">\n                          <div className=\"titletranshist\" style={{ fontSize: 18, marginBottom: 15 }}>\n                            List of entity\n                          </div>\n                          <form action=\"\" method=\"post\">\n                            <div className=\"payrolltable\">\n                              <table>\n                                <tbody>\n                                  <tr>\n                                    <th>Sr no.</th>\n                                    <th>Entity</th>\n                                    <th>Edit</th>\n                                    <th>Delete</th>\n                                  </tr>\n                                  <tr>\n                                    <td>1</td>\n                                    <td>Entity One</td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> Edit\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Delete\n                                      </a>\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>2</td>\n                                    <td>Entity Two</td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> Edit\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Delete\n                                      </a>\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>3</td>\n                                    <td>Entity Three</td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> Edit\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Delete\n                                      </a>\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>4</td>\n                                    <td>Entity Four</td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> Edit\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Delete\n                                      </a>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </div>\n                          </form>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Entity);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./payroll.css\";\nimport { instance } from \"actions/axiosInstance\";\nimport {handleAPIError } from \"handlers/setters\";\nimport get from \"lodash/get\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport { setconfirmationboxData, resetconfirmationboxData } from \"components/ConfirmationBox\";\n\nconst POSTDATA = { ...{ name: null, currency: null } };\nexport class Entity extends Component {\n  state = {\n    postdata: null,\n    allentities: [],\n    line: '',\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    this.getdata();\n  }\n\n  updatepostdata = (e) => {\n    this.setState({\n      postdata: {\n        ...this.state.postdata,\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n\n  deleteRecord = (id) => {\n    setconfirmationboxData({\n      variant: \"warning\",\n      msg: \"Are you sure you want to delete this Entity?\",\n      onSave: () => {\n        resetconfirmationboxData();\n        instance.delete(\n          `payroll/delete?id=${id}`\n        )\n        .then(() => this.getdata())\n        .catch(e => handleAPIError(e));\n      }\n    });\n  };\n\n  onSubmit = () => {\n    const { postdata: {name, currency, id}, line } = this.state;\n    if (!(name && currency)) {\n      return;\n    }\n    const postData = {\n      records: [this.state.postdata]\n    };\n    if (line !== 'new') {\n      instance\n        .put(`payroll/setting?id=${id}`, postData)\n        .then(() => {\n          this.setState({ postdata: null, line: '' });\n          this.getdata();\n        })\n        .catch(e => handleAPIError(e));\n    } else {\n      instance\n        .put(`payroll/setting`, postData)\n        .then(() => {\n          this.setState({ postdata: null, line: '' });\n          this.getdata();\n        })\n        .catch(e => handleAPIError(e));\n    }\n  };\n\n  getdata = () => {\n    instance\n      .get(\"payroll/setting\")\n      .then(resp => {\n        this.setState({ allentities: get(resp, \"data.result\", []), isLoading: false });\n      })\n      .catch(e => handleAPIError(e));\n  };\n\n  renderEditableRow = (prevData) => {\n    return(\n      <tr>\n        <td>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              name=\"name\"\n              className=\"form-control\"\n              placeholder=\"Enter ...\"\n              onChange={e => this.updatepostdata(e)}\n              defaultValue={get(prevData, \"name\", \"\")}\n            />\n          </div>\n        </td>\n        <td>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              name=\"currency\"\n              className=\"form-control\"\n              placeholder=\"Enter ...\"\n              onChange={e => this.updatepostdata(e)}\n              defaultValue={get(prevData, \"currency\", \"\")}\n            />\n          </div>\n        </td>\n        <td>\n          <div className=\"form-group\">\n            <div className=\"btn payrollsumbtn cursor-pointer\" onClick={this.onSubmit}>\n              <i className=\"fa fa-save color-blue\" />\n            </div>\n            <div\n              onClick={() => this.setState({ postdata: null, line: '' })}\n              className=\"btn mr-3 cursor-pointer\"\n            >\n              <i className=\"fa fa-remove color-blue\" />\n            </div>\n          </div>\n        </td>\n      </tr>\n    );\n  };\n\n  render() {\n    const { postdata, line, allentities = [], isLoading } = this.state;\n    return (\n      <div className=\"row px-15\" id=\"dashboardBody\">\n        <div className=\"col-md-12\">\n          <div className=\"card\">\n            <div className=\"card-body payrollmanage\">\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <form action=\"\" method=\"post\">\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <div style={{ clear: \"both\" }}>\n                          <div\n                            className=\"titletranshist\"\n                            style={{ fontSize: \"18px\", paddingBottom: \"15px\", float: \"left\" }}\n                          >\n                            <Link to=\"/settings\" key=\"back\">\n                              <i className=\"fa fa-arrow-left\" style={{ color: \"#ddd\", marginRight: \"5px\" }} />{\" \"}\n                            </Link>\n                            &nbsp;Payroll - Entity\n                          </div>\n                          {/* <div className=\"dropdown float-right\">\n                            <a\n                              className=\"btn dropdown-toggle btn-primary\"\n                              href=\"#\"\n                              role=\"button\"\n                              id=\"export\"\n                              data-toggle=\"dropdown\"\n                              aria-haspopup=\"true\"\n                              aria-expanded=\"false\"\n                            >\n                              Export\n                            </a>\n                            <div\n                              className=\"dropdown-menu dropdown-menu-right\"\n                              aria-labelledby=\"dropdownMenuLink\"\n                              id=\"exportlist\"\n                            >\n                              <a href=\"#\">Export CSV</a>\n                              <a href=\"#\">Export Excel</a>\n                            </div>\n                          </div> */}\n                        </div>\n                      </div>\n                      <ClickAwayListener onClickAway={() => line === 'new' ? this.setState({ postData: null, line: '' }) : this.onSubmit()}>\n                        <div className=\"col-md-12\">\n                          <div className=\"titletranshist\" style={{ fontSize: 18, marginBottom: 15 }}>\n                            {!line && (\n                              <React.Fragment>\n                                <span>Entity</span>\n                                <i\n                                  onClick={e => {\n                                    e.stopPropagation();\n                                    this.setState({ postdata: POSTDATA, line: 'new' });\n                                  }}\n                                  className=\"fa fa-plus cashinflowclick\"\n                                  title=\"Click to add item\"\n                                  aria-hidden=\"true\"\n                                />\n                              </React.Fragment>\n                            )}\n                          </div>\n                          <div className=\"\">\n                            <div className=\"titletranshist\" style={{ fontSize: 18, marginBottom: 15 }}>\n                              List of entity\n                            </div>\n                            <form action=\"\" method=\"post\">\n                              <div className=\"payrolltable\">\n                                <table>\n                                  <tbody>\n                                    <tr>\n                                      <th>Entity</th>\n                                      <th>Currency</th>\n                                      <th>Action</th>\n                                    </tr>\n                                    {\n                                      isLoading ? <tr><td colspan=\"3\" className=\"text-center\">Loading..</td></tr> : null\n                                    }\n                                    {\n                                      line === 'new' ? this.renderEditableRow() : null\n                                    }\n                                    {\n                                      allentities &&\n                                      allentities.map((entity, d) => {\n                                        if(line === d) {\n                                          return this.renderEditableRow(postdata)\n                                        }\n                                        return(\n                                          <tr className=\"cursor-pointer\" title=\"Edit\" onClick={() => { this.setState({ postdata: entity, line: d }) }}>\n                                            <td>{entity.name}</td>\n                                            <td>{entity.currency}</td>\n                                            <td>{/* <i onClick={e => {e.stopPropagation(); this.deleteRecord(entity.id)}} className=\"fa fa-trash cursor-pointer color-blue\" title=\"Delete\" /> */}</td>\n                                          </tr>\n                                        )\n                                      })\n                                    }\n                                  </tbody>\n                                </table>\n                              </div>\n                            </form>\n                          </div>\n                        </div>\n                      </ClickAwayListener>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Entity);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./payroll.css\"\n\nexport class Entity extends Component {\n  render() {\n    return (\n      <div className=\"row px-15\" id=\"dashboardBody\">\n        <div className=\"col-md-12\">\n          <div className=\"card\">\n            <div className=\"card-body payrollmanage\">\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <form action=\"\" method=\"post\">\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <div style={{ clear: \"both\" }}>\n                          <div\n                            className=\"titletranshist\"\n                            style={{ fontSize: \"18px\", paddingBottom: \"15px\", float: \"left\" }}\n                          >\n                            <Link to=\"/settings\" key=\"back\">\n                              <i className=\"fa fa-arrow-left\" style={{ color: \"#ddd\", marginRight: \"5px\" }} />{\" \"}\n                            </Link>\n                            &nbsp;Payroll - Entity\n                          </div>\n                          <div className=\"dropdown float-right\">\n                            <a\n                              className=\"btn dropdown-toggle btn-primary\"\n                              href=\"#\"\n                              role=\"button\"\n                              id=\"export\"\n                              data-toggle=\"dropdown\"\n                              aria-haspopup=\"true\"\n                              aria-expanded=\"false\"\n                            >\n                              Export\n                            </a>\n                            <div\n                              className=\"dropdown-menu dropdown-menu-right\"\n                              aria-labelledby=\"dropdownMenuLink\"\n                              id=\"exportlist\"\n                            >\n                              <a href=\"#\">Export CSV</a>\n                              <a href=\"#\">Export Excel</a>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-12\">\n                        <div className=\"divider\"></div>\n                        <div className=\"\">\n                          <div className=\"titletranshist\" style={{ fontSize: 18, marginBottom: 15 }}>\n                            Add Entity\n                          </div>\n\n                          <div className=\"row\">\n                            <div className=\"col-md-4\">\n                              <div className=\"form-group\">\n                                <label>Entity</label>\n                                <input type=\"text\" name=\"\" className=\"form-control\" placeholder=\"Enter ...\" />\n                              </div>\n                            </div>\n                            <div className=\"col-md-8\">\n                              <div className=\"form-group\" style={{ textAlign: \"right\", marginTop: 30 }}>\n                                <button className=\"btn btn-primary payrollsumbtn\">Submit</button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-12\">\n                        <div className=\"divider\"></div>\n                        <div className=\"\">\n                          <div className=\"titletranshist\" style={{ fontSize: 18, marginBottom: 15 }}>\n                            List of entity\n                          </div>\n                          <form action=\"\" method=\"post\">\n                            <div className=\"payrolltable\">\n                              <table>\n                                <tbody>\n                                  <tr>\n                                    <th>Sr no.</th>\n                                    <th>Entity</th>\n                                    <th>Edit</th>\n                                    <th>Delete</th>\n                                  </tr>\n                                  <tr>\n                                    <td>1</td>\n                                    <td>Entity One</td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> Edit\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Delete\n                                      </a>\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>2</td>\n                                    <td>Entity Two</td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> Edit\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Delete\n                                      </a>\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>3</td>\n                                    <td>Entity Three</td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> Edit\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Delete\n                                      </a>\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>4</td>\n                                    <td>Entity Four</td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> Edit\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Delete\n                                      </a>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </div>\n                          </form>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Entity);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./payroll.css\"\n\nexport class Entity extends Component {\n  render() {\n    return (\n      <div className=\"row px-15\" id=\"dashboardBody\">\n        <div className=\"col-md-12\">\n          <div className=\"card\">\n            <div className=\"card-body payrollmanage\">\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <form action=\"\" method=\"post\">\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <div style={{ clear: \"both\" }}>\n                          <div\n                            className=\"titletranshist\"\n                            style={{ fontSize: \"18px\", paddingBottom: \"15px\", float: \"left\" }}\n                          >\n                            <Link to=\"/settings\" key=\"back\">\n                              <i className=\"fa fa-arrow-left\" style={{ color: \"#ddd\", marginRight: \"5px\" }} />{\" \"}\n                            </Link>\n                            &nbsp;Payroll - Entity\n                          </div>\n                          <div className=\"dropdown float-right\">\n                            <a\n                              className=\"btn dropdown-toggle btn-primary\"\n                              href=\"#\"\n                              role=\"button\"\n                              id=\"export\"\n                              data-toggle=\"dropdown\"\n                              aria-haspopup=\"true\"\n                              aria-expanded=\"false\"\n                            >\n                              Export\n                            </a>\n                            <div\n                              className=\"dropdown-menu dropdown-menu-right\"\n                              aria-labelledby=\"dropdownMenuLink\"\n                              id=\"exportlist\"\n                            >\n                              <a href=\"#\">Export CSV</a>\n                              <a href=\"#\">Export Excel</a>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-12\">\n                        <div className=\"divider\"></div>\n                        <div className=\"\">\n                          <div className=\"titletranshist\" style={{ fontSize: 18, marginBottom: 15 }}>\n                            Add Entity\n                          </div>\n\n                          <div className=\"row\">\n                            <div className=\"col-md-4\">\n                              <div className=\"form-group\">\n                                <label>Entity</label>\n                                <input type=\"text\" name=\"\" className=\"form-control\" placeholder=\"Enter ...\" />\n                              </div>\n                            </div>\n                            <div className=\"col-md-8\">\n                              <div className=\"form-group\" style={{ textAlign: \"right\", marginTop: 30 }}>\n                                <button className=\"btn btn-primary payrollsumbtn\">Submit</button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-12\">\n                        <div className=\"divider\"></div>\n                        <div className=\"\">\n                          <div className=\"titletranshist\" style={{ fontSize: 18, marginBottom: 15 }}>\n                            List of entity\n                          </div>\n                          <form action=\"\" method=\"post\">\n                            <div className=\"payrolltable\">\n                              <table>\n                                <tbody>\n                                  <tr>\n                                    <th>Sr no.</th>\n                                    <th>Entity</th>\n                                    <th>Edit</th>\n                                    <th>Delete</th>\n                                  </tr>\n                                  <tr>\n                                    <td>1</td>\n                                    <td>Entity One</td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> Edit\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Delete\n                                      </a>\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>2</td>\n                                    <td>Entity Two</td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> Edit\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Delete\n                                      </a>\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>3</td>\n                                    <td>Entity Three</td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> Edit\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Delete\n                                      </a>\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>4</td>\n                                    <td>Entity Four</td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> Edit\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a href=\"#\" className=\"btn  editdltbtn\">\n                                        <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Delete\n                                      </a>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </div>\n                          </form>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Entity);\n","import { ReducersTypes } from \"constants/ReducersTypes\";\n\nexport const demoFunction = data => {\n  return {\n    type: \"ReducersTypes.CONST\",\n    payload: data\n  };\n};\n\nexport const setNavigation = data => {\n  return {\n    type: ReducersTypes.NAVIGATION,\n    payload: data\n  };\n};\n\n","import React, { useRef, useState }  from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport uniqBy from \"lodash/uniqBy\";\nimport debounce from \"lodash/debounce\";\nimport Autocomplete from \"components/Autocomplete\";\nimport logo from \"../assets/images/logo.jpg\";\nimport ClickAwayListener from \"./ClickAwayListener\";\nimport TokenManager from \"utils/TokenManager\";\nimport { logout } from \"handlers/setters\";\nimport { setNavigation } from \"actions/global\";\nimport { instanceWithRetry } from \"actions/axiosInstance\";\nimport { handleAPIError } from \"handlers/setters\";\n\nexport const Header = ({ openleftnav, setNavigation, history }) => {\n  const [showpopup, setshowpopup] = useState(false);\n  const [searchList, setSearchList] = useState([]);\n  const [isSearchFetching, setIsSearchFetching] = useState(false);\n  const username = TokenManager.getUserName() || \"-\";\n  const debounceMethod = useRef(debounce((text) => search(text), 500)).current;\n\n  const search = (text) => {\n    const url = `search?per_page=100&search_text=${text}`;\n    if (text) {\n      setIsSearchFetching(true);\n      setSearchList([]);\n      instanceWithRetry\n        .get(url)\n        .then((res) => {\n          setIsSearchFetching(false);\n          const data = res.data.result;\n          // Updating order to Customer, Vendor, Receivables, Payables, Order backlog\n          const final = data.sort((a, b) => {\n            if(a.model_type === 'Customer') {\n              return -1;\n            } else if (a.model_type === 'Vendor' && b.model_type !== 'Customer') {\n              return -1;\n            } else if (a.model_type === 'AR_Invoice' && b.model_type !== 'Vendor' && b.model_type !== 'Customer') {\n              return -1;\n            } else if (a.model_type === 'AP_Invoice' && b.model_type !== 'Vendor' && b.model_type !== 'Customer' && b.model_type !== 'AR_Invoice') {\n              return -1;\n            }\n            return 1;\n          });\n          setSearchList(final);\n        })\n        .catch((e) => handleAPIError(e));\n    } else {\n      setSearchList([]);\n    }\n  };\n\n  const routes = {\n    'AP_Invoice': 'Payables',\n    'AR_Invoice': 'Receivables',\n    'Customer': 'Customers',\n    'Vendor': 'Vendors',\n    'OrderBacklog': 'Backlog'\n  };\n\n  return (\n    <div className=\"row menufixed\" id=\"topHeader\">\n      <div className=\"logop-expanded switchButton\">\n        <div data-toggle=\"sidebar-colapse\" onClick={() => { setNavigation({ openleftnav: !openleftnav }); }}>\n          <i id=\"swit\" className={`fas fa-fw mr-3 ${openleftnav ? \"fa-chevron-left\" : \"fa-chevron-right\"} cursour-pointer`}></i>{\" \"}\n        </div>\n        <img className=\"logo\" src={logo} alt=\"loading\" />\n        Payference\n      </div>\n      <div className=\"col mp-0\">\n        <div className=\"row mp-0\">\n          <div className=\"col-md-8\">\n            <form className=\"navbar-form navbar-left searchform\">\n              <div className=\"input-group\">\n                <Autocomplete\n                  suggestions={uniqBy(\n                    searchList.map((s) => ({\n                      id: s.id,\n                      type: s.model_type,\n                      name: `<strong>${s.model_type === 'OrderBacklog' ? 'Order ': ''}${routes[s.model_type]}:</strong> ${s.display_string}`,\n                    })),\n                    \"id\"\n                  )}\n                  placeholder=\"Search for an invoice, customer or vendor\"\n                  inputClassName=\"searchbar\"\n                  inputWrapperClassName=\"search-wrapper\"\n                  getSelected={(item) => {if(item) {setSearchList([]); history.push(`/${routes[item.type].toLowerCase()}/${item.id}`)}}}\n                  search={(text) => debounceMethod(text)}\n                  isLoading={isSearchFetching}\n                />\n              </div>\n            </form>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"pull-right\">\n              <div className=\"dropdown\">\n                <div\n                  className=\"btn cursour-pointer\" // dropdown-toggle for down arrow icon\n                  to=\"#\"\n                  role=\"button\"\n                  id=\"profile\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                  onClick={() => setshowpopup(!showpopup)}\n                >\n                  <div className=\"text-icon-big rounded-circle\">{username[0]}</div>\n                </div>\n                <ClickAwayListener onClickAway={setshowpopup}>\n                  <div\n                    className={`dropdown-menu ${showpopup && \"open-profilepic-menu show\"}`}\n                    id=\"profilebox\"\n                    aria-labelledby=\"dropdownMenuLink\"\n                  >\n                    <div className=\"text-icon-big rounded-circle\">{username[0]}</div>\n                    <p title={username} className=\"text-center\">{username}</p>\n                    <div className=\"row\" id=\"dtwrapper\">\n                      <div className=\"col-md-6\">\n                        <Link onClick={() => setshowpopup(false)} to=\"/settings/profile\">\n                          Profile\n                        </Link>\n                      </div>\n                      <div className=\"col-md-6 align-right\">\n                        <Link\n                          disabled\n                          onClick={() => {\n                            setshowpopup(false);\n                            logout();\n                          }}\n                        >\n                          Signout\n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n                </ClickAwayListener>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  openleftnav: state.navigation.openleftnav\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ setNavigation }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { setNavigation } from \"actions/global\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport get from \"lodash/get\";\nimport fe_config from \"constants/Configs\";\n\nconst NAV = [\n  {\n    name: \"Dashboard\",\n    ilink: \"fas fa-tachometer-alt mr-3\",\n    route: \"/dashboard\",\n    localStorageKey: \"dashboardrange\",\n    subStorages: [],\n  },\n  {\n    name: \"Payroll\",\n    ilink: \"fntw fas fa-money mr-3\",\n    route: \"/payroll\",\n    localStorageKey: \"payrollFilters\",\n    subStorages: [],\n  },\n  {\n    name: \"Payables\",\n    ilink: \"fntw fas fa-file-invoice-dollar mr-3\",\n    route: \"/payables\",\n    localStorageKey: \"payableFilters\",\n    subStorages: [],\n    subNav: (fe_config.MODE) === \"DEV\" ? [\n      {\n        name: \"Purchase Orders\",\n        ilink: \"fntw fas fa-file-invoice-dollar mr-3\",\n        route: \"/purchase-orders\",\n        localStorageKey: \"payablePurchaseOrderFilters\",\n        subStorages: [],\n      }]\n      : null,\n  },\n  {\n    name: \"Receivables\",\n    ilink: \"fas fa-hand-holding-usd mr-3\",\n    route: \"/receivables\",\n    localStorageKey: \"receivableFilters\",\n    subStorages: [],\n    subNav: [\n      {\n        name: \"Order Backlog\",\n        ilink: \"fas fa-hand-holding-usd mr-3\",\n        route: \"/backlog\",\n        localStorageKey: \"backlogFilters\",\n        subStorages: [],\n      },\n    ],\n  },\n  {\n    name: \"Vendors\",\n    ilink: \"fas fa-user-tag mr-3\",\n    route: \"/vendors\",\n    localStorageKey: \"vendorsFilters\",\n    subStorages: [\"vendor_activeTab\"],\n  },\n  {\n    name: \"Customers\",\n    ilink: \"fas fa-users mr-3\",\n    route: \"/customers\",\n    localStorageKey: \"customersFilters\",\n    subStorages: [\"customer_activeTab\", \"customer_details_activeTab\"],\n  },\n  { name: \"Reports\", ilink: \"fntw fas fa-list mr-3\", route: \"/reports\", localStorageKey: \"\", subStorages: [] },\n  { name: \"Insights\", ilink: \"fntw fas fa-chart-line mr-3\", route: \"/insights\", localStorageKey: \"\", subStorages: [] },\n  { name: \"Settings\", ilink: \"fas fa-cog mr-3\", route: \"/settings\", localStorageKey: \"\", subStorages: [] },\n];\n\nexport const LeftNav = (props) => {\n  const { openleftnav, history } = props;\n\n  React.useEffect(() => {\n    let currentPage = get(window, \"location.pathname\", \"\").split(\"/\");\n    console.log('currentPageArray: ', currentPage);\n  }, []);\n\n  function clearOtherLocalStorages(currentlocalStorageKey) {\n    NAV.forEach((element) => {\n      if (element.localStorageKey !== currentlocalStorageKey) {\n        element.subStorages.forEach((storeKey) => {\n          localStorage.removeItem(storeKey);\n        })\n        localStorage.removeItem(element.localStorageKey);\n      }\n    });\n  }\n\n  return (\n    <div id=\"sidebar-container\" className={openleftnav ? \"sidebar-expanded\" : \"sidebar-collapsed\"}>\n      <div className=\"list-group sidebarfixed\">\n        {NAV.map((element, i) => (\n          <div>\n            <Accordion\n              className=\"bg-light-grey\"\n              defaultActiveKey={\n                element.subNav &&\n                element.subNav.filter((el) => get(history, \"location.pathname\", \"\").includes(el.route)).length !== 0\n                  ? i\n                  : null\n              }\n            >\n              <Accordion.Toggle\n                className=\"m-0 p-0 bg-light-grey border-0\"\n                // className=\"border mt-4 px-3 cursour-pointer bg-light-grey\"\n                as={Card.Header}\n                eventKey={i}\n              >\n                <NavLink\n                  key={element.name}\n                  to={element.route}\n                  activeClassName=\"activet\"\n                  onClick={(e) => {\n                    if (element.isdisabled || get(history, \"location.pathname\", \"\") === element.route) {\n                      e.preventDefault();\n                      localStorage.removeItem(element.localStorageKey);\n                      element.subStorages.forEach((storeKey) => {\n                        localStorage.removeItem(storeKey);  \n                      });\n                      history.push('/');\n                      history.push(element.route);\n                    } else {\n                      clearOtherLocalStorages(element.localStorageKey);\n                    }\n                  }}\n                  className={`list-group-item list-group-item-action flex-column align-items-start, ${\n                    element.isdisabled ? \"cursour-not-allowed text-secondary\" : \"\"\n                  }`}\n                >\n                  <div className=\"d-flex w-100 justify-content-start align-items-center\">\n                    <Tooltip title={element.name} placement=\"right\">\n                      <i\n                        style={{ width: \"15px\" }}\n                        className={element.ilink}\n                        data-toggle=\"tooltip\"\n                        data-placement=\"right\"\n                      ></i>\n                    </Tooltip>\n                    <span className={openleftnav ? \"menu-collapsed\" : \"menu-collapsed d-none\"}>{element.name}</span>\n                  </div>\n                </NavLink>\n              </Accordion.Toggle>\n              <Accordion.Collapse className=\"m-0 p-0\" eventKey={i}>\n                <div>\n                  {element.subNav ? (\n                    <div className={`subnav ${openleftnav ? \"ml-4\" : \"\"}`}>\n                      {element.subNav.map((el) => (\n                        <NavLink\n                          key={el.name}\n                          to={el.route}\n                          activeClassName=\"activet\"\n                          onClick={(e) => {\n                            if (el.isdisabled || get(history, \"location.pathname\", \"\") === el.route) {\n                              e.preventDefault();\n                              localStorage.removeItem(el.localStorageKey);\n                              el.subStorages.forEach((storeKey) => {\n                                localStorage.removeItem(storeKey);  \n                              });\n                              history.push('/');\n                              history.push(el.route);\n                            } else {\n                              clearOtherLocalStorages(el.localStorageKey);\n                            }\n                          }}\n                          className={`list-group-item list-group-item-action flex-column align-items-start ${\n                            el.isdisabled ? \"cursour-not-allowed text-secondary\" : \"\"\n                          }`}\n                        >\n                          <div className=\"d-flex w-100 justify-content-start align-items-center\">\n                            <Tooltip title={el.name} placement=\"right\">\n                              <i\n                                style={{ width: \"15px\" }}\n                                className={el.ilink}\n                                data-toggle=\"tooltip\"\n                                data-placement=\"right\"\n                              ></i>\n                            </Tooltip>\n                            <span className={openleftnav ? \"menu-collapsed\" : \"menu-collapsed d-none\"}>{el.name}</span>\n                          </div>\n                        </NavLink>\n                      ))}\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </Accordion.Collapse>\n            </Accordion>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  openleftnav: state.navigation.openleftnav,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ setNavigation }, dispatch);\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LeftNav));\n","import React, { Suspense, lazy } from \"react\";\n\nconst PageRef = lazy(() => import(\"./dashboard\"));\nconst C = (p) => <Suspense fallback=\"\">{p.Child}</Suspense>;\nconst Page = (p) => <C Child={<PageRef {...p} />} />;\nexport default Page;\n","import React, { Suspense, lazy } from \"react\";\n\nconst PageRef = lazy(() => import(\"./payables\"));\nconst C = (p) => <Suspense fallback=\"\">{p.Child}</Suspense>;\nconst Page = (p) => <C Child={<PageRef {...p} />} />;\nexport default Page;\n","import React, { Suspense, lazy } from \"react\";\n\nconst PageRef = lazy(() => import(\"./payroll\"));\nconst C = (p) => <Suspense fallback=\"\">{p.Child}</Suspense>;\nconst Page = (p) => <C Child={<PageRef {...p} />} />;\nexport default Page;\n","import React, { Suspense, lazy } from \"react\";\n\nconst PageRef = lazy(() => import(\"./receivables\"));\nconst C = (p) => <Suspense fallback=\"\">{p.Child}</Suspense>;\nconst Page = (p) => <C Child={<PageRef {...p} />} />;\nexport default Page;\n","import React, { Suspense, lazy } from \"react\";\n\nconst PageRef = lazy(() => import(\"./settings\"));\nconst C = (p) => <Suspense fallback=\"\">{p.Child}</Suspense>;\nconst Page = (p) => <C Child={<PageRef {...p} />} />;\nexport default Page;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { instance } from \"actions/axiosInstance\";\nimport { handleAPIError } from \"handlers/setters\";\nimport Toaster from \"components/Toaster\";\nimport TokenManager from \"utils/TokenManager\";\nimport './style.css';\n\nconst Integrations = (props) => {\n    const [apQueryEP, setApQueryEp] = useState('');\n    const [arQueryEP, setArQueryEp] = useState('');\n    const [obQueryEP, setObQueryEp] = useState('');\n    const [erp, setERP] = useState('');\n    const [netSuite, setNetSuiteConfig] = useState({\n        account: '',\n        netSuiteKey: '',\n        consumerSecret: '',\n        tokenKey: '',\n        tokenSecret: '',\n    });\n\n    useEffect(() => {\n        if (!TokenManager.getIsAdmin()) {\n            props.history.push('/dashboard');\n            return;\n        }\n        getIntegration();\n    }, []);\n\n    const getIntegration = () => {\n        instance.get('integration/configuration')\n        .then(response => {\n            const resp = response.data.result;\n            if(resp) {\n                setApQueryEp(resp.erp_endpoint_ap);\n                setArQueryEp(resp.erp_endpoint_ar);\n                setObQueryEp(resp.erp_endpoint_ob);\n                setERP(resp.erp_type);\n                setNetSuiteConfig({\n                    account: resp.ns_account,\n                    netSuiteKey: resp.ns_consumer_key,\n                    consumerSecret: resp.ns_consumer_secret,\n                    tokenKey: resp.ns_token_key,\n                    tokenSecret: resp.ns_token_secret,\n                });\n            }\n        })\n    };\n\n    const submitIntegration = () => {\n        const requestObject = {\n            \"erp_endpoint_ap\": apQueryEP,\n            \"erp_endpoint_ar\": arQueryEP,\n            \"erp_endpoint_ob\": obQueryEP,\n            \"erp_type\": erp,\n            \"ns_account\": netSuite.account,\n            \"ns_consumer_key\": netSuite.netSuiteKey,\n            \"ns_consumer_secret\": netSuite.consumerSecret,\n            \"ns_token_key\": netSuite.tokenKey,\n            \"ns_token_secret\": netSuite.tokenSecret,\n        };\n        instance\n            .post('integration/configuration', { ...requestObject })\n            .then(() => {\n                getIntegration();\n                Toaster(\"Data integration updated successfully!\", \"success\");\n            }).catch(e => handleAPIError(e));\n    };\n\n    const disabledSubmit = () => (!apQueryEP || !arQueryEP || !obQueryEP || !erp || !netSuite.account || !netSuite.netSuiteKey || !netSuite.consumerSecret || !netSuite.tokenKey || !netSuite.tokenSecret);\n\n    const encodeValues = (value) => (value && 'X'.repeat(10) + value.substr(value.length - 4));\n\n    return (\n        <div className=\"row integration-form\">\n            <div className=\"col-md-12\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"form-group\">\n                            <label>Payables query Endpoint</label>\n                            <input type=\"text\" className=\"form-control\" defaultValue={encodeValues(apQueryEP)} onChange={e => setApQueryEp(e.target.value)} placeholder=\"Payables query Endpoint\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"form-group\">\n                            <label>Receivables query Endpoint</label>\n                            <input type=\"text\" className=\"form-control\" defaultValue={encodeValues(arQueryEP)} onChange={e => setArQueryEp(e.target.value)} placeholder=\"Receivables query Endpoint\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"form-group\">\n                            <label>Order Backlog query Endpoint</label>\n                            <input type=\"text\" className=\"form-control\" defaultValue={encodeValues(obQueryEP)} onChange={e => setObQueryEp(e.target.value)} placeholder=\"Order Backlog query Endpoint\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-md-12\">\n                <div className=\"divider\" />\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                            <label>ERP</label>\n                            <select className=\"form-control\" defaultValue={erp} onChange={e => setERP(e.target.value)}>\n                                <option disabled selected>Select ERP</option>\n                                <option value=\"netsuite\">Netsuite</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n                {\n                    erp === 'NETSUITE' ?\n                        <React.Fragment>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <div className=\"form-group\">\n                                        <label>Netsuite Account</label>\n                                        <input type=\"text\" className=\"form-control\" defaultValue={encodeValues(netSuite.account)} onChange={e => setNetSuiteConfig({ ...netSuite, account: e.target.value})} placeholder=\"Netsuite Account\" />\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <div className=\"form-group\">\n                                        <label>Netsuite Consumer Key</label>\n                                        <input type=\"text\" className=\"form-control\" defaultValue={encodeValues(netSuite.netSuiteKey)} onChange={e => setNetSuiteConfig({ ...netSuite, netSuiteKey: e.target.value })} placeholder=\"Netsuite Consumer Key\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <div className=\"form-group\">\n                                        <label>Netsuite Consumer Secret</label>\n                                        <input type=\"text\" className=\"form-control\" defaultValue={encodeValues(netSuite.consumerSecret)} onChange={e => setNetSuiteConfig({ ...netSuite, consumerSecret: e.target.value })} placeholder=\"Netsuite Consumer Secret\" />\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <div className=\"form-group\">\n                                        <label>Netsuite Token Key</label>\n                                        <input type=\"text\" className=\"form-control\" defaultValue={encodeValues(netSuite.tokenKey)} onChange={e => setNetSuiteConfig({ ...netSuite, tokenKey: e.target.value })} placeholder=\"Netsuite Token Key\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <div className=\"form-group\">\n                                        <label>Netsuite Token Secret</label>\n                                        <input type=\"text\" className=\"form-control\" defaultValue={encodeValues(netSuite.tokenSecret)} onChange={e => setNetSuiteConfig({ ...netSuite, tokenSecret: e.target.value })} placeholder=\"Netsuite Token Secret\" />\n                                    </div>\n                                </div>\n                            </div>\n                        </React.Fragment>\n                    : null\n                }\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <button disabled={disabledSubmit()} onClick={submitIntegration} className=\"btn btn-primary\">Submit</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Integrations;\n","import ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Toaster from \"components/Toaster\";\nimport React from \"react\";\nimport { instance } from \"../../../actions/axiosInstance\";\nimport \"../settings.css\";\n\nconst initialState = {\n  action: \"\",\n  editLine: \"\",\n  editableData: null,\n  second: \"\",\n  minute: \"\",\n  hour: \"\",\n  day: \"\",\n  day_of_week: \"\",\n};\n\nconst daysList = [\n  {\n    id: \"mon\",\n    name: \"Monday\",\n  },\n  {\n    id: \"tue\",\n    name: \"Tuesday\",\n  },\n  {\n    id: \"wed\",\n    name: \"Wednesday\",\n  },\n  {\n    id: \"thu\",\n    name: \"Thursday\",\n  },\n  {\n    id: \"fri\",\n    name: \"Friday\",\n  },\n  {\n    id: \"sat\",\n    name: \"Saturday\",\n  },\n  {\n    id: \"sun\",\n    name: \"Sunday\",\n  },\n];\nexport default class CustomTable extends React.Component {\n  state = {\n    ...initialState,\n  };\n\n  resetState = () => this.setState({ ...initialState });\n\n  addNewRow = () => {\n    const { type } = this.props;\n    const { editableData } = this.state;\n    if (this.state.action === \"edit\") {\n      return (\n        <ClickAwayListener\n          onClickAway={(e) => {\n            e.stopPropagation();\n            this.submitEntry(\"edit\", editableData, type);\n            this.resetState();\n          }}\n        >\n          <tr>\n            <td>{editableData.id}</td>\n            <td>{editableData.name}</td>\n            <td>\n              <input\n                type=\"number\"\n                className={`form-control ${this.state.minute > 59 || this.state.minute < 0 ? \"error\" : \"\"}`}\n                min={0}\n                max={59}\n                defaultValue={editableData.minute}\n                onInput={(e) =>\n                  this.setState({\n                    minute: e.target.value,\n                  })\n                }\n              />\n            </td>\n            <td>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                min={0}\n                max={23}\n                defaultValue={editableData.hour}\n                onInput={(e) =>\n                  this.setState({\n                    hour: e.target.value,\n                  })\n                }\n              />\n            </td>\n            <td>\n              <input\n                type=\"number\"\n                min={0}\n                max={31}\n                className=\"form-control\"\n                defaultValue={editableData.day}\n                onInput={(e) =>\n                  this.setState({\n                    day: e.target.value,\n                  })\n                }\n              />\n            </td>\n            <td>\n              <select\n                className=\"form-control\"\n                defaultValue={editableData.day_of_week}\n                // multiple\n                // options\n                onChange={(e) =>\n                  this.setState({\n                    day_of_week: e.target.value,\n                  })\n                }\n              >\n                <option value=\"\" selected>\n                  None\n                </option>\n                {daysList.map((d) => (\n                  <option key={d.id} value={d.id}>\n                    {d.name}\n                  </option>\n                ))}\n              </select>\n            </td>\n          </tr>\n        </ClickAwayListener>\n      );\n    }\n  };\n\n  renderRows = (type, data) => {\n    const { editableData, editLine } = this.state;\n    if (type === \"job\") {\n      return data.map((d, line) => {\n        if (!editableData || (editableData && editableData.id !== d.id)) {\n          if (line === editLine) {\n            this.addNewRow();\n          } else {\n            return (\n              <tr\n                onClick={() =>\n                  this.setState({\n                    action: \"edit\",\n                    editableData: d,\n                    editLine: line,\n                    minute: d.minute,\n                    hour: d.hour,\n                    day: d.day,\n                    day_of_week: d.day_of_week,\n                  })\n                }\n              >\n                <td>{d.id}</td>\n                <td>{d.name}</td>\n                <td>{d.minute}</td>\n                <td>{d.hour}</td>\n                <td>{d.day}</td>\n                <td>\n                  {daysList.find((day) => d.day_of_week == day.id) &&\n                    daysList.find((day) => d.day_of_week == day.id).name}\n                </td>\n              </tr>\n            );\n          }\n        }\n        return this.addNewRow();\n      });\n    }\n  };\n\n  submitEntry = (mode, prevData, type) => {\n    const URL = `scheduledjob?id=${prevData.id}`;\n    const requestType = \"post\";\n    const { minute, hour, day, day_of_week } = this.state;\n    if (\n      minute == prevData.minute &&\n      hour == prevData.hour &&\n      day == prevData.day &&\n      day_of_week == prevData.day_of_week\n    ) {\n      this.resetState();\n    } else if (!minute && !hour && !day && !day_of_week) {\n      this.resetState();\n    } else if (minute > 59 || hour > 23 || day > 31) {\n      Toaster(\"Invalid input\", \"error\");\n      this.resetState();\n    } else if (minute || hour || day || day_of_week) {\n      let requestObject = {\n        minute: minute,\n        hour: hour,\n        day: day,\n        day_of_week: day_of_week,\n      };\n      instance[requestType](URL, { ...requestObject }).then((response) => {\n        this.props.reloadListing();\n        this.resetState();\n        const msg = \"Updated\";\n        Toaster(msg + \" successfully\", \"success\");\n      });\n    } else {\n      this.resetState();\n    }\n  };\n\n  render() {\n    const { header, data, type } = this.props;\n    const { action } = this.state;\n\n    return (\n      <div className=\"clearfix\">\n        <table className={`custom-table`}>\n          <thead>\n            <tr>\n              {header.map((d, i) => (\n                <th style={{ width: (i === 0 || i === 3 || i === 4) && \"10%\" }}>{d}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {!data.length && !action ? (\n              <tr>\n                <td colSpan={header.length} className=\"text-center\">\n                  No Entries\n                </td>\n              </tr>\n            ) : (\n              this.renderRows(type, data)\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import { handleAPIError } from \"handlers/setters\";\nimport React from \"react\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport { instance } from \"../../../actions/axiosInstance\";\nimport CustomTable from \"./jobtable\";\n\nclass Backgroundjobs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jobs: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getJobs();\n  }\n\n  getJobs = () => {\n    instance.get(`scheduledjob`)\n    .then(response => {\n      this.setState({\n        jobs: response.data.result,\n      })\n    }).catch(e => handleAPIError(e));\n  }\n\n  render() {\n    const {\n      jobs,\n    } = this.state;\n\n    const jobTableHeader = [\"Job Id\", \"Name\", \"Minute\", \"Hour\", \"Day\", \"Day of week\"];\n\n    return (\n      <div className=\"row\">\n        <div className=\"w-100\">\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <CustomTable\n                  type=\"job\"\n                  data={jobs}\n                  header={jobTableHeader}\n                  reloadListing={this.getJobs}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backgroundjobs;\n","import React from \"react\";\nimport { Route, Link } from \"react-router-dom\";\nimport Integrations from './integrations';\nimport BackgroundJobs from \"./backgroundjobs\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport fe_config from \"constants/Configs\";\n\nfunction Data(props) {\n    const expand = props.location.hash;\n    return (\n        <div className=\"row\" id=\"dashboardBody\">\n            <div className=\"col-md-12\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                          \n                                <div className=\"paynewdetsec\">\n                                    <div className=\"float-left\" style={{ fontSize: '18px', paddingBottom: '15px', float: 'left' }}>\n                                        <Link to=\"/settings\" title=\"Back\"><i className=\"fa fa-arrow-left\" aria-hidden=\"true\" style={{ color: '#ddd', marginRight: '10px' }}></i></Link>\n                                        Data\n                                    </div>\n                                </div>\n                            \n                                <div className=\"divider\" />\n                                <div className=\"col-md-6\" id=\"integrations\">\n                                    <Integrations {...props}/>\n                                </div>\n                                <Accordion className=\"col-md-12\" defaultActiveKey={expand === '#backgroundjobs' && \"0\"} id=\"backgroundjobs\">\n                                    <Accordion.Toggle\n                                        className=\"border mt-4 px-3 cursour-pointer bg-light-grey\"\n                                        as={Card.Header}\n                                        eventKey=\"0\"\n                                    >\n                                        <h6 className=\"my-0\">Background Jobs</h6>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse className=\"py-2\" eventKey=\"0\">\n                                        <div className=\"col-md-12\">\n                                            <BackgroundJobs {...props}/>\n                                        </div>\n                                    </Accordion.Collapse>\n                                </Accordion>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Data;\n\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Accordion } from \"react-bootstrap\";\nimport { handleAPIError } from \"handlers/setters\";\nimport Toaster from \"components/Toaster\";\nimport { instance } from \"actions/axiosInstance\";\n\nfunction ProfileDetails(props) {\n  let company = {\n    id: 0,\n    name: \"Storcentric 2\",\n    logo: \"1\",\n    industry: \"\",\n    company_type: \"\",\n    address: \"\"\n  };\n\n  const [companyData, setCompanyData] = useState(company);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isPageLoading, setIsPageLoading] = useState(true);\n\n  useEffect(() => {\n    function getCompany() {\n      let URL = \"/client\";\n      instance\n        .get(URL)\n        .then(response => {\n          if (response.data.result != null && response.data.result[0] != null) {\n            const user = {\n              id: getValue(response.data.result[0].id),\n              name: getValue(response.data.result[0].name),\n              department: getValue(response.data.result[0].department),\n              role: response.data.result[0].role || \"1\",\n              email: getValue(response.data.result[0].email),\n              phone: getValue(response.data.result[0].phone),\n              username: getValue(response.data.result[0].username)\n            };\n            setCompanyData(user);\n            setIsPageLoading(false);\n          }\n        })\n        .catch(e => handleAPIError(e));\n    }\n\n    getCompany();\n  }, []);\n\n  const getValue = e => {\n    return e || \"\";\n  };\n\n  const update = e => {\n    setIsProcessing(true);\n    let URL = \"/client\";\n    // let URL = `/client/user?id=${TokenManager.getUserId()}`;\n    instance\n      .post(URL, companyData)\n      .then(response => {\n        setIsProcessing(false);\n        Toaster(\"Profile updated successfully!\", \"success\");\n      })\n      .catch(e => handleAPIError(e));\n  };\n\n  const onChange = e => {\n    const { name, value } = e.target;\n    setCompanyData(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const onBlurr = e => {\n    const { name, value } = e.target;\n    setCompanyData(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  return (\n    <Accordion className=\"col-md-12\" defaultActiveKey=\"0\">\n      {/* <Accordion.Toggle className=\"border mt-4 px-3 cursour-pointer bg-light-grey\" as={Card.Header} eventKey=\"0\">\n        <h6 className=\"my-0\">Profile Details</h6>\n      </Accordion.Toggle> */}\n      <Accordion.Collapse className=\"p-2 px-3\" eventKey=\"0\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"form-group\">\n              <span>\n                <label>Company name</label>\n              </span>\n              <input type=\"text\" maxLength=\"50\" className=\"form-control\" placeholder=\"Enter ...\" />\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"form-group\">\n              <div>\n                <label>Upload logo</label>\n              </div>\n              <input type=\"file\" />\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"form-group\">\n              <span>\n                <label>Company type</label>\n              </span>\n              <select className=\"form-control\">\n                <option value>Select</option>\n                <option value>Private</option>\n                <option value>Public</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"form-group\">\n              <span>\n                <label>Industry</label>\n              </span>\n              <input type=\"text\" maxLength=\"50\" className=\"form-control\" id placeholder=\"Enter ...\" />\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"form-group\">\n              <span>\n                <label>Employees size</label>\n              </span>\n              <input type=\"number\" className=\"form-control\" placeholder=\"Enter ...\" min={0} />\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"form-group\">\n              <span>\n                <label>Street address</label>\n              </span>\n              <input type=\"text\" className=\"form-control\" maxLength=\"200\" placeholder=\"Enter ...\" />\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"form-group\">\n              <span>\n                <label>State</label>\n              </span>\n              <input type=\"text\" maxLength=\"50\" className=\"form-control\" placeholder=\"Enter ...\" />\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"form-group\">\n              <span>\n                <label>City</label>\n              </span>\n              <input type=\"text\" maxLength=\"50\" className=\"form-control\" placeholder=\"Enter ...\" />\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"form-group\">\n              <span>\n                <label>Country</label>\n              </span>\n              <input type=\"text\" maxLength=\"50\" className=\"form-control\" placeholder=\"Enter ...\" />\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"form-group\">\n              <span>\n                <label>Zip code</label>\n              </span>\n              <input type=\"text\" pattern=\"[0-9]{5}\" className=\"form-control\" placeholder=\"Enter ...\" />\n            </div>\n          </div>\n          <div className=\"col-md-4\" />\n          <div className=\"col-md-4\" id=\"accounts\">\n            <div className=\"form-group text-right\" style={{ marginTop: \"30px\" }}>\n              <button type=\"submit\" onClick={update} className=\"btn subbtn btn-success\">\n                Update\n              </button>\n            </div>\n          </div>\n        </div>\n      </Accordion.Collapse>\n    </Accordion>\n  );\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileDetails);\n","import ClickAwayListener from \"components/ClickAwayListener\";\nimport get from \"lodash/get\";\nimport React from \"react\";\nimport { getShortNumber } from \"utils\";\n\nexport default class NumberEditorCell extends React.Component {\n  state = { editmode: false, value: get(this.props.value), showpencil: false };\n\n  componentDidMount() {\n    this.setState({ value: this.props.value });\n  }\n\n  setEditMode = mode => {\n    this.setState({ editmode: mode });\n    const { value } = this.state;\n    (value !== this.props.value) && this.props.updateValue(value);\n  };\n\n  componentWillReceiveProps(newprops) {\n    if (this.state.value !== newprops.value) {\n      this.setState({ value: newprops.value });\n    }\n  }\n\n  render() {\n    const { iscellcomponent = false } = this.props;\n    const { editmode, value, showpencil } = this.state;\n    return editmode ? (\n      <ClickAwayListener onClickAway={this.setEditMode}>\n        <form className=\"mr-2\" onSubmit={() => this.setEditMode(false)}>\n          <input\n            id=\"amount-editor\"\n            type=\"number\"\n            className=\"text-right\"\n            onChange={e => {\n              this.setState({ value: get(e, \"target.value\", \"\") });\n            }}\n            onKeyDown={e => {\n              if (e.key === \"Tab\" || e.key === \"Enter\") {\n                e.preventDefault();\n                this.setEditMode(false);\n              }\n            }}\n            onBlur={() => this.setEditMode(false)}\n            value={value}\n          />\n        </form>\n      </ClickAwayListener>\n    ) : (\n      <div\n        className=\"text-right mr-2\"\n        onClick={(e) => {\n          e.stopPropagation();\n          this.setState({ editmode: true }, () => {\n            document.getElementById(\"amount-editor\").focus();\n          });\n        }}\n        onMouseEnter={() => {\n          this.setState({ showpencil: true })\n        }}\n        onMouseLeave={() => {\n          this.setState({ showpencil: false })\n        }}\n      >\n        {getShortNumber(value) || \"-\"}\n        {!iscellcomponent && showpencil && (\n          <span className=\"ml-3\">\n            <i className=\"fa fa-pencil-alt\" />\n          </span>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport sortBy from \"lodash/sortBy\";\nimport get from \"lodash/get\";\nimport { connect } from \"react-redux\";\nimport { instance, instanceWithRetry } from \"../../../actions/axiosInstance\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport Toaster from \"components/Toaster\";\nimport ReactTable from \"react-table-v6\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { handleAPIError } from \"handlers/setters\";\nimport moment from \"moment\";\nimport NumberEditorCell from \"components/Table/NumberEditorCell\";\nimport CustomPlaidLink from \"components/CustomPlaidLink\";\nimport { setconfirmationboxData, resetconfirmationboxData } from \"components/ConfirmationBox\";\nimport TextEditorCell from \"components/Table/TextEditorCell\";\nimport { getFAWC } from \"utils\";\nimport fe_config from \"constants/Configs\";\n\nlet PREV_URL = \"\";\nfunction Account(props) {\n  let accountmodel = {\n    id: 0,\n    name: \"\",\n    account_number: \"\",\n    client_id: \"\",\n  };\n  const [account, setAccount] = useState(accountmodel);\n\n  const [accountData, setAccountData] = useState([]);\n  const [selectedDate, setselectedDate] = useState(null);\n  const [isFetching, setIsFetching] = useState(false);\n  const [show, setShow] = useState(false);\n  const [auto_convert_currencies, setauto_convert_currencies] = useState(false);\n  const [base_currency, setbase_currency] = useState(\"\");\n  const expand = props.location.hash;\n\n  const handleClose = () => setShow(false);\n\n  useEffect(() => {\n    getAccount();\n    if ([\"#bankbalance\"].includes(expand)) {\n      document.getElementById(\"accounts\").scrollIntoView();\n    }\n    return () => {\n      PREV_URL = \"\";\n    };\n  }, []);\n\n  useEffect(() => {\n    const URL = `bankbalance?from_date='${selectedDate}'&to_date='${selectedDate}'`;\n\n    if (PREV_URL === URL || !selectedDate || !get(accountData, \"[0]\", \"\")) {\n      return;\n    }\n    PREV_URL = URL;\n\n    instance\n      .get(\"client\")\n      .then((response) => {\n        setauto_convert_currencies(get(response, \"data.result.auto_convert_currencies\", \"\"));\n        setbase_currency(get(response, \"data.result.base_currency\", \"\"));\n      })\n      .catch((e) => handleAPIError(e));\n    const temp_accounts_data = accountData.map((x) => ({ ...x, amount: null, recordid: null }));\n    setAccountData(temp_accounts_data);\n    setIsFetching(true);\n    instance.get(URL).then((response) => {\n      let {\n        data: { result },\n      } = response;\n      const rows = [];\n      temp_accounts_data.forEach((acc) => {\n        const thisaccdata = result.find((res) => res.bank_account_id === acc.id);\n        if (thisaccdata) {\n          rows.push({ ...acc, amount: thisaccdata.amount, recordid: thisaccdata.id });\n        } else {\n          rows.push({ ...acc, amount: null });\n        }\n      });\n\n      setAccountData(\n        sortBy(\n          rows.map((x) => ({ ...x, name: x.name.trim() })),\n          [\"name\"]\n        )\n      );\n      setIsFetching(false);\n    });\n  }, [accountData, selectedDate, accountData]);\n\n  function getAccount() {\n    //todo: get data from api\n    let URL = `bankaccount`;\n    setAccountData([]);\n    setIsFetching(true);\n    instance\n      .get(URL)\n      .then((response) => {\n        setAccountData(response.data.result);\n        PREV_URL = \"\";\n        setselectedDate(null);\n        setselectedDate(selectedDate);\n        setIsFetching(false);\n        if (localStorage.getItem(\"selectedBankBalanceCheckDate\")) {\n          setselectedDate(localStorage.getItem(\"selectedBankBalanceCheckDate\"));\n          document.getElementById(\"accounts\").scrollIntoView();\n          localStorage.removeItem(\"selectedBankBalanceCheck\");\n        } else {\n          setselectedDate(moment().format(\"MM/DD/YYYY\"));\n        }\n      })\n      .catch((e) => handleAPIError(e));\n    instance\n      .get(\"client\")\n      .then((response) => {\n        setauto_convert_currencies(get(response, \"data.result[0].auto_convert_currencies\", \"\"));\n      })\n      .catch((e) => handleAPIError(e));\n  }\n\n  function updatePlaidToken(bankDetails) {\n    if (bankDetails.status === 1) {\n      instance\n        .get(`bankaccount/renewtoken?id=${bankDetails.id}`)\n        .then((response) => {\n          const linkHandler = window.Plaid.create({\n            env: fe_config.PLAID_env,\n            clientName: \"Payference\",\n            key: fe_config.PLAID_publicKey,\n            product: [\"transactions\"],\n            token: response.data.public_token,\n            onSuccess: function (public_token, metadata) {\n              //on success\n              getAccount();\n            },\n            onExit: function (err, metadata) {\n              //on exit\n            },\n          });\n          linkHandler.open();\n        })\n        .catch((e) => handleAPIError(e));\n    }\n  }\n\n  function addAccount() {\n    let acc = {\n      name: account.name,\n      account_number: account.account_number,\n      ismanual: true,\n    };\n    instance.post(\"bankaccount\", { ...acc }).then(() => {\n      getAccount();\n      clearAccount();\n      handleClose();\n      Toaster(\"Account added successfully\", \"success\");\n    });\n  }\n\n  const setconversion = () => {\n    // return;\n    instance\n      .post(\"client\", {\n        auto_convert_currencies: !auto_convert_currencies,\n      })\n      .then(() => {\n        setauto_convert_currencies(!auto_convert_currencies);\n      });\n  };\n\n  const clearAccount = () => {\n    account.bankname = \"\";\n    account.accountno = \"\";\n    account.routingno = \"\";\n  };\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setAccount((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  const onBlurr = (e) => {\n    const { name, value } = e.target;\n    setAccount((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  const columns = [\n    {\n      Header: \"Bank name\",\n      accessor: \"name\",\n      className: \"mr-3\",\n      width: 180,\n      Cell: (props) => {\n        return (\n          <div onClick={(e) => e.stopPropagation()}>\n            <TextEditorCell\n              {...props}\n              iscellcomponent\n              updateValue={(value) => {\n                const { original } = props;\n                const postdata = {\n                  name: value || \"\",\n                };\n                const URL = `bankaccount?id=${original.id}`;\n                instance.put(URL, postdata).then(() => {\n                  localStorage.setItem(\"refresh_reports\", true);\n                  Toaster(\"Updated successfully\", \"success\");\n                });\n              }}\n            />\n          </div>\n        );\n      },\n    },\n    {\n      Header: \"Account Number\",\n      accessor: \"account_number\",\n      Cell: (props) => {\n        return `XXXX-XXXX-XXXX-${props.original.account_number}`;\n      },\n    },\n    {\n      Header: () => (\n        <div className=\"mr-2\">\n          <span style={{ position: \"absolute\", left: 0 }}>\n            <i\n              className={`fa fa-angle-left ${\n                moment().subtract(10, \"days\").format(\"MM/DD/YYYY\") === selectedDate && \"text-transparent\"\n              }`}\n              onClick={() => {\n                if (moment().subtract(10, \"days\").format(\"MM/DD/YYYY\") === selectedDate) {\n                  return;\n                }\n                setselectedDate(moment(selectedDate, \"MM/DD/YYYY\").subtract(1, \"day\").format(\"MM/DD/YYYY\"));\n              }}\n              id=\"prevDate\"\n              aria-hidden=\"true\"\n            />\n          </span>\n          <span style={{ position: \"absolute\", top: 5, left: 30 }}>\n            {moment(selectedDate, \"MM/DD/YYYY\").format(\"ddd, DD MMM, YYYY\")}\n          </span>\n          <span style={{ position: \"absolute\", right: 10 }}>\n            <i\n              className={`fa fa-angle-right ${moment().format(\"MM/DD/YYYY\") === selectedDate && \"text-transparent\"}`}\n              id=\"nextDate\"\n              aria-hidden=\"true\"\n              onClick={() => {\n                if (moment().format(\"MM/DD/YYYY\") === selectedDate) {\n                  return;\n                }\n                setselectedDate(moment(selectedDate, \"MM/DD/YYYY\").add(1, \"day\").format(\"MM/DD/YYYY\"));\n              }}\n            />\n          </span>\n        </div>\n      ),\n      accessor: \"amount\",\n      className: \"text-right mr-3\",\n      width: 180,\n      Footer: (props) => {\n        return (\n          <div>\n            <span className=\"pull-left font-weight-bold\">Total:</span>\n            <span className=\"pull-right mr-2\">{getFAWC(accountData.reduce((a, b) => a + Number(b.amount), 0))}</span>\n          </div>\n        );\n      },\n      Cell: (props) => {\n        return (\n          <div onClick={(e) => e.stopPropagation()}>\n            <NumberEditorCell\n              {...props}\n              iscellcomponent\n              updateValue={(value) => {\n                const { original, index } = props;\n                const updatebalance = (v) => {\n                  const postdata = {\n                    records: [{ date: selectedDate, amount: v || \"0\", bank_account_id: original.id }],\n                  };\n                  const URL = original.recordid ? `bankbalance?id=${original.recordid}` : `bankbalance`;\n                  instance.put(URL, postdata).then(() => {\n                    localStorage.setItem(\"refresh_reports\", true);\n                    let updatedAccData = accountData;\n                    updatedAccData[index].amount = v;\n                    setAccountData([]);\n                    setAccountData(updatedAccData);\n                  });\n                };\n                if (auto_convert_currencies && base_currency && original.currency) {\n                  axios\n                    .get(`https://api.exchangeratesapi.io/latest?base=${original.currency}&symbols=${base_currency}`)\n                    .then((resp) => {\n                      const multiplier = get(resp, `data.rates[${base_currency}]`, 1);\n                      const convertedvalue = Number(Number(value || 0) * Number(multiplier)).toFixed(2);\n                      updatebalance(convertedvalue);\n                      Toaster(`Converted successfully: ${original.currency} ${value} to ${base_currency} ${convertedvalue}`, \"success\", 4000);\n                    })\n                    .catch(() => Toaster(\"Automatic currency conversion failed. Please convert manually\"));\n                } else {\n                  updatebalance(value);\n                }\n              }}\n            />\n          </div>\n        );\n      },\n    },\n    {\n      Header: \"\",\n      accessor: \"id\",\n      width: 100,\n      Cell: (props) => (\n        <span className=\"\">\n          {get(props, \"original.status\", \"\") ? (\n            <i className=\"fa fa-key t-red cursor-pointer mr-2\" title=\"Authentication Needed\" />\n          ) : null}\n          <i\n            className={\n              get(props, \"original.status\", \"\")\n                ? \"fa fa-trash-o ml-4 cursor-pointer\"\n                : \"fa fa-trash-o ml-5 cursor-pointer\"\n            }\n            aria-hidden=\"true\"\n            title=\"Delete Account\"\n            onClick={(e) => {\n              e.stopPropagation();\n              const { original, index } = props;\n              setconfirmationboxData({\n                variant: \"warning\",\n                msg: \"Are you sure you want to delete?\",\n                onSave: () => {\n                  resetconfirmationboxData();\n\n                  instance.put(`bankaccount/delete?id=${original.id}`, {}).then(() => {\n                    localStorage.setItem(\"refresh_reports\", true);\n                    Toaster(\"Deleted successfully\", \"success\");\n                    let updatedaccountData = accountData.filter((x, i) => i !== index);\n                    setAccountData([]);\n                    setAccountData(updatedaccountData);\n                  });\n                },\n              });\n            }}\n          />\n        </span>\n      ),\n    },\n  ];\n\n  return (\n    <Accordion defaultActiveKey={expand === \"#bankbalance\" && \"0\"} className=\"col-md-12\">\n      <Accordion.Toggle className=\"border mt-4 px-3 cursour-pointer bg-light-grey\" as={Card.Header} eventKey=\"0\">\n        <h6 className=\"my-0\">Accounts</h6>\n      </Accordion.Toggle>\n      <Accordion.Collapse className=\"py-2\" eventKey=\"0\">\n        <div>\n          <div className=\"row\">\n            <div className=\"col-md-8\">\n              <button\n                type=\"button\"\n                onClick={() => setShow(true)}\n                className=\"btn subbtn btn-primary pull-left m-2 p-2 mr-3\"\n                data-toggle=\"modal\"\n                data-target=\"#myModal\"\n              >\n                Add account\n              </button>\n              <label className=\"ml-3 pull-right mt-3 pt-1\">\n                <span style={{ \n                  position: \"absolute\",\n                  right: \"52px\"\n                 }}>Auto convert currencies</span>\n                <span>\n                  <input\n                    style={{\n                      width: 20,\n                      height: 20,\n                      margin: 0,\n                      padding: 0,\n                      position: \"absolute\",\n                      right: \"0px\",\n                      top: 22\n                    }}\n                    type=\"checkbox\"\n                    className=\"mr-3 cursour-pointer\"\n                    placeholder=\"Enter ...\"\n                    onClick={setconversion}\n                    checked={auto_convert_currencies}\n                  />\n                </span>\n              </label>\n              <CustomPlaidLink getAccount={getAccount} />\n              <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                  <Modal.Title>\n                    <h3>Add Account</h3>\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body closeButton>\n                  <div className=\"form-group\">\n                    <span>\n                      <label>Bank name</label>\n                    </span>\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      value={account.name}\n                      onBlur={onBlurr}\n                      onFocus={onChange}\n                      onChange={onChange}\n                      className=\"form-control\"\n                      placeholder=\"Enter ...\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <span>\n                      <label>Account no</label>\n                    </span>\n                    <input\n                      type=\"text\"\n                      name=\"account_number\"\n                      value={account.account_number}\n                      onBlur={onBlurr}\n                      onFocus={onChange}\n                      onChange={onChange}\n                      className=\"form-control\"\n                      placeholder=\"Enter ...\"\n                    />\n                  </div>\n                  {/* \n                  // No such field in DB\n                  <div className=\"form-group\">\n                    <span>\n                      <label>Routing number</label>\n                    </span>\n                    <input\n                      type=\"text\"\n                      name=\"client_id\"\n                      value={account.client_id}\n                      onBlur={onBlurr}\n                      onFocus={onChange}\n                      onChange={onChange}\n                      className=\"form-control\"\n                      placeholder=\"Enter ...\"\n                    />\n                  </div> */}\n                </Modal.Body>\n                <Modal.Footer>\n                  <Button\n                    variant=\"primary\"\n                    disabled={!(account && account.name && account.account_number)}\n                    onClick={addAccount}\n                  >\n                    Add\n                  </Button>\n                </Modal.Footer>\n              </Modal>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-8\">\n              <div className=\"paynewdetsectran tablemargin\">\n                <ReactTable\n                  noDataText={isFetching ? \"\" : \"No data found\"}\n                  pageSize={accountData.length > 1 ? accountData.length : 1}\n                  // pageSize={30}\n                  loading={isFetching}\n                  sortable={false}\n                  resizable={true}\n                  showPagination={false}\n                  columns={columns}\n                  data={accountData}\n                  getTrGroupProps={(state, rowInfo, column) => {\n                    return {\n                      onClick: (e) => updatePlaidToken(rowInfo.original),\n                      style: {\n                        border: rowInfo && rowInfo.original.status === 1 ? \"1px solid red\" : \"\",\n                      },\n                    };\n                  }}\n                />\n              </div>\n            </div>\n            {/* <div className=\"col-md-1\">\n              <i\n                style={{ marginTop: 28, marginLeft: -22, fontSize: 20 }}\n                onClick={e => {}}\n                className={`fa fa-plus cashinflowclick`}\n                title=\"Click to add item\"\n                aria-hidden=\"true\"\n              />\n            </div> */}\n          </div>\n        </div>\n      </Accordion.Collapse>\n    </Accordion>\n  );\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Account);\n","import { resetconfirmationboxData, setconfirmationboxData } from \"components/ConfirmationBox\";\nimport Toaster from \"components/Toaster\";\nimport { handleAPIError } from \"handlers/setters\";\nimport React, { useEffect, useState } from \"react\";\nimport { Accordion, Card, Modal } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport ReactTable from \"react-table-v6\";\nimport TokenManager from \"utils/TokenManager\";\nimport { instance } from \"../../../actions/axiosInstance\";\nimport TextEditorCell from \"components/Table/TextEditorCell\";\nimport SelectEditorCell from \"components/Table/SelectEditorCell\";\nimport get from \"lodash/get\";\nimport { emailRegEx, passwordRegEx } from \"constants/regex\";\n\nfunction User(props) {\n  let usermodel = {\n    id: 0,\n    name: \"\",\n    department: \"\",\n    role: \"\",\n    email: \"\",\n  };\n  const [user, setUser] = useState(usermodel);\n  const [addInProgress, setaddInProgress] = useState(false);\n  const [isexpanded, setisexpanded] = useState(false);\n  const [userData, setUserData] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [selectedUser, setselectedUser] = useState(null);\n  const isAdmin = TokenManager.getIsAdmin();\n  const expand = props.location.hash;\n  const [userPassword, setUserPassword] = useState({\n    newPassword: \"\",\n    confirmPassword: \"\",\n  });\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [showError, setshowError] = useState(false);\n  \n\n  function getUser() {\n    //todo: get data from api\n    let URL = `client/user`;\n    setIsFetching(true);\n    instance\n      .get(URL)\n      .then((response) => {\n        setIsFetching(false);\n        setUserData(response.data.result);\n      })\n      .catch((e) => {\n        setIsFetching(false);\n      });\n  }\n\n  const update = (e) => {\n    e.preventDefault();\n    let URL = \"user/setpassword\";\n    if (!passwordRegEx.test(userPassword.newPassword)) {\n      setshowError(true);\n      Toaster(\"Password must contain in 8 characters and 1 digit!\", \"error\");\n    } else if (userPassword.newPassword !== userPassword.confirmPassword) {\n      setshowError(true);\n      Toaster(\"New password and Confirm password did not match!\", \"error\");\n    } else {\n      instance\n        .post(URL, { password: userPassword.confirmPassword, userid: selectedUser.id })\n        .then((response) => {\n          Toaster(\"Password updated successfully\", \"success\");\n          setUserPassword({\n            newPassword: \"\",\n            confirmPassword: \"\",\n          });\n          setshowError(false);\n          setselectedUser(null);\n        })\n        .catch((e) => handleAPIError(e));\n    }\n  };\n\n  useEffect(() => {\n    getUser();\n    if ([\"#users\"].includes(expand)) {\n      document.getElementById(\"users\").scrollIntoView();\n    }\n  }, []);\n\n  function addUser() {\n    if (!user.email || !user.role) {\n      return;\n    }\n\n    const postdata = { name: user.name, email: user.email, roles: [user.role], department: user.department };\n\n    instance\n      .post(`client/inviteuser`, postdata)\n      .then((resp) => {\n        Toaster(\"Invitation sent successfully\", \"success\");\n        clearAccount();\n        setUser(usermodel);\n        getUser();\n        setaddInProgress(false);\n      })\n      .catch((e) => {\n        handleAPIError(e);\n        Toaster(\"User already exists\", \"error\");\n      });\n  }\n\n  const clearAccount = () => {\n    user.name = \"\";\n    user.department = \"\";\n    user.role = \"\";\n    user.email = \"\";\n  };\n\n  const onChangeNewUser = (e) => {\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  const onBlurrNewUser = (e) => {\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setUserPassword({ ...userPassword, [name]: value });\n  };\n\n  const onBlurr = (e) => {\n    const { name, value } = e.target;\n    setUserPassword({ ...userPassword, [name]: value });\n  };\n\n  const columns = [\n    {\n      Header: \"ID\",\n      accessor: \"id\",\n      className: \"ml-3\",\n    },\n    {\n      Header: \"Name\",\n      accessor: \"name\",\n      Cell: (data) => {\n        return (\n          <div onClick={(e) => e.stopPropagation()}>\n            <TextEditorCell\n              {...data}\n              iscellcomponent\n              updateValue={(value) => {\n                const { original } = data;\n                const postdata = {\n                  name: value || \"\",\n                };\n                const URL = `/client/user?id=${original.id}`;\n                instance.put(URL, postdata).then(() => {\n                  Toaster(\"Updated successfully\", \"success\");\n                });\n              }}\n            />\n          </div>\n        );\n      },\n    },\n    {\n      Header: \"Department\",\n      accessor: \"department\",\n      Cell: (data) => {\n        return (\n          <div onClick={(e) => e.stopPropagation()}>\n            <TextEditorCell\n              {...data}\n              iscellcomponent\n              updateValue={(value) => {\n                const { original } = data;\n                const postdata = {\n                  department: value || \"\",\n                };\n                const URL = `/client/user?id=${original.id}`;\n                instance.put(URL, postdata).then(() => {\n                  Toaster(\"Updated successfully\", \"success\");\n                });\n              }}\n            />\n          </div>\n        );\n      },\n    },\n    {\n      Header: \"Role\",\n      accessor: \"roles\",\n      Cell: (data) => {\n        return TokenManager.getUserId() == data.original.id ? (\n          get(data, \"value[0]\", \"\") === \"payadmin\" ? (\n            \"admin\"\n          ) : (\n            get(data, \"value[0]\", \"\")\n          )\n        ) : (\n          <div onClick={(e) => e.stopPropagation()}>\n            <SelectEditorCell\n              {...data}\n              value={get(data, \"value[0]\", \"\") === \"payadmin\" ? \"admin\" : get(data, \"value[0]\", \"\")}\n              options={[\n                { id: \"admin\", value: \"admin\", name: \"Admin\" },\n                { id: \"user\", value: \"user\", name: \"User\" },\n              ]}\n              iscellcomponent\n              updateValue={(value) => {\n                if (value) {\n                  const { original } = data;\n                  const postdata = {\n                    role: [value || \"\"],\n                  };\n                  const URL = `/client/user?id=${original.id}`;\n                  instance.put(URL, postdata).then(() => {\n                    Toaster(\"Updated successfully\", \"success\");\n                  });\n                }\n              }}\n            />\n          </div>\n        );\n      },\n    },\n    {\n      Header: \"Email\",\n      accessor: \"email\",\n      // Cell: (data) => {\n      //   return (\n      //     <div onClick={(e) => e.stopPropagation()}>\n      //       <TextEditorCell\n      //         {...data}\n      //         iscellcomponent\n      //         updateValue={(value) => {\n      //           const { original } = data;\n      //           if (!emailRegEx.test(value)) {\n      //             Toaster(\"Invalid email id\", \"error\");\n      //             return;\n      //           }\n      //           const postdata = {\n      //             email: value || \"\",\n      //           };\n      //           const URL = `/client/user?id=${original.id}`;\n      //           instance.put(URL, postdata).then(() => {\n      //             Toaster(\"Updated successfully\", \"success\");\n      //           });\n      //         }}\n      //       />\n      //     </div>\n      //   );\n      // },\n    },\n    {\n      Header: () => <span className=\"ml-2\"></span>,\n      accessor: \"id\",\n      width: 100,\n      className: \"overflow-unset\",\n      Cell: (data) =>\n        TokenManager.getUserId() != data.value ? (\n          <span>\n            <i\n              onClick={() => setselectedUser(data.original)}\n              className=\"fa far fa-key color-blue cursour-pointer mx-2\"\n              title=\"Reset Password\"\n            />\n            |\n            <i\n              onClick={() => {\n                setconfirmationboxData({\n                  variant: \"warning\",\n                  msg: `Are you sure you want to remove ${get(data, \"original.name\", \"\")}?`,\n                  onSave: () => {\n                    resetconfirmationboxData();\n                    instance.post(`client/user/delete?id=${data.value}`).then((resp) => {\n                      getUser();\n                      Toaster(\"Deleted successfully\", \"success\");\n                    });\n                  },\n                });\n              }}\n              className=\"fa fa-trash-o color-blue cursour-pointer mx-2\"\n              title=\"Remove user\"\n            />\n          </span>\n        ) : null,\n    },\n  ];\n\n  return isAdmin ? (\n    <>\n      <Modal size=\"md\" show={selectedUser} onHide={() => setselectedUser(null)}>\n        <Modal.Header closeButton>Reset password for {get(selectedUser, \"name\", \"\")}</Modal.Header>\n        <Modal.Body>\n          <form onSubmit={update} className=\"d-flex justify-content-center row px-5\">\n            <div className=\"col-md-12\">\n              <div className=\"form-group\">\n                <span>\n                  <label>New password</label>\n                </span>\n                <input\n                  type=\"password\"\n                  name=\"newPassword\"\n                  className={`form-control ${showError && userPassword.newPassword && !passwordRegEx.test(userPassword.newPassword) ? \"error\" : \"\"}`}\n                  placeholder=\"8 char, min 1 digit\"\n                  autoComplete=\"off\"\n                  onFocus={onChange}\n                  onChange={onChange}\n                  onBlur={onBlurr}\n                  required\n                  value={userPassword.newPassword}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-12\">\n              <div className=\"form-group\">\n                <span>\n                  <label>Confirm password</label>\n                </span>\n                <div className=\"confirm-password\">\n                  <input\n                    type={showConfirmPassword ? \"text\" : \"password\"}\n                    name=\"confirmPassword\"\n                    className={`form-control ${showError && userPassword.newPassword !== userPassword.confirmPassword ? \"error\" : \"\"}`}\n                    placeholder=\"Enter ...\"\n                    autoComplete=\"off\"\n                    onFocus={onChange}\n                    onChange={onChange}\n                    onBlur={onBlurr}\n                    required\n                    value={userPassword.confirmPassword}\n                    error={userPassword.newPassword}\n                  />\n                  <span\n                    className=\"show-hide-toggle eye-password\"\n                    role=\"presentation\"\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                  >\n                    {showConfirmPassword ? (\n                      <i className=\"fa fa-eye\" style={{ cursor: \"pointer\", fontSize: \"15px\" }} title=\"Show Password\" />\n                    ) : (\n                      <i\n                        className=\"fa fa-eye-slash\"\n                        style={{ cursor: \"pointer\", fontSize: \"15px\" }}\n                        title=\"Show Password\"\n                      />\n                    )}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12\">\n              <div className=\"form-group text-right\" style={{ marginTop: \"30px\" }}>\n                <button type=\"submit\" className=\"btn subbtn btn-success\">\n                  {isProcessing ? (\n                    <span>\n                      Updating <i class=\"fa fa-spinner fa-spin\" style={{ fontSize: \"11px\" }} aria-hidden=\"true\"></i>\n                    </span>\n                  ) : (\n                    <span>Update</span>\n                  )}\n                </button>\n              </div>\n            </div>\n          </form>\n        </Modal.Body>\n      </Modal>\n      <Accordion className=\"col-md-12\" defaultActiveKey={expand === \"#users\" && \"0\"} id=\"users\">\n        <Accordion.Toggle\n          className=\"border mt-4 px-3 cursour-pointer bg-light-grey\"\n          onClick={() => {\n            setisexpanded(!isexpanded);\n            isexpanded && getUser();\n          }}\n          as={Card.Header}\n          eventKey=\"0\"\n        >\n          <h6 className=\"my-0\">\n            Users\n            {!addInProgress && (isexpanded || expand === \"#users\") && isAdmin && (\n              <i\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setaddInProgress(true);\n                }}\n                className={`fa fa-plus cashinflowclick t-10 ${false ? \"hide\" : \"\"}`}\n                title=\"click to add/invite user\"\n                aria-hidden=\"true\"\n              ></i>\n            )}\n          </h6>\n        </Accordion.Toggle>\n        <Accordion.Collapse className=\"p-2 px-3\" eventKey=\"0\">\n          <form action method=\"post\">\n            <div className=\"px-0\">\n              {addInProgress && (\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <div className=\"form-group\">\n                      <span>\n                        <label>Name</label>\n                      </span>\n                      <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={user.name}\n                        onBlur={onBlurrNewUser}\n                        onFocus={onChangeNewUser}\n                        onChange={onChangeNewUser}\n                        className=\"form-control\"\n                        placeholder=\"Enter ...\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <div className=\"form-group\">\n                      <span>\n                        <label>Department</label>\n                      </span>\n                      <input\n                        type=\"text\"\n                        name=\"department\"\n                        value={user.department}\n                        onBlur={onBlurrNewUser}\n                        onFocus={onChangeNewUser}\n                        onChange={onChangeNewUser}\n                        className=\"form-control\"\n                        placeholder=\"Enter ...\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <div className=\"form-group\">\n                      <span>\n                        <label>Roles</label>\n                      </span>\n                      <select\n                        className=\"form-control\"\n                        name=\"role\"\n                        value={user.role}\n                        onBlur={onBlurrNewUser}\n                        onFocus={onChangeNewUser}\n                        onChange={onChangeNewUser}\n                      >\n                        <option selected disabled value=\"\">\n                          Select\n                        </option>\n                        <option value=\"admin\">Admin</option>\n                        <option value=\"user\">User</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <div className=\"form-group\">\n                      <span>\n                        <label>Email</label>\n                      </span>\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        value={user.email}\n                        onBlur={onBlurrNewUser}\n                        onFocus={onChangeNewUser}\n                        onChange={onChangeNewUser}\n                        className=\"form-control\"\n                        placeholder=\"Enter ...\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-md-4\" />\n                  <div className=\"col-md-4\">\n                    <div className=\"form-group text-right\" style={{ marginTop: \"30px\" }}>\n                      <button type=\"button\" className=\"btn subbtn btn-primary mr-2\" onClick={() => setaddInProgress(false)}>Cancel</button>\n                      <button type=\"button\" onClick={addUser} className=\"btn subbtn btn-success\">\n                        Invite User\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"row px-0\">\n                <div className=\"col-md-12 px-0\">\n                  <div className=\"paynewdetsectran tablemargin\">\n                    <ReactTable\n                      noDataText={isFetching ? \"\" : \"No data found\"}\n                      minRows={1}\n                      loading={isFetching}\n                      sortable={true}\n                      resizable={true}\n                      showPagination={false}\n                      columns={columns}\n                      data={userData}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>\n        </Accordion.Collapse>\n      </Accordion>\n    </>\n  ) : null;\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(User);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport { handleAPIError } from \"handlers/setters\";\nimport Toaster from \"components/Toaster\";\nimport { instance } from \"actions/axiosInstance\";\n\nfunction ReportConfig(props) {\n    const forecastWeekArray = [4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    const weekDays = [\"Sunday\", \"Monday\", \"Tuesday\", \"wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    const reportFrequency = [\"Monthly\", \"Weekly\"];\n    const monthCountArray = [2, 3, 4, 5, 6, 8, 9, 10, 11, 12];\n    const actualsWeekArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    const actualsMonthArray = [1, 2, 3, 4, 5, 6]\n    const expand = props.location.hash;\n\n    const [weekCount, setWeekCount] = useState(13); //default 13\n    const [startDay, setWeekStartDay] = useState(6); //default saturday\n    const [reportInterval, setreportInterval] = useState(\"weekly\") //default week\n    const [monthCount, setMonthCount] = useState(2) // default 2 months\n    const [weekActualsCount, setWeekActualsCount] = useState(4) // default 4\n    const [monthActualsCount, setMonthActualsCount] = useState(1) // default 4\n\n    useEffect(() => {\n        getCompany();\n        if (['#reportconfig', '#reports'].includes(expand)) {\n            document.getElementById(\"reports\").scrollIntoView()\n        }\n    }, []);\n\n    function getCompany() {\n        let URL = \"/client\";\n        instance\n            .get(URL)\n            .then(response => {\n                const result = response.data.result;\n                setWeekCount(result.report_num_weeks);\n                setWeekStartDay(result.report_start_day_of_week);\n                setMonthCount(result.report_num_months);\n                setreportInterval(result.report_interval);\n                setWeekActualsCount(result.report_num_actuals_weeks);\n                setMonthActualsCount(result.report_num_actuals_months);\n            })\n            .catch(e => handleAPIError(e));\n    }\n    function updateWeekCount() {\n        let URL = \"/client\";\n        const user = {\n            report_num_weeks: weekCount,\n            report_num_months: monthCount,\n            report_interval: reportInterval,\n            report_start_day_of_week: startDay,\n            report_num_actuals_months: monthActualsCount,\n            report_num_actuals_weeks: weekActualsCount\n        };\n        instance\n            .post(URL, user)\n            .then(response => {\n                Toaster(\"Report configuration updated successfully!\", \"success\");\n                getCompany();\n                if(expand === '#reports') {\n                    props.history.push('/reports');\n                }\n                localStorage.setItem(\"refresh_reports\", true);\n            })\n            .catch(e => handleAPIError(e));\n    }\n\n    return (\n        <Accordion id=\"reports\" defaultActiveKey={['#reportconfig', '#reports'].includes(expand) && \"0\"} className=\"col-md-12\">\n            <Accordion.Toggle className=\"border mt-4 px-3 cursour-pointer bg-light-grey\" as={Card.Header} eventKey=\"0\">\n                <h6 className=\"my-0\">Reports Configuration</h6>\n            </Accordion.Toggle>\n            <Accordion.Collapse className=\"py-2\" eventKey=\"0\">\n                <>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                            <span>\n                                <label>Report Frequency</label>\n                            </span>\n                            <select onChange={e => setreportInterval(e.target.value)} className=\"form-control\">\n                                {\n                                    reportFrequency.map(d => (<option selected={reportInterval === d.toLocaleLowerCase()} value={d.toLocaleLowerCase()}>{d}</option>))\n                                }\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"col-md-8\" />\n                </div>\n                <>\n                    {\n                        reportInterval === 'weekly' ?\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group\">\n                                    <span>\n                                        <label># Actuals Weeks</label>\n                                    </span>\n                                    <select onChange={e => setWeekActualsCount(e.target.value)} className=\"form-control\">\n                                        {\n                                            actualsWeekArray.map(d => (<option selected={weekActualsCount === d} value={d}>{d}</option>))\n                                        }\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group\">\n                                    <span>\n                                        <label># Forecast Weeks</label>\n                                    </span>\n                                    <select onChange={e => setWeekCount(e.target.value)} className=\"form-control\">\n                                        {\n                                            forecastWeekArray.map(d => (<option selected={weekCount === d} value={d}>{d}</option>))\n                                        }\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group\">\n                                    <span>\n                                        <label>Start Day of Week</label>\n                                    </span>\n                                    <select onChange={e => setWeekStartDay(Number(e.target.value))} className=\"form-control\">\n                                        {\n                                            weekDays.map((d, i) => (<option selected={startDay === i} value={i}>{d}</option>))\n                                        }\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        :\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"form-group\">\n                                    <span>\n                                        <label># Actual Months</label>\n                                    </span>\n                                    <select onChange={e => setMonthActualsCount(Number(e.target.value))} className=\"form-control\">\n                                        {\n                                            actualsMonthArray.map(d => (<option selected={monthActualsCount === d} value={d}>{d}</option>))\n                                        }\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"form-group\">\n                                    <span>\n                                        <label># Forecast Months</label>\n                                    </span>\n                                    <select onChange={e => setMonthCount(Number(e.target.value))} className=\"form-control\">\n                                        {\n                                            monthCountArray.map(d => (<option selected={monthCount === d} value={d}>{d}</option>))\n                                        }\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </>\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <button className=\"btn btn-primary mt-3\" onClick={updateWeekCount}>Submit</button>\n                    </div>\n                </div>\n                </>\n            </Accordion.Collapse>\n        </Accordion>\n    );\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportConfig);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Accordion, Card } from \"react-bootstrap\";\n\nfunction Permission(props) {\n  const expand = props.location.hash;\n  React.useEffect(() => {\n    if (['#permissions'].includes(expand)) {\n      document.getElementById(\"permissions\").scrollIntoView()\n    }\n  }, []);\n\n  return (\n    <Accordion className=\"col-md-12\" defaultActiveKey={expand === '#permissions' && \"0\"} id=\"permissions\">\n      <Accordion.Toggle className=\"border mt-4 px-3 cursour-pointer bg-light-grey\" as={Card.Header} eventKey=\"0\">\n        <h6 className=\"my-0\">Permissions</h6>\n      </Accordion.Toggle>\n      <Accordion.Collapse className=\"py-2\" eventKey=\"0\">\n        <form action method=\"post\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <div className=\"form-group px-3\">\n                <span>\n                  <label>Roles</label>\n                </span>\n                <select className=\"form-control\">\n                  <option value>Select</option>\n                  <option value>Admin</option>\n                  <option value>AP clerk</option>\n                  <option value>AR clerk</option>\n                  <option value>Controller</option>\n                  <option value>Procurement</option>\n                </select>\n              </div>\n            </div>\n            {/*<div class=\"col-md-4\"></div>\n                                                    <div class=\"col-md-4\">\n                                                        <div class=\"form-group text-right\" style=\"margin-top:30px;\">\n                                                            <button type=\"submit\" class=\"btn subbtn btn-success\">Update</button>\n                                                        </div>\n                                                    </div>*/}\n            <div className=\"col-md-12\">\n              <div className=\"paynewdetsectran\">\n                <table>\n                  <tbody>\n                    <tr>\n                      <th>Title</th>\n                      <th>View</th>\n                      <th>Edit</th>\n                    </tr>\n                    <tr>\n                      <td>User admin</td>\n                      <td>\n                        <div className=\"custom-control custom-radio\">\n                          <input\n                            type=\"radio\"\n                            className=\"custom-control-input\"\n                            id=\"defaultGroupExample1\"\n                            name=\"groupOfDefaultRadios1\"\n                            defaultChecked\n                          />\n                          <label className=\"custom-control-label\" htmlFor=\"defaultGroupExample1\" />\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"custom-control custom-radio\">\n                          <input\n                            type=\"radio\"\n                            className=\"custom-control-input\"\n                            id=\"defaultGroupExample2\"\n                            name=\"groupOfDefaultRadios1\"\n                          />\n                          <label className=\"custom-control-label\" htmlFor=\"defaultGroupExample2\" />\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>Bank accounts</td>\n                      <td>\n                        <div className=\"custom-control custom-radio\">\n                          <input\n                            type=\"radio\"\n                            className=\"custom-control-input\"\n                            id=\"defaultGroupExample3\"\n                            name=\"groupOfDefaultRadios2\"\n                            defaultChecked\n                          />\n                          <label className=\"custom-control-label\" htmlFor=\"defaultGroupExample3\" />\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"custom-control custom-radio\">\n                          <input\n                            type=\"radio\"\n                            className=\"custom-control-input\"\n                            id=\"defaultGroupExample4\"\n                            name=\"groupOfDefaultRadios2\"\n                          />\n                          <label className=\"custom-control-label\" htmlFor=\"defaultGroupExample4\" />\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>Payables</td>\n                      <td>\n                        <div className=\"custom-control custom-radio\">\n                          <input\n                            type=\"radio\"\n                            className=\"custom-control-input\"\n                            id=\"defaultGroupExample5\"\n                            name=\"groupOfDefaultRadios3\"\n                          />\n                          <label className=\"custom-control-label\" htmlFor=\"defaultGroupExample5\" />\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"custom-control custom-radio\">\n                          <input\n                            type=\"radio\"\n                            className=\"custom-control-input\"\n                            id=\"defaultGroupExample6\"\n                            name=\"groupOfDefaultRadios3\"\n                            defaultChecked\n                          />\n                          <label className=\"custom-control-label\" htmlFor=\"defaultGroupExample6\" />\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>Receivables</td>\n                      <td>\n                        <div className=\"custom-control custom-radio\">\n                          <input\n                            type=\"radio\"\n                            className=\"custom-control-input\"\n                            id=\"defaultGroupExample7\"\n                            name=\"groupOfDefaultRadios4\"\n                            defaultChecked\n                          />\n                          <label className=\"custom-control-label\" htmlFor=\"defaultGroupExample7\" />\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"custom-control custom-radio\">\n                          <input\n                            type=\"radio\"\n                            className=\"custom-control-input\"\n                            id=\"defaultGroupExample8\"\n                            name=\"groupOfDefaultRadios4\"\n                          />\n                          <label className=\"custom-control-label\" htmlFor=\"defaultGroupExample8\" />\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>Make payments</td>\n                      <td>\n                        <div className=\"custom-control custom-radio\">\n                          <input\n                            type=\"radio\"\n                            className=\"custom-control-input\"\n                            id=\"defaultGroupExample9\"\n                            name=\"groupOfDefaultRadios5\"\n                          />\n                          <label className=\"custom-control-label\" htmlFor=\"defaultGroupExample9\" />\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"custom-control custom-radio\">\n                          <input\n                            type=\"radio\"\n                            className=\"custom-control-input\"\n                            id=\"defaultGroupExample10\"\n                            name=\"groupOfDefaultRadios5\"\n                            defaultChecked\n                          />\n                          <label className=\"custom-control-label\" htmlFor=\"defaultGroupExample10\" />\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>Vendors</td>\n                      <td>\n                        <div className=\"custom-control custom-radio\">\n                          <input\n                            type=\"radio\"\n                            className=\"custom-control-input\"\n                            id=\"defaultGroupExample11\"\n                            name=\"groupOfDefaultRadios6\"\n                            defaultChecked\n                          />\n                          <label className=\"custom-control-label\" htmlFor=\"defaultGroupExample11\" />\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"custom-control custom-radio\">\n                          <input\n                            type=\"radio\"\n                            className=\"custom-control-input\"\n                            id=\"defaultGroupExample12\"\n                            name=\"groupOfDefaultRadios6\"\n                          />\n                          <label className=\"custom-control-label\" htmlFor=\"defaultGroupExample12\" />\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>Customers</td>\n                      <td>\n                        <div className=\"custom-control custom-radio\">\n                          <input\n                            type=\"radio\"\n                            className=\"custom-control-input\"\n                            id=\"defaultGroupExample13\"\n                            name=\"groupOfDefaultRadios7\"\n                          />\n                          <label className=\"custom-control-label\" htmlFor=\"defaultGroupExample13\" />\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"custom-control custom-radio\">\n                          <input\n                            type=\"radio\"\n                            className=\"custom-control-input\"\n                            id=\"defaultGroupExample14\"\n                            name=\"groupOfDefaultRadios7\"\n                            defaultChecked\n                          />\n                          <label className=\"custom-control-label\" htmlFor=\"defaultGroupExample14\" />\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>Approvals</td>\n                      <td>\n                        <div className=\"custom-control custom-radio\">\n                          <input\n                            type=\"radio\"\n                            className=\"custom-control-input\"\n                            id=\"defaultGroupExample15\"\n                            name=\"groupOfDefaultRadios8\"\n                            defaultChecked\n                          />\n                          <label className=\"custom-control-label\" htmlFor=\"defaultGroupExample15\" />\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"custom-control custom-radio\">\n                          <input\n                            type=\"radio\"\n                            className=\"custom-control-input\"\n                            id=\"defaultGroupExample16\"\n                            name=\"groupOfDefaultRadios8\"\n                          />\n                          <label className=\"custom-control-label\" htmlFor=\"defaultGroupExample16\" />\n                        </div>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n            <div className=\"col-md-12\">\n              <div className=\"form-group text-right\" style={{ marginTop: \"20px\" }}>\n                <button type=\"submit\" className=\"btn subbtn btn-success\">\n                  Update\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Accordion.Collapse>\n    </Accordion>\n  );\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Permission);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport \"assets/css/payables.css\";\nimport { Link } from \"react-router-dom\";\nimport ProfileDetails from './profiledetail';\nimport AccountDetails from './accounts';\nimport UserDetails from './users';\nimport ReportConfig from './reportConfig';\nimport PermissionDetails from './permissions'\nimport \"./company.css\"\nimport fe_config from \"constants/Configs\";\n\nfunction Company(props) {\n  const { history, match } = props;\n  return (\n    <div className=\"row\" id=\"dashboardBody\">\n    <div className=\"col-md-12\">\n        <div className=\"card\">\n            <div className=\"card-body\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"paynewdetsec\" style={{ marginBottom: '10px' }}>\n                                    <div className=\"titletranshist\" style={{ fontSize: '18px', paddingBottom: '15px', float: 'left' }}>\n                                        <Link to='/settings' key=\"back\"><i className=\"fa fa-arrow-left\" style={{ color: '#ddd', marginRight: '5px' }} /> </Link>&nbsp;Company Details\n                                    </div>\n                                    <div className=\"dropdown float-right\">\n                                        {fe_config.MODE === \"DEV\" && <a className=\"btn dropdown-toggle btn-primary\" href=\"#\" role=\"button\" id=\"export\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                            Export\n                                            </a>}\n                                        <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuLink\" id=\"exportlist\">\n                                            <a href=\"#\">Export CSV</a>\n                                            <a href=\"#\">Export Excel</a>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                            <ProfileDetails {...props} />\n                            <AccountDetails {...props} />\n                            <UserDetails {...props} />\n                            <ReportConfig {...props} />\n                            {fe_config.MODE === \"DEV\" && <PermissionDetails {...props} />}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n  );\n}\n\nconst mapStateToProps = state => ({ login: state.payables });\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Company));\n  \n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CSVLink } from \"react-csv\";\nimport * as XLSX from \"xlsx\";\nimport moment from \"moment\";\nimport * as FileSaver from \"file-saver\";\nimport ClickAwayListener from \"components/ClickAwayListener\";\nimport get from 'lodash/get';\nimport fe_config from 'constants/Configs';\nimport { instance } from \"actions/axiosInstance\";\nimport { handleAPIError } from \"handlers/setters\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport { setconfirmationboxData, resetconfirmationboxData } from \"components/ConfirmationBox\";\nimport {Category} from '@material-ui/icons';\n\nexport const ExportXLSX = csvData => {\n    const filename = `payeables${moment().format(\"MMMM Do YYYY-h:mm:ss-a\")}.xlsx`;\n    const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const ws = XLSX.utils.json_to_sheet(csvData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, filename);\n};\n\nfunction ExportCSV(data) {\n    const csvData = data.map(element => ({\n        Supplier: get(element, \"supplier.name\", \"\"),\n        InvoiceNo: get(element, \"invoice_number\", \"\"),\n        DueDate: moment(get(element, \"due_date\", \"\")).format(\"YYYY/MM/DD\"),\n        Recommendation: get(element, \"recommendation\", \"\"),\n        InvoiceDate: moment(get(element, \"invoice_date\", \"\")).format(\"YYYY/MM/DD\"),\n        AmountDue: get(element, \"total_amount_due\", \"\")\n    }));\n\n    return csvData;\n}\n\nclass PayableSettings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showexport: false,\n            vendorCategoryList: [],\n            line: '',\n            selectedData: null,\n            currPage: 1,\n            isVendorCategoryLoading: true,\n        }\n    }\n\n    componentDidMount() {\n        this.getVendorCategory();\n        const hash = this.props.location.hash;\n        if (hash) {\n            document.getElementById(hash.replace('#', '')).scrollIntoView(true);\n        }\n    }\n\n    setshowExport = flag => {\n        this.setState({ showexport: flag });\n    }\n\n    getVendorCategory = () => {\n        this.setState({\n            isVendorCategoryLoading: true,\n        });\n        instance\n            .get(`vendorcategory?per_page=100`)\n            .then(response => {\n                this.setState({\n                    vendorCategoryList: response.data.result.sort((a, b) => (+b.is_selected - +a.is_selected)),\n                    isVendorCategoryLoading: false,\n                })\n            })\n            .catch(e => handleAPIError(e));\n    }\n\n    onSubmit = () => {\n        const { selectedData } = this.state;\n        const URL = selectedData.id ? `vendorcategory?id=${selectedData.id}` : 'vendorcategory';\n        const method = selectedData.id ? 'patch' : 'post';\n        const requestObject = {\n            name: selectedData.name,\n            internal_id: Number(selectedData.internal_id),\n            is_selected: selectedData.is_selected\n        };\n\n        if (!selectedData.internal_id) {\n            delete requestObject.internal_id;\n        }\n        instance\n        [method](URL, { ...requestObject})\n            .then(() => {\n                this.setState({\n                    line: '',\n                    selectedData: null,\n                });\n                this.getVendorCategory();\n                localStorage.setItem(\"refresh_reports\", true);\n            })\n            .catch(e => handleAPIError(e));\n    };\n\n    onDelete = (id) => {\n        instance\n            .delete(`vendorcategory?id=${id}`)\n            .then(() => {\n                this.getVendorCategory();\n                localStorage.setItem(\"refresh_reports\", true);\n            })\n            .catch(e => handleAPIError(e));\n    }\n\n    renderEditableRow = () => {\n        const {\n            selectedData:{\n                id,\n                name,\n                internal_id,\n                is_selected,\n            },\n            vendorCategoryList,\n        } = this.state;\n\n        const isExistingId = !id && vendorCategoryList.some(d => d.internal_id === Number(internal_id));\n        return(\n            <tr>\n                <td className=\"text-sm-center\">\n                    <input type=\"checkbox\" className=\"md-checkbox\" defaultChecked={is_selected} onChange={e => this.setState({ selectedData: { ...this.state.selectedData, is_selected: +e.target.checked } })} />\n                </td>\n                <td>\n                    <input\n                        type=\"text\"\n                        onChange={e => this.setState({ selectedData: { ...this.state.selectedData, name: e.target.value}})}\n                        className=\"form-control\"\n                        defaultValue={name}\n                    />\n                </td>\n                <td>\n                    <input\n                        type=\"number\"\n                        onInput={e => this.setState({ selectedData: { ...this.state.selectedData, internal_id: e.target.value } })}\n                        readOnly={!!id}\n                        className={isExistingId ? \"error form-control\" : \"form-control\"}\n                        defaultValue={internal_id}\n                    />\n                </td>\n                <td className=\"text-sm-center\">\n                    <button disabled={!name || isExistingId} className=\"btn\" onClick={this.onSubmit} >\n                        <i className=\"fa fa-save cursor-pointer color-blue\" />\n                    </button>\n                    {\"|\"}\n                    <button className=\"btn\" onClick={() => this.setState({ line: '', selectedData: null })}>\n                        <i className=\"fa fa-remove cusor-pointer color-blue\" />\n                    </button>\n                </td>\n            </tr>\n        )\n    }\n\n    paginate = (array, page_size, page_number) => array.slice((page_number - 1) * page_size, page_number * page_size);\n\n    handlePagination = (action) => {\n        const {\n            currPage,\n        } = this.state;\n        let newPage = currPage;\n        if(action === 'prev') {\n            newPage = currPage === 1 ? 1 : currPage - 1;\n        }\n        if (action === 'next') {\n            newPage = currPage + 1;\n        }\n        this.setState(\n            {\n                currPage: newPage\n            }\n        );\n    }\n\n    render() {\n        const {\n            line,\n            currPage,\n            showexport,\n            vendorCategoryList,\n            isVendorCategoryLoading\n        } = this.state;\n        const disablePrev = currPage === 1;\n        const disableNext = !vendorCategoryList.length || vendorCategoryList.length < 20;\n        const expand = this.props.location.hash;\n        return(\n            <div className=\"row\" id=\"dashboardBody\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"paynewdetsec\">\n                                        <div className=\"float-left\" style={{ fontSize: '18px', paddingBottom: '15px', float: 'left' }}>\n                                            <Link to=\"/settings\" title=\"Back\"><i className=\"fa fa-arrow-left\" aria-hidden=\"true\" style={{ color: '#ddd', marginRight: '10px' }}></i></Link>\n                                            Payables Settings\n                                        </div>\n                                        <div className=\"dropdown float-right\">\n                                            {fe_config.MODE === \"DEV\" && <span\n                                                className=\"btn dropdown-toggle btn-primary\"\n                                                role=\"button\"\n                                                id=\"\"\n                                                data-toggle=\"dropdown\"\n                                                aria-haspopup=\"true\"\n                                                aria-expanded=\"false\"\n                                                onClick={() => this.setshowExport(true)}\n                                            >\n                                                Export\n                                            </span>}\n                                            <ClickAwayListener onClickAway={this.setshowExport}>\n                                                <div\n                                                    className={`dropdown-menu dropdown-menu-right payexpdroplist ${showexport && \"show\"}`}\n                                                    aria-labelledby=\"dropdownMenuLink\"\n                                                    id=\"\"\n                                                >\n                                                    <CSVLink\n                                                        data={ExportCSV([])}\n                                                        filename={`payable_${moment().format(\"MMMM Do YYYY-h:mm:ss-a\")}.csv`}\n                                                    >\n                                                        Export CSV\n                                                    </CSVLink>\n                                                    <span\n                                                        style={{ fontSize: 12, float: \"right\", marginRight: \"10px\", cursor: \"pointer\" }}\n                                                        onClick={() => ExportXLSX(ExportCSV([]))}\n                                                    >\n                                                        Export Excel\n                                                    </span>\n                                                </div>\n                                            </ClickAwayListener>\n                                        </div>\n                                    </div>\n                                </div>\n                                {fe_config.MODE === \"DEV\" && (\n                                <React.Fragment>\n                                <div className=\"col-md-12 paynewdetsec\">\n                                    <div className=\"divider\" />\n                                    <div style={{fontSize:'18px', marginBottom: '15px'}}>Preferences</div>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-4\">\n                                            <div className=\"form-group\">\n                                                <label>Single payment for multiple invoices</label>\n                                                <select className=\"form-control\" onChange={(e) => this.setState({ invoiceOption: e.target.value})}>\n                                                    <option value=\"\">Select</option>\n                                                    <option value=\"1\">Yes</option>\n                                                    <option value=\"2\">No</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6\">\n                                            <div className=\"paynewdetsectran tablemargin\">\n                                                <div className=\"form-group\">\n                                                    <span><label>Payment lead time</label></span>\n                                                    <table>\n                                                        <tbody className=\"ui-sortable\">\n                                                            <tr className=\"ui-sortable-handle\">\n                                                                <th>Payment lead time</th>\n                                                                <th>Days/hrs</th>\n                                                            </tr>\n                                                            <tr className=\"ui-sortable-handle\">\n                                                                <td>Check</td>\n                                                                <td>\n                                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter ...\"/>\n                                                                </td>\n                                                            </tr>\n                                                            <tr className=\"ui-sortable-handle\">\n                                                                <td>ACH</td>\n                                                                <td>\n                                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter ...\"/>\n                                                                </td>\n                                                            </tr>\n                                                            <tr className=\"ui-sortable-handle\">\n                                                                <td>Domestic wires</td>\n                                                                <td>\n                                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter ...\"/>\n                                                                </td>\n                                                            </tr>\n                                                            <tr className=\"ui-sortable-handle\">\n                                                                <td>International wires</td>\n                                                                <td>\n                                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter ...\"/>\n                                                                </td>\n                                                            </tr>\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                                <div className=\"form-group text-right\" style={{marginTop:'30px'}}>\n                                                    <button type=\"submit\" className=\"btn subbtn btn-success\">Update</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <Accordion className=\"col-md-12\" defaultActiveKey={expand === '#paymentrules' && \"0\"} id=\"paymentrules\">\n                                    <Accordion.Toggle\n                                        className=\"border mt-4 px-3 cursour-pointer bg-light-grey\"\n                                        as={Card.Header}\n                                        eventKey=\"0\"\n                                    >\n                                        <h6 className=\"my-0\">Payment Rules</h6>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse className=\"py-2\" eventKey=\"0\">\n                                        <div className=\"col-md-12\">\n                                            <div className=\"divider\"></div>\n                                            <div className=\"paynewdetsec\">\n                                                {/* <div className=\"titletranshist\" style={{fontSize:'18px', marginBottom:'15px'}}>Payment Rules</div> */}\n                                                <form action=\"\" method=\"post\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-md-4\">\n                                                            <div className=\"form-group\">\n                                                                <span><label>Spend category</label></span>\n                                                                <select className=\"form-control\">\n                                                                    <option value=\"\">Select</option>\n                                                                    <option value=\"\">All</option>\n                                                                    <option value=\"\">Office Supplies</option>\n                                                                    <option value=\"\">Payoll</option>\n                                                                </select>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"col-md-4\">\n                                                            <div className=\"form-group\">\n                                                                <span><label>Spend amount</label></span>\n                                                                <select className=\"form-control\">\n                                                                    <option value=\"\">Select</option>\n                                                                    <option value=\"\">$2M/month</option>\n                                                                    <option value=\"\">$25K/month</option>\n                                                                    <option value=\"\">$25M/month</option>\n                                                                </select>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"col-md-4\">\n                                                            <div className=\"form-group\">\n                                                                <span><label>Payment method</label></span>\n                                                                <select className=\"form-control\">\n                                                                    <option value=\"\">Select</option>\n                                                                    <option value=\"\">Credit - 5678</option>\n                                                                    <option value=\"\">P card - 2345</option>\n                                                                    <option value=\"\">ACH - 2384</option>\n                                                                </select>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"col-md-4\"></div>\n                                                        <div className=\"col-md-4\"></div>\n                                                        <div className=\"col-md-4\">\n                                                            <div className=\"form-group text-right\" style={{marginTop: '30px'}}>\n                                                                <button type=\"submit\" className=\"btn subbtn btn-success\">Update</button>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </Accordion.Collapse>\n                                </Accordion>\n                                <Accordion className=\"col-md-12\" defaultActiveKey={expand === '#paymentmethods' && \"0\"} id=\"paymentmethods\">\n                                    <Accordion.Toggle\n                                        className=\"border mt-4 px-3 cursour-pointer bg-light-grey\"\n                                        as={Card.Header}\n                                        eventKey=\"0\"\n                                    >\n                                    <h6 className=\"my-0\">Payment Method</h6>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse className=\"py-2\" eventKey=\"0\">\n                                        <>\n                                        <div className=\"col-md-12\">\n                                            <div className=\"paynewdetsec\">\n                                                {/* <div className=\"titletranshist\" style={{fontSize:'18px', marginBottom:'15px'}}>Payment Method Order</div> */}\n                                                <form action=\"\" method=\"post\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-md-4\">\n                                                            <div className=\"paynewdetsectran tablemargin\">\n                                                                <div className=\"form-group\">\n                                                                    <span><label>Payment method order</label></span>\n                                                                    <table>\n                                                                        <tbody className=\"row_position ui-sortable\">\n                                                                            <tr id=\"1\" className=\"ui-sortable-handle\">\n                                                                                <td>Credit card</td>\n                                                                            </tr>\n                                                                            <tr className=\"ui-sortable-handle\">\n                                                                                <td>P card</td>\n                                                                            </tr>\n                                                                            <tr className=\"ui-sortable-handle\">\n                                                                                <td>ACH</td>\n                                                                            </tr>\n                                                                            <tr className=\"ui-sortable-handle\">\n                                                                                <td>Wires</td>\n                                                                            </tr>\n                                                                            <tr className=\"ui-sortable-handle\">\n                                                                                <td>Check</td>\n                                                                            </tr>\n                                                                            <tr className=\"ui-sortable-handle\">\n                                                                                <td>Virtual card</td>\n                                                                            </tr>\n                                                                        </tbody>\n                                                                    </table>\n                                                                </div>\n                                                                <div className=\"form-group text-right\" style={{marginTop: '30px'}}>\n                                                                    <button type=\"submit\" className=\"btn subbtn btn-success\">Update</button>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-md-8\"></div>\n                                                        </div>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-12\">\n                                            <div className=\"divider\"></div>\n                                            <div className=\"paynewdetsec\">\n                                                <div className=\"titletranshist\" style={{fontSize:'18px',marginBottom:'15px'}}>Override Payment Terms</div>\n                                                <form action=\"\" method=\"post\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-md-4\">\n                                                            <div className=\"form-group\">\n                                                                <span><label>Override payment terms</label></span>\n                                                                <div className=\"custom-control custom-radio\">\n                                                                    <input type=\"radio\" className=\"custom-control-input\" id=\"defaultGroupExample1\" name=\"groupOfDefaultRadios1\"/>\n                                                                        <label className=\"custom-control-label\" for=\"defaultGroupExample1\">Yes</label>\n                                                                    </div>\n                                                                    <div className=\"custom-control custom-radio\">\n                                                                        <input type=\"radio\" className=\"custom-control-input\" id=\"defaultGroupExample2\" name=\"groupOfDefaultRadios1\"/>\n                                                                            <label className=\"custom-control-label\" for=\"defaultGroupExample2\">No</label>\n                                                                    </div>\n                                                                </div>\n                                                        </div>\n                                                        <div className=\"col-md-4\"></div>\n                                                        <div className=\"col-md-4\">\n                                                            <div className=\"form-group text-right\" style={{marginTop:'30px'}}>\n                                                                <button type=\"submit\" className=\"btn subbtn btn-success\">Update</button>\n                                                            </div>\n                                                        </div>\n\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </div>\n                                        </>\n                                    </Accordion.Collapse>\n                                </Accordion>\n                                </React.Fragment>)}\n                                    <Accordion className=\"col-md-12\" defaultActiveKey={expand === '#vendorcategory' && \"0\"} id=\"vendorcategory\">\n                                        <Accordion.Toggle\n                                            className=\"border mt-4 px-3 cursour-pointer bg-light-grey\"\n                                            as={Card.Header}\n                                            eventKey=\"0\"\n                                        >\n                                            <h6 className=\"my-0\">Vendor Category</h6>\n                                        </Accordion.Toggle>\n                                        <Accordion.Collapse className=\"py-2\" eventKey=\"0\">\n                                            <ClickAwayListener onClickAway={() => this.setState({ line: '', selectedData: null })}>\n                                                <div className=\"paynewdetsec\">\n                                                    {\n                                                        line !== 'new' ?\n                                                        <button className=\"btn btn-primary mb-2 mt-3\" onClick={e => {\n                                                            e.stopPropagation();\n                                                            this.setState({ selectedData: { name: '', internal_id: '' }, line: 'new' });\n                                                        }}>Add new</button> : null\n                                                    }\n                                                    <div className=\"table-container\">\n                                                        <table className=\"paynewdetsectran\">\n                                                            <tr>\n                                                                <th className=\"column1 text-sm-center\">Reports</th>\n                                                                <th>Name</th>\n                                                                <th>Internal Id</th>\n                                                                <th className=\"text-sm-center\">Action</th>\n                                                            </tr>\n                                                            {\n                                                                line === 'new' ? this.renderEditableRow() : null\n                                                            }\n                                                            {\n                                                                this.paginate(vendorCategoryList, 20, currPage).map((d, index) => {\n                                                                    if(line === index) {\n                                                                        return this.renderEditableRow();\n                                                                    } else {\n                                                                        return(\n                                                                            <tr onClick={() => this.setState({ line: index, selectedData: d, })} key={d.name + isVendorCategoryLoading}>\n                                                                                <td className=\"text-sm-center\">\n                                                                                    <input type=\"checkbox\" className=\"md-checkbox\"  name={d.id} defaultChecked={d.is_selected} onClick={e => e.stopPropagation()} onChange={e => { e.stopPropagation(); this.setState({ selectedData: { ...d, is_selected: +e.target.checked } }, this.onSubmit)}} />\n                                                                                </td>\n                                                                                <td>\n                                                                                    {d.name}\n                                                                                </td>\n                                                                                <td>\n                                                                                    {d.internal_id}\n                                                                                </td>\n                                                                                <td className=\"text-sm-center\">\n                                                                                    <button\n                                                                                        className=\"btn\"\n                                                                                        onClick={e => {\n                                                                                            e.stopPropagation();\n\n                                                                                            setconfirmationboxData({\n                                                                                                variant: \"warning\",\n                                                                                                msg: \"Are you sure you want to delete this category?\",\n                                                                                                onSave: () => {\n                                                                                                    resetconfirmationboxData();\n                                                                                                    this.onDelete(d.id);\n                                                                                                }\n                                                                                            });\n                                                                                        }}\n                                                                                    >\n                                                                                        <i className=\"fa fa-trash-o cursor-pointer color-blue\"/>\n                                                                                    </button>\n                                                                                </td>\n                                                                            </tr>\n                                                                        )\n                                                                    }\n                                                                })\n                                                            }\n                                                        </table>\n                                                        {\n                                                            isVendorCategoryLoading ? <div className=\"loader\">Loading...</div> : null\n                                                        }\n                                                    </div>\n                                                    <div className=\"pull-right mt-3\">\n                                                        <button\n                                                            onClick={() => this.handlePagination(\"prev\")}\n                                                            className=\"btn btn-primary mr-2 width-94px\"\n                                                            disabled={disablePrev}\n                                                        >\n                                                            Previous\n                                                        </button>\n                                                        <button\n                                                            onClick={() => this.handlePagination(\"next\")}\n                                                            className=\"btn btn-primary width-94px\"\n                                                            disabled={disableNext}\n                                                        >\n                                                            Next\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            </ClickAwayListener>\n                                    </Accordion.Collapse>\n                                </Accordion>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PayableSettings;\n","import DynamicForm, { validateMyForm } from \"components/DynamicForm\";\nimport initjson from \"components/DynamicForm/Data/initjson\";\nimport KEYS from \"components/DynamicForm/KEYS\";\nimport Toaster from \"components/Toaster\";\nimport { handleAPIError } from \"handlers/setters\";\nimport React, { useEffect, useState } from \"react\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport TokenManager from \"utils/TokenManager\";\nimport { instance } from \"../../../actions/axiosInstance\";\nimport get from \"lodash/get\"\n\nfunction inputconverter(postdata, allentitites, allbanks) {\n  const FIELD_ARRAY = [\n    {\n      id: \"name\",\n      label: \"Name\",\n      typeid: KEYS.Text,\n    },\n    {\n      id: \"department\",\n      label: \"Department\",\n      typeid: KEYS.Text,\n    },\n    {\n      id: \"phone\",\n      label: \"Phone\",\n      customiserr: ({ fielddata }) => {\n        if (fielddata.value && !/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s./0-9]*$/.test(fielddata.value)) {\n          return true;\n        }\n        return false;\n      },\n      errorText: \"Phone number is invalid\",\n      typeid: KEYS.Text,\n    },\n    {\n      id: \"role\",\n      label: \"Role\",\n      typeid: KEYS.Select,\n      disabled: true,\n      options: [\n        { id: \"admin\", name: \"Admin\" },\n        { id: \"user\", name: \"User\" },\n      ],\n    },\n    {\n      id: \"email\",\n      label: \"Email\",\n      typeid: KEYS.Text,\n      disabled: true,\n      customiserr: ({ fielddata }) => {\n        if (!/^\\w+([\\.-]?\\w+)*([+]{0,1}\\w+){0,1}@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(fielddata.value)) {\n          return true;\n        }\n        return false;\n      },\n      errorText: \"Email is invalid\"\n    },\n  ];\n\n  return FIELD_ARRAY.map((field) => ({\n    ...initjson,\n    ...field,\n    value: postdata[field.id],\n  }));\n}\n\nfunction outputconverter(arr, selectedShift) {\n  const result = { ...selectedShift };\n  arr.forEach((element) => {\n    result[element.id] = element.value;\n  });\n  return result;\n}\n\nfunction ProfileDetails(props) {\n  // let user = {\n  //   id: null,\n  //   name: \"\",\n  //   department: \"\",\n  //   role: \"1\",\n  //   email: \"\",\n  //   phone: \"\",\n  //   username: \"\"\n  // };\n\n  const [userData, setUserData] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isPageLoading, setIsPageLoading] = useState(true);\n\n  useEffect(() => {\n    let URL = `/client/user?id=${TokenManager.getUserId()}`;\n    instance\n      .get(URL)\n      .then((response) => {\n        debugger;\n        if (response.data.result != null && response.data.result[0] != null) {\n          const user = {\n            id: getValue(response.data.result[0].id),\n            name: getValue(response.data.result[0].name),\n            department: getValue(response.data.result[0].department),\n            role: get(response, \"data.result[0].roles[0]\", \"\") === \"payadmin\" ? \"admin\" : (get(response, \"data.result[0].roles[0]\", \"\") || \"1\"),\n            email: getValue(response.data.result[0].email),\n            phone: getValue(response.data.result[0].phone),\n            username: getValue(response.data.result[0].username),\n          };\n          setUserData(user);\n          setIsPageLoading(false);\n        }\n      })\n      .catch((e) => handleAPIError(e));\n  }, []);\n\n  function getUser() {\n    let URL = `/client/user?id=${TokenManager.getUserId()}`;\n    instance\n      .get(URL)\n      .then((response) => {\n        if (response.data.result != null && response.data.result[0] != null) {\n          const user = {\n            id: getValue(response.data.result[0].id),\n            name: getValue(response.data.result[0].name),\n            department: getValue(response.data.result[0].department),\n            role: response.data.result[0].role || \"1\",\n            email: getValue(response.data.result[0].email),\n            phone: getValue(response.data.result[0].phone),\n            username: getValue(response.data.result[0].username),\n          };\n          setUserData(user);\n          setIsPageLoading(false);\n        }\n      })\n      .catch((e) => handleAPIError(e));\n  }\n\n  const getValue = (e) => {\n    return e || \"\";\n  };\n\n  const update = (e) => {\n    const { error, fields = [] } = validateMyForm({\n      formKey: \"editLoggedInUserDetails\",\n    });\n    if (error) {\n      return;\n    }\n    const updatedpostData = { ...userData, ...outputconverter(fields, userData) };\n    if (updatedpostData === userData) {\n      return;\n    }\n    setIsProcessing(true);\n    let URL = `/client/user?id=${TokenManager.getUserId()}`;\n    instance\n      .post(URL, updatedpostData)\n      .then(() => {\n        setIsProcessing(false);\n        Toaster(\"Updated successfully\", \"success\");\n      })\n      .catch((e) => handleAPIError(e));\n  };\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setUserData((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  const onBlurr = (e) => {\n    const { name, value } = e.target;\n    setUserData((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  return (\n    <Accordion className=\"col-md-12\" defaultActiveKey=\"0\">\n      {/* <Accordion.Toggle className=\"border mt-4 px-3 cursour-pointer bg-light-grey\" as={Card.Header} eventKey=\"0\">\n        <h6 className=\"my-0\">Graphs</h6>\n      </Accordion.Toggle> */}\n      <Accordion.Collapse className=\"p-2 px-3\" eventKey=\"0\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            {userData && (\n              <DynamicForm fields={inputconverter(userData)} numberOfColumns={3} formKey=\"editLoggedInUserDetails\" />\n            )}\n          </div>\n\n          <div className=\"col-md-12\">\n            <div className=\"form-group text-right\" style={{ marginTop: \"30px\" }}>\n              <button disabled={isPageLoading} type=\"submit\" onClick={update} className=\"btn subbtn btn-success\">\n                {isProcessing ? (\n                  <span>\n                    Updating <i class=\"fa fa-spinner fa-spin\" style={{ fontSize: \"11px\" }} aria-hidden=\"true\"></i>\n                  </span>\n                ) : (\n                  <span>Update</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      </Accordion.Collapse>\n    </Accordion>\n  );\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileDetails);\n\n{\n  /* <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"form-group\">\n              <span>\n                <label>Name</label>\n              </span>\n              <input\n                type=\"text\"\n                name=\"name\"\n                className=\"form-control\"\n                placeholder=\"Enter ...\"\n                // onFocus={onChange}\n                onChange={onChange}\n                onBlur={onBlurr}\n                value={userData.name}\n              />\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"form-group\">\n              <span>\n                <label>Department</label>\n              </span>\n              <input\n                type=\"text\"\n                value={userData.department}\n                name=\"department\"\n                className=\"form-control\"\n                placeholder=\"Enter ...\"\n                onFocus={onChange}\n                onChange={onChange}\n                onBlur={onBlurr}\n              />\n            </div>\n          </div>\n          {Configs.MODE === \"DEV\" && (\n            <div className=\"col-md-4\">\n              <div className=\"form-group\">\n                <span>\n                  <label>Role</label>\n                </span>\n                <select className=\"form-control\" value={userData.role} name=\"role\" onChange={onChange}>\n                  <option value=\"0\">Select</option>\n                  <option value=\"1\">Admin</option>\n                  <option value=\"2\">AP clerk</option>\n                  <option value=\"3\">AR clerk</option>\n                  <option value=\"4\">Controller</option>\n                  <option value=\"5\">Procurement</option>\n                </select>\n              </div>\n            </div>\n          )}\n          <div className=\"col-md-4\">\n            <div className=\"form-group\">\n              <span>\n                <label>Email</label>\n              </span>\n              <input\n                type=\"email\"\n                value={userData.email}\n                name=\"email\"\n                className=\"form-control\"\n                placeholder=\"Enter ...\"\n                onFocus={onChange}\n                onChange={onChange}\n                onBlur={onBlurr}\n              />\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"form-group\">\n              <span>\n                <label>Phone</label>\n              </span>\n              <input\n                type=\"text\"\n                value={userData.phone}\n                name=\"phone\"\n                className=\"form-control\"\n                placeholder=\"Enter ...\"\n                onFocus={onChange}\n                onChange={onChange}\n                onBlur={onBlurr}\n              />\n            </div>\n          </div>\n\n          <div className=\"col-md-12\">\n            <div className=\"form-group text-right\" style={{ marginTop: \"30px\" }}>\n              <button disabled={isPageLoading} type=\"submit\" onClick={update} className=\"btn subbtn btn-success\">\n                {isProcessing ? (\n                  <span>\n                    Updating <i class=\"fa fa-spinner fa-spin\" style={{ fontSize: \"11px\" }} aria-hidden=\"true\"></i>\n                  </span>\n                ) : (\n                  <span>Update</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div> */\n}\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Accordion, Card } from \"react-bootstrap\";\n\nfunction Notification(props) {\n  const expand = props.location.hash;\n  useEffect(() => {\n    if (['#notifications'].includes(expand)) {\n      document.getElementById(\"notifications\").scrollIntoView()\n    }\n  }, []);\n  const update = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <Accordion className=\"col-md-12\" id=\"notifications\" defaultActiveKey={expand === '#notifications' && \"0\"} >\n      <Accordion.Toggle className=\"border mt-4 px-3 cursour-pointer bg-light-grey\" as={Card.Header} eventKey=\"0\">\n        <h6 className=\"my-0\">Notification Details</h6>\n      </Accordion.Toggle>\n      <Accordion.Collapse className=\"p-2 px-3 pt-3\" eventKey=\"0\">\n        <form action method=\"post\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <div className=\"managecheckbox\">\n                <label className=\"container\">\n                  once daily\n                  <input type=\"checkbox\" defaultChecked=\"checked\" />\n                  <span className=\"checkmark\" />\n                </label>\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"managecheckbox\">\n                <label className=\"container\">\n                  When payment comes in account\n                  <input type=\"checkbox\" />\n                  <span className=\"checkmark\" />\n                </label>\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"form-group text-right\">\n                <button type=\"submit\" onClick={update} className=\"btn subbtn btn-success\">\n                  Update\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Accordion.Collapse>\n    </Accordion>\n  );\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Toaster from \"components/Toaster\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport { instance } from \"../../../actions/axiosInstance\";\nimport TokenManager from \"utils/TokenManager\";\nimport Configs from \"constants/Configs\";\nimport axios from \"axios\";\nimport { handleAPIError } from \"handlers/setters\";\nimport { passwordRegEx } from \"constants/regex\";\n\nfunction Password(props) {\n  let password = {\n    currentPassword: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\"\n  };\n\n  const [userPassword, setUserPassword] = useState(password);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const expand = props.location.hash;\n  useEffect(() => {\n    if (['#password'].includes(expand)) {\n      document.getElementById(\"password\").scrollIntoView()\n    }\n  }, []);\n\n  useEffect(() => {}, [userPassword]);\n\n  const update = e => {\n    e.preventDefault();\n\n    let URL = \"user/setpassword\";\n    let userName = TokenManager.getUserName();\n    if (!passwordRegEx.test(userPassword.newPassword)){\n      Toaster(\"Password must contain in 8 characters and 1 digit!\", \"error\");\n    } else if(userPassword.newPassword !== userPassword.confirmPassword) {\n      Toaster(\"New password and Confirm password did not match!\", \"error\");\n    } else if(userPassword.newPassword === userPassword.currentPassword) {\n      Toaster(\"New password should be different than existing password!\", \"error\");\n    } else {\n      setIsProcessing(true);\n      axios\n        .get(`${Configs.API_URL}token`, {\n          auth: {\n            username: userName,\n            password: userPassword.currentPassword\n          }\n        })\n        .then(response => {\n          if (response != null && response.data != null && response.data.token != null) {\n            instance\n              .post(\n                URL,\n                { password: userPassword.confirmPassword }\n              )\n              .then(response => {\n                Toaster(\"Password updated successfully\", \"success\");\n                setUserPassword(password);\n              })\n              .catch(e => handleAPIError(e));\n          }\n          setIsProcessing(false);\n        })\n        .catch(error => {\n          Toaster(\"Please enter correct current password!\", \"error\");\n          setIsProcessing(false);\n        });\n    }\n  };\n\n  const onChange = e => {\n    const { name, value } = e.target;\n    setUserPassword(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const onBlurr = e => {\n    const { name, value } = e.target;\n    setUserPassword(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  return (\n    <Accordion className=\"col-md-12\" defaultActiveKey={expand === '#password' && \"0\"} id=\"password\">\n      <Accordion.Toggle className=\"border mt-4 px-3 cursour-pointer bg-light-grey\" as={Card.Header} eventKey=\"0\">\n        <h6 className=\"my-0\">Change Password</h6>\n      </Accordion.Toggle>\n      <Accordion.Collapse className=\"p-2 px-3\" eventKey=\"0\">\n        <form onSubmit={update} action method=\"post\">\n          <div className=\"row\">\n            <div className=\"col-md-3\">\n              <div className=\"form-group\">\n                <span>\n                  <label>Current password</label>\n                </span>\n                <input\n                  type=\"password\"\n                  name=\"currentPassword\"\n                  className=\"form-control\"\n                  placeholder=\"Enter ...\"\n                  autoComplete=\"off\"\n                  onFocus={onChange}\n                  onChange={onChange}\n                  onBlur={onBlurr}\n                  required\n                  value={userPassword.currentPassword}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-3\">\n              <div className=\"form-group\">\n                <span>\n                  <label>New password</label>\n                </span>\n                <input\n                  type=\"password\"\n                  name=\"newPassword\"\n                  className=\"form-control\"\n                  placeholder=\"8 char, min 1 digit\"\n                  autoComplete=\"off\"\n                  onFocus={onChange}\n                  onChange={onChange}\n                  onBlur={onBlurr}\n                  required\n                  value={userPassword.newPassword}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-3\">\n              <div className=\"form-group\">\n                <span>\n                  <label>Confirm password</label>\n                </span>\n                <div className=\"confirm-password\">\n                  <input\n                    type={showConfirmPassword ? 'text' : 'password'}\n                    name=\"confirmPassword\"\n                    className=\"form-control\"\n                    placeholder=\"Enter ...\"\n                    autoComplete=\"off\"\n                    onFocus={onChange}\n                    onChange={onChange}\n                    onBlur={onBlurr}\n                    required\n                    value={userPassword.confirmPassword}\n                  />\n                  <span\n                    className=\"show-hide-toggle eye-password\"\n                    role=\"presentation\"\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                  >\n                    {showConfirmPassword ? (\n                      <i className=\"fa fa-eye\" style={{ cursor: \"pointer\", fontSize: \"15px\" }} title=\"Show Password\" />\n                    ) : (\n                      <i className=\"fa fa-eye-slash\" style={{ cursor: \"pointer\", fontSize: \"15px\" }} title=\"Show Password\" />\n                    )}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3\">\n              <div className=\"form-group text-right\" style={{ marginTop: \"30px\" }}>\n                <button type=\"submit\" className=\"btn subbtn btn-success\">\n                  {isProcessing ? (\n                    <span>\n                      Updating <i class=\"fa fa-spinner fa-spin\" style={{ fontSize: \"11px\" }} aria-hidden=\"true\"></i>\n                    </span>\n                  ) : (\n                    <span>Update</span>\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Accordion.Collapse>\n    </Accordion>\n  );\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Password);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport Configs from \"constants/Configs\";\nimport \"assets/css/payables.css\";\nimport ProfileDetails from \"./profiledetail\";\nimport Notification from \"./notification\";\nimport Password from \"./password\";\nimport { Link } from \"react-router-dom\";\nimport fe_config from \"constants/Configs\";\n\nfunction Profile(props) {\n  const { history, match } = props;\n  return (\n    <div className=\"row\" id=\"dashboardBody\">\n      <div className=\"col-md-12\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"paynewdetsec\">\n                      <div\n                        className=\"titletranshist\"\n                        style={{ fontSize: \"18px\", paddingBottom: \"15px\", float: \"left\" }}\n                      >\n                        <Link to=\"/settings\" key=\"back\">\n                          <i className=\"fa fa-arrow-left\" style={{ color: \"#ddd\", marginRight: \"5px\" }} />{\" \"}\n                        </Link>\n                        &nbsp;Profile Details\n                      </div>\n                      <div className=\"dropdown float-right d-none\">\n                        {fe_config.MODE === \"DEV\" && <a\n                          className=\"btn dropdown-toggle btn-primary\"\n                          href=\"#\"\n                          role=\"button\"\n                          id=\"export\"\n                          data-toggle=\"dropdown\"\n                          aria-haspopup=\"true\"\n                          aria-expanded=\"false\"\n                        >\n                          Export\n                        </a>}\n                        <div\n                          className=\"dropdown-menu dropdown-menu-right\"\n                          aria-labelledby=\"dropdownMenuLink\"\n                          id=\"exportlist\"\n                        >\n                          <a href=\"#\">Export CSV</a>\n                          <a href=\"#\">Export Excel</a>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <Route path={`/settings/profile`} component={() => <ProfileDetails {...props} />} />\n                  {Configs.MODE === \"DEV\" && (\n                    <Route path={`/settings/profile`} component={() => <Notification {...props} />} />\n                  )}\n                  <Route path={`/settings/profile`} component={() => <Password {...props} />} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({ login: state.payables });\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Profile));\n","import React, { Component } from \"react\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport get from \"lodash/get\";\n\nexport default class EmailTemplateModal extends Component {\n  state = {\n    requestObject: null\n  };\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    if (prevProps.defaultData !== this.props.defaultData) {\n      return this.props.defaultData;\n    }\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (snapshot !== null) {\n      this.setState({\n        requestObject: {\n          ...snapshot,\n        }\n      })\n    }\n  }\n\n  render() {\n    const { show, mode = \"add\", handleModal, defaultData, submitEntry } = this.props;\n    const { requestObject } = this.state;\n\n    return (\n      <Modal show={show} onHide={handleModal} className=\"mt-5\" size=\"lg\" backdrop=\"static\">\n        <Modal.Header closeButton>{mode === \"add\" ? \"New\" : \"Update\"} Template</Modal.Header>\n        <Modal.Body style={{ 'max-height': 'calc(100vh - 210px)', 'overflow-y': 'auto' }}>\n          <div className=\"mb-3\">\n            <strong>Template Name</strong>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              defaultValue={defaultData ? defaultData.name : \"\"}\n              onChange={e =>\n                this.setState({\n                  requestObject: {\n                    ...this.state.requestObject,\n                    name: e.target.value\n                  }\n                })\n              }\n            />\n          </div>\n          <div className=\"mb-3\">\n            <strong>Subject</strong>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              defaultValue={defaultData ? defaultData.subject : \"\"}\n              onChange={e =>\n                this.setState({\n                  requestObject: {\n                    ...this.state.requestObject,\n                    subject: e.target.value\n                  }\n                })\n              }\n            />\n          </div>\n          <div>\n            <label>\n              <strong>Body:</strong>\n            </label>\n          </div>\n          <CKEditor\n            editor={ClassicEditor}\n            data={defaultData ? defaultData.body : \"\"}\n            config={{\n              toolbar: ['heading', '|', 'bold', 'italic', 'numberedList', 'bulletedList']\n            }}\n            onChange={(event, editor) => {\n              const data = editor.getData();\n              this.setState({\n                requestObject: {\n                  ...this.state.requestObject,\n                  body: data\n                }\n              });\n            }}\n          />\n          <div className=\"mt-3\">\n            <Button\n              disabled={\n                !(get(requestObject, \"name\", \"\") && get(requestObject, \"subject\", \"\") && get(requestObject, \"body\", \"\"))\n              }\n              onClick={() => {\n                handleModal();\n                submitEntry(mode, this.state.requestObject, defaultData);\n              }}\n            >\n              Save\n            </Button>\n          </div>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n","import React from \"react\";\nimport EmailTemplate from \"./EmailTemplate\";\nimport { instance } from \"../../../actions/axiosInstance\";\nimport \"../settings.css\";\nimport parse from 'html-react-parser';\nimport isEqual from \"lodash/isEqual\";\nimport { setconfirmationboxData, resetconfirmationboxData } from \"components/ConfirmationBox\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Toaster from \"components/Toaster\";\nimport Autocomplete from \"components/Autocomplete\";\nimport uniqBy from \"lodash/uniqBy\";\n\nconst initialState = {\n  days: \"\",\n  action: \"\",\n  period: null,\n  editLine: \"\",\n  customer_id: \"\",\n  template_id: \"\",\n  reminderType: \"-1\",\n  is_recurring: false,\n  ar_age_in_days: null,\n  frequency_in_days: null,\n  currentPage: 1,\n  editableData: null,\n  showEmailModal: false,\n  requestObject: null,\n  corporate_entity_id: \"\",\n  is_enabled: false,\n  selectedCustomer: null,\n}\nexport default class CustomTable extends React.Component {\n  state = {\n    ...initialState,\n  };\n\n  resetState = () => this.setState({ ...initialState });\n\n  handleEmailModal = () =>\n    this.setState(\n      prevState => ({\n        showEmailModal: !prevState.showEmailModal\n      }),\n      () =>\n        this.setState(prevState => ({\n          editableData: prevState.showEmailModal === false ? null : prevState.editableData\n        }))\n    );\n\n  paginate = (array, page_size, page_number) => array.slice((page_number - 1) * page_size, page_number * page_size);\n\n  addNewRow = () => {\n    const { type, companyList, customerList, emailTemplateList, isCustomerListLoading, searchCustomer } = this.props;\n\n    const { editableData, days, reminderType, template_id, corporate_entity_id, customer_id, selectedCustomer } = this.state;\n\n    const dummyArray = new Array(7).fill().map((v, i) => i + 1);\n\n    const dropdownData = type === \"customer\" ? customerList : companyList;\n\n    if (this.state.action === \"add\") {\n      return (\n        <tr>\n          <td>\n            {\n              type === \"customer\" ?\n                <Autocomplete\n                  suggestions={uniqBy(\n                    customerList.map(s => ({ id: s.customer.id, name: s.customer.name })),\n                    \"id\"\n                  )}\n                  getSelected={item => item ? this.setState({ customer_id: item.id, selectedCustomer: item }) : this.setState({ customer_id: '', selectedCustomer: null })}\n                  search={text => searchCustomer(text)}\n                  isLoading={isCustomerListLoading}\n                  defaultValue={selectedCustomer && selectedCustomer.name}\n                />\n                :\n                <select\n                  className=\"form-control\"\n                  onChange={e =>\n                    this.setState({\n                      [type === \"customer\" ? \"customer_id\" : \"corporate_entity_id\"]: e.target.value\n                    })\n                  }\n                >\n                  <option disabled selected>\n                    Please select\n                  </option>\n                  {dropdownData.length\n                    ? dropdownData.map(d => (\n                        <option key={d.id} value={d.id}>\n                          {d.name}\n                        </option>\n                      ))\n                    : null}\n                </select>\n            }\n          </td>\n          <td>\n            <select\n              className=\"form-control\"\n              onChange={e =>\n                this.setState({\n                  reminderType: e.target.value\n                })\n              }\n            >\n              {/* <option disabled selected>\n                Please select\n              </option> */}\n              <option value=\"-1\" selected>\n                before\n              </option>\n              <option value=\"1\">after</option>\n            </select>\n          </td>\n          <td>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              onInput={e =>\n                this.setState({\n                  days: e.target.value\n                })\n              }\n            />\n          </td>\n          <td>\n            <select\n              className=\"form-control\"\n              onChange={e =>\n                this.setState({\n                  template_id: e.target.value\n                })\n              }\n            >\n              <option disabled selected>\n                Please select\n              </option>\n              {emailTemplateList.length\n                ? emailTemplateList.map(d => (\n                    <option key={d.id} value={d.id}>\n                      {d.name}\n                    </option>\n                  ))\n                : null}\n            </select>\n          </td>\n          <td>\n            <select className=\"form-control\"\n              onChange={e =>\n                this.setState({\n                  period: e.target.value\n                })\n              }>\n              <option disabled selected>\n                Please select\n                </option>\n              {\n                dummyArray.map(d => <option value={d}>Every {d} days</option>)\n              }\n            </select>\n          </td>\n          <td>\n            <div className=\"checkbox switcher\">\n              <label htmlFor={`toggle-${type}-new`}>\n                <input\n                  type=\"checkbox\"\n                  id={`toggle-${type}-new`}\n                  onChange={e => {\n                    e.stopPropagation();\n                    this.setState({ is_enabled: !this.state.is_enabled });\n                  }}\n                />\n                <span>\n                  <small></small>\n                </span>\n              </label>\n            </div>\n          </td>\n          <td>\n            <button\n              disabled={!days || !reminderType || !template_id || (!customer_id && !corporate_entity_id)}\n              title=\"Save\"\n              className=\"btn color-blue pull-left p-2\"\n              onClick={e => {\n                e.stopPropagation();\n                this.submitEntry(\"add\", null, type);\n                this.resetState();\n              }}\n            >\n              <i className=\"fas fa-save\" />\n            </button>\n            <span>|</span>\n            <button\n              title=\"Cancel\"\n              className=\"btn color-blue p-2\"\n              onClick={e => {\n                e.stopPropagation();\n                this.resetState();\n              }}\n            >\n              <i className=\"fas fa-remove\" />\n            </button>\n          </td>\n        </tr>\n      );\n    } else if (this.state.action === \"edit\") {\n      return (\n        <ClickAwayListener\n          onClickAway={e => {\n            e.stopPropagation();\n            this.submitEntry(\"edit\", editableData, type);\n            this.resetState();\n          }}\n        >\n          <tr>\n            <td>\n              {\n                type === \"customer\" ?\n                  <Autocomplete\n                    suggestions={uniqBy(\n                      customerList.map(s => ({ id: s.customer.id, name: s.customer.name })),\n                      \"id\"\n                    )}\n                    getSelected={item => item ? this.setState({ customer_id: item.id, selectedCustomer: item }) : this.setState({ customer_id: '', selectedCustomer: null })}\n                    search={text => searchCustomer(text)}\n                    isLoading={isCustomerListLoading}\n                    defaultValue={selectedCustomer && selectedCustomer.name}\n                  />\n                  :\n                <select\n                  className=\"form-control\"\n                  defaultValue={editableData[type === \"customer\" ? \"customer_id\" : \"corporate_entity_id\"]}\n                  onChange={e =>\n                    this.setState({\n                      [type === \"customer\" ? \"customer_id\" : \"corporate_entity_id\"]: e.target.value\n                    })\n                  }\n                >\n                  <option disabled selected>\n                    Please select\n                  </option>\n                  {dropdownData.length\n                    ? dropdownData.map(d => (\n                        <option key={d.id} value={d.id}>\n                          {d.name}\n                        </option>\n                      ))\n                    : null}\n                </select>\n              }\n            </td>\n            <td>\n              <select\n                className=\"form-control\"\n                defaultValue={reminderType}\n                onChange={e =>\n                  this.setState({\n                    reminderType: e.target.value\n                  })\n                }\n              >\n                {/* <option disabled selected>\n                Please select\n              </option> */}\n                <option value=\"-1\" selected>\n                  before\n                </option>\n                <option value=\"1\">after</option>\n              </select>\n            </td>\n            <td>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                defaultValue={Math.abs(editableData.days)}\n                onInput={e =>\n                  this.setState({\n                    days: e.target.value\n                  })\n                }\n              />\n            </td>\n            <td>\n              <select\n                className=\"form-control\"\n                defaultValue={Number(editableData.template_id)}\n                onChange={e =>\n                  this.setState({\n                    template_id: e.target.value\n                  })\n                }\n              >\n                <option disabled selected>\n                  Please select\n                </option>\n                {emailTemplateList.length\n                  ? emailTemplateList.map(d => (\n                      <option key={d.id} value={d.id}>\n                        {d.name}\n                      </option>\n                    ))\n                  : null}\n              </select>\n            </td>\n            <td>\n              <select defaultValue={editableData.period} className=\"form-control\"\n                onChange={e =>\n                  this.setState({\n                    period: e.target.value\n                  })\n                }>\n                <option disabled selected>\n                  Please select\n                </option>\n                {\n                  dummyArray.map(d => <option value={d}>Every {d} days</option>)\n                }\n              </select>\n            </td>\n            <td>\n              <div className=\"checkbox switcher\">\n                <label\n                  htmlFor={`toggle-${type}-${\n                    type === \"customer\" ? editableData.customer_id : editableData.corporate_entity_id\n                  }`}\n                >\n                  <input\n                    type=\"checkbox\"\n                    id={`toggle-${type}-${\n                      type === \"customer\" ? editableData.customer_id : editableData.corporate_entity_id\n                    }`}\n                    defaultChecked={editableData.is_enabled}\n                    onChange={e => {\n                      e.stopPropagation();\n                      this.setState({ is_enabled: !this.state.is_enabled });\n                    }}\n                  />\n                  <span>\n                    <small></small>\n                  </span>\n                </label>\n              </div>\n            </td>\n            <td>\n              <button\n                title=\"Cancel\"\n                className=\"btn color-blue p-2\"\n                onClick={e => {\n                  e.stopPropagation();\n                  this.resetState();\n                }}\n              >\n                <i className=\"fas fa-remove\" />\n              </button>\n            </td>\n          </tr>\n        </ClickAwayListener>\n      );\n    }\n  };\n\n  getName = (id, type) => {\n    const { companyList, emailTemplateList, customerListNames } = this.props;\n    if (['customer', 'reccustomer'].includes(type) && customerListNames && customerListNames.length) {\n      const customer = customerListNames.find(d => d.id === id);\n      if(customer) {\n        return customer.name;\n      } else {\n        return '-';\n      }\n    } else if (['company', 'reccompany'].includes(type) && companyList.length) {\n      const entity = companyList.find(d => d.id === id);\n      return entity.name;\n    } else if (type === \"email\" && emailTemplateList && emailTemplateList.length) {\n      const template = emailTemplateList.find(d => d.id === id);\n      return template.name;\n    }\n    return \"-\";\n  };\n\n  renderRows = (type, data) => {\n    const { editableData, editLine } = this.state;\n    if (type === \"customer\" || type === \"company\") {\n      return data.map((d, line) => {\n        if (!editableData || (editableData && editableData.id !== d.id)) {\n          if (line === editLine) {\n            this.addNewRow();\n          } else {\n            return (\n              <tr\n                onClick={() =>\n                  this.setState({\n                    action: \"edit\",\n                    editableData: d,\n                    reminderType: d.days < 0 ? \"-1\" : \"1\",\n                    editLine: line,\n                    is_enabled: d.is_enabled,\n                    selectedCustomer: { name: this.getName(d.customer_id, 'customer')}\n                  })\n                }\n              >\n                <td>\n                  {type === \"customer\" ? this.getName(d.customer_id, type) : this.getName(d.corporate_entity_id, type)}\n                </td>\n                <td>{d.days < 0 ? \"before\" : \"after\"}</td>\n                <td>{d.days && Math.abs(d.days)}</td>\n                <td>{this.getName(d.template_id, \"email\")}</td>\n                <td>\n                  {d.period ? `Every ${d.period} days` : '-'}\n                </td>\n                <td onClick={e => e.stopPropagation()}>\n                  <div className=\"checkbox switcher\">\n                    <label htmlFor={`toggle-${type}-${d.id}`}>\n                      <input\n                        type=\"checkbox\"\n                        id={`toggle-${type}-${d.id}`}\n                        defaultChecked={d.is_enabled}\n                        onChange={e => {\n                          const URL = `receivable-reminder?id=${d.id}`;\n                          instance\n                            .patch(\n                              URL,\n                              {\n                                [type === \"customer\" ? \"customer_id\" : \"corporate_entity_id\"]:\n                                  type === \"customer\" ? d.customer_id : d.corporate_entity_id,\n                                is_enabled: e.target.checked\n                              }\n                            )\n                            .then(response => {\n                              this.props.reloadListing(type);\n                              this.resetState();\n                              Toaster(\"Updated successfully\", \"success\");\n                            });\n                        }}\n                      />\n                      <span>\n                        <small></small>\n                      </span>\n                    </label>\n                  </div>\n                </td>\n                <td onClick={e => e.stopPropagation()}>\n                  <button\n                    title=\"Delete\"\n                    className=\"btn color-blue p-2\"\n                    onClick={e => {\n                      e.stopPropagation();\n\n                      setconfirmationboxData({\n                        variant: \"warning\",\n                        msg: \"Are you sure you want to delete this record?\",\n                        onSave: () => {\n                          resetconfirmationboxData();\n                          this.deleteEntry(d.id, type);\n                        }\n                      });\n                    }}\n                  >\n                    <i className=\"fa fa-trash-o\"></i>\n                  </button>\n                </td>\n              </tr>\n            );\n          }\n        }\n        return this.addNewRow();\n      });\n    }\n    if (type === \"email\") {\n      return data.map((d, line) => (\n        <tr onClick={() => this.setState({ showEmailModal: true, editableData: d })}>\n          <td>{d.id}</td>\n          <td>{d.name}</td>\n          <td>{d.subject}</td>\n          <td><div className=\"emailbody\">{parse(d.body.trim())}</div></td>\n          <td>\n            <button\n              title=\"Delete\"\n              className=\"btn color-blue p-2\"\n              onClick={e => {\n                e.stopPropagation();\n                setconfirmationboxData({\n                  variant: \"warning\",\n                  msg: \"Are you sure you want to delete this record?\",\n                  onSave: () => {\n                    resetconfirmationboxData();\n                    this.deleteEntry(d.id, type);\n                  }\n                });\n              }}\n            >\n              <i className=\"fa fa-trash-o\"></i>\n            </button>\n          </td>\n        </tr>\n      ));\n    }\n  };\n\n  handleAddNewRow = type => {\n    if (['customer', 'reccustomer', 'company', 'reccompany'].includes(type)) {\n      this.setState({ action: \"add\", selectedCustomer: null });\n    } else {\n      this.setState({ showEmailModal: true });\n    }\n  };\n\n  handlePagination = action =>\n    this.setState({\n      currentPage: action === \"next\" ? this.state.currentPage + 1 : this.state.currentPage - 1\n    });\n\n  submitEntry = (mode, prevData, type) => {\n    const URL = mode === \"add\" ? \"receivable-reminder\" : `receivable-reminder?id=${prevData.id}`;\n    const requestType = mode === \"add\" ? \"post\" : \"patch\";\n    const { days, template_id, reminderType, is_enabled, period, is_recurring, ar_age_in_days, frequency_in_days } = this.state;\n    let requestObject = {\n      [['customer', 'reccustomer'].includes(type) ? \"customer_id\" : \"corporate_entity_id\"]: this.state[\n        ['customer', 'reccustomer'].includes(type) ? \"customer_id\" : \"corporate_entity_id\"\n      ],\n      days,\n      period,\n      template_id,\n      is_enabled,\n      is_recurring,\n      ar_age_in_days,\n      frequency_in_days,\n    };\n    if (mode === \"add\") {\n      const days = reminderType === \"-1\" ? Number(requestObject.days) * -1 : Number(requestObject.days);\n      requestObject.days = days;\n    }\n    if (mode === \"edit\") {\n      requestObject = {\n        ...prevData,\n        [['customer', 'reccustomer'].includes(type) ? \"customer_id\" : \"corporate_entity_id\"]: prevData[\n          ['customer', 'reccustomer'].includes(type) ? \"customer_id\" : \"corporate_entity_id\"\n        ],\n      };\n      if(is_recurring) {\n        requestObject.is_recurring = true;\n        requestObject.is_enabled = true;\n      }\n      if(is_enabled) {\n        requestObject.is_enabled = true;\n      }\n      if (period) {\n        requestObject.period = period;\n      }\n      if(ar_age_in_days) {\n        requestObject.ar_age_in_days = ar_age_in_days;\n      }\n      if (frequency_in_days) {\n        requestObject.frequency_in_days = frequency_in_days;\n      }\n      if (this.state[['customer', 'reccustomer'].includes(type) ? \"customer_id\" : \"corporate_entity_id\"]) {\n        requestObject[['customer', 'reccustomer'].includes(type) ? \"customer_id\" : \"corporate_entity_id\"] = this.state[\n          ['customer', 'reccustomer'].includes(type) ? \"customer_id\" : \"corporate_entity_id\"\n        ];\n      }\n      if (template_id) {\n        requestObject.template_id = template_id;\n      }\n      requestObject.days = Math.abs(days ? days : prevData.days) * Number(reminderType);\n\n      // if (days && reminderType) {\n      //   requestObject.days = Number(days);\n      // }\n      // if (reminderType && days) {\n      //   requestObject.days = reminderType === \"-1\" ? Number(days) * -1 : Number(days);\n      // }\n    }\n    if (isEqual(prevData, requestObject)) {\n      return;\n    }\n    instance[requestType](\n      URL,\n      { ...requestObject }\n    ).then(response => {\n      this.props.reloadListing(type);\n      this.resetState();\n      const msg = mode === \"add\" ? \"Added\" : \"Updated\";\n      Toaster(msg + \" successfully\", \"success\");\n    });\n  };\n\n  submitEmailTemplateEntry = (mode, requestObject, prevData) => {\n    const URL =\n      mode === \"add\" ? \"receivable-reminder-email-template\" : `receivable-reminder-email-template?id=${prevData.id}`;\n    const requestType = mode === \"add\" ? \"post\" : \"patch\";\n\n    instance[requestType](\n      URL,\n      { ...requestObject }\n    ).then(response => {\n      this.props.reloadListing(\"email\");\n      this.resetState();\n    });\n  };\n\n  deleteEntry = (id, type) => {\n    const URL = type === \"email\" ? `receivable-reminder-email-template?id=${id}` : `receivable-reminder?id=${id}`;\n    instance\n      .delete(URL)\n      .then(() => {\n        Toaster(\"Deleted successfully\", \"success\");\n        this.props.reloadListing(type);\n      })\n      .catch(e => {\n        if(type === 'email') {\n          Toaster(\"This template is in use\", \"error\");\n        }\n      });\n  };\n\n  renderRecurranceTable = (type, data) => {\n    const { editLine } = this.state;\n    return data.map((d, line) => {\n      if (line === editLine) {\n        return this.addNewRecurranceRow();\n      }\n      return (\n        <tr onClick={() => this.setState({ editableData: d, editLine: line, action: 'edit', selectedCustomer: { name: this.getName(d.customer_id, 'customer') } })}>\n          <td>\n            {type === \"reccustomer\" ? this.getName(d.customer_id, type) : this.getName(d.corporate_entity_id, type)}\n          </td>\n          <td>{d.ar_age_in_days}</td>\n          <td>{d.frequency_in_days}</td>\n          <td>{this.getName(d.template_id, \"email\")}</td>\n          <td onClick={e => e.stopPropagation()}>\n            <div className=\"checkbox switcher\">\n              <label htmlFor={`toggle-${type}-${d.id}`}>\n                <input\n                  type=\"checkbox\"\n                  id={`toggle-${type}-${d.id}`}\n                  defaultChecked={d.is_recurring}\n                  onChange={e => {\n                    const URL = `receivable-reminder?id=${d.id}`;\n                    instance\n                      .patch(\n                        URL,\n                        {\n                          [type === \"customer\" ? \"customer_id\" : \"corporate_entity_id\"]:\n                            type === \"customer\" ? d.customer_id : d.corporate_entity_id,\n                          is_recurring: e.target.checked,\n                          is_enabled: e.target.checked,\n                        }\n                      )\n                      .then(response => {\n                        this.props.reloadListing(type);\n                        this.resetState();\n                        Toaster(\"Updated successfully\", \"success\");\n                      });\n                  }}\n                />\n                <span>\n                  <small></small>\n                </span>\n              </label>\n            </div>\n          </td>\n          <td>\n            <button\n              title=\"Delete\"\n              className=\"btn color-blue p-2\"\n              onClick={e => {\n                e.stopPropagation();\n                setconfirmationboxData({\n                  variant: \"warning\",\n                  msg: \"Are you sure you want to delete this record?\",\n                  onSave: () => {\n                    resetconfirmationboxData();\n                    this.deleteEntry(d.id, type);\n                  }\n                });\n              }}\n            >\n              <i className=\"fa fa-trash-o\"></i>\n            </button>\n          </td>\n        </tr>\n      )});\n  };\n\n  addNewRecurranceRow = () => {\n    const { type, companyList, customerList, emailTemplateList, isCustomerListLoading, searchCustomer } = this.props;\n\n    const { editableData, selectedCustomer, action, ar_age_in_days, frequency_in_days, template_id, customer_id, corporate_entity_id } = this.state;\n\n    const dropdownData = type === \"customer\" ? customerList : companyList;\n    if(action === 'add') {\n      return (\n        <tr>\n          <td>\n            {\n              type === \"reccustomer\" ?\n                <Autocomplete\n                  suggestions={uniqBy(\n                    customerList.map(s => ({ id: s.customer.id, name: s.customer.name })),\n                    \"id\"\n                  )}\n                  getSelected={item => item ? this.setState({ customer_id: item.id, selectedCustomer: item }) : this.setState({ customer_id: '', selectedCustomer: null })}\n                  search={text => searchCustomer(text)}\n                  isLoading={isCustomerListLoading}\n                  defaultValue={selectedCustomer && selectedCustomer.name}\n                />\n                :\n                <select\n                  className=\"form-control\"\n                  onChange={e =>\n                    this.setState({\n                      [type === \"reccustomer\" ? \"customer_id\" : \"corporate_entity_id\"]: e.target.value\n                    })\n                  }\n                >\n                  <option disabled selected>\n                    Please select\n                </option>\n                  {dropdownData.length\n                    ? dropdownData.map(d => (\n                      <option key={d.id} value={d.id}>\n                        {d.name}\n                      </option>\n                    ))\n                    : null}\n                </select>\n            }\n          </td>\n          <td>\n            <select\n              className=\"form-control\"\n              onChange={e =>\n                this.setState({\n                  'ar_age_in_days': e.target.value\n                })\n              }\n            >\n              <option disabled selected>Please select</option>\n              {\n                [15, 30, 60, 90].map(d => (\n                  <option key={d} value={d}>\n                    {d}\n                  </option>\n                ))\n              }\n            </select>\n          </td>\n          <td>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              onInput={e =>\n                this.setState({\n                  frequency_in_days: e.target.value\n                })\n              }\n            />\n          </td>\n          <td>\n            <select\n              className=\"form-control\"\n              onChange={e =>\n                this.setState({\n                  template_id: e.target.value\n                })\n              }\n            >\n              <option disabled selected>\n                Please select\n              </option>\n              {emailTemplateList.length\n                ? emailTemplateList.map(d => (\n                  <option key={d.id} value={d.id}>\n                    {d.name}\n                  </option>\n                ))\n                : null}\n            </select>\n          </td>\n          <td>\n            <div className=\"checkbox switcher\">\n              <label htmlFor={`toggle-${type}-new`}>\n                <input\n                  type=\"checkbox\"\n                  id={`toggle-${type}-new`}\n                  onChange={e => {\n                    e.stopPropagation();\n                    this.setState({ is_recurring: !this.state.is_recurring, is_enabled: !this.state.is_recurring });\n                  }}\n                />\n                <span>\n                  <small></small>\n                </span>\n              </label>\n            </div>\n          </td>\n          <td>\n            <button\n              disabled={!ar_age_in_days || !frequency_in_days || !template_id || (!customer_id && !corporate_entity_id)}\n              title=\"Save\"\n              className=\"btn color-blue pull-left p-2\"\n              onClick={e => {\n                e.stopPropagation();\n                this.submitEntry(\"add\", null, type);\n                this.resetState();\n              }}\n            >\n              <i className=\"fas fa-save\" />\n            </button>\n            <span>|</span>\n            <button\n              title=\"Cancel\"\n              className=\"btn color-blue p-2\"\n              onClick={e => {\n                e.stopPropagation();\n                this.resetState();\n              }}\n            >\n              <i className=\"fas fa-remove\" />\n            </button>\n          </td>\n        </tr>\n      );\n    }\n    if(action === 'edit') {\n      return (\n        <ClickAwayListener\n          onClickAway={e => {\n            e.stopPropagation();\n            this.submitEntry(\"edit\", editableData, type);\n            this.resetState();\n          }}\n        >\n          <tr>\n            <td>\n              {\n                type === \"reccustomer\" ?\n                  <Autocomplete\n                    suggestions={uniqBy(\n                      customerList.map(s => ({ id: s.customer.id, name: s.customer.name })),\n                      \"id\"\n                    )}\n                    getSelected={item => item ? this.setState({ customer_id: item.id, selectedCustomer: item }) : this.setState({ customer_id: '', selectedCustomer: null })}\n                    search={text => searchCustomer(text)}\n                    isLoading={isCustomerListLoading}\n                    defaultValue={selectedCustomer && selectedCustomer.name}\n                  />\n                  :\n                  <select\n                    className=\"form-control\"\n                    defaultValue={editableData[type === \"reccustomer\" ? \"customer_id\" : \"corporate_entity_id\"]}\n                    onChange={e =>\n                      this.setState({\n                        [type === \"reccustomer\" ? \"customer_id\" : \"corporate_entity_id\"]: e.target.value\n                      })\n                    }\n                  >\n                    <option disabled selected>\n                      Please select\n                  </option>\n                    {dropdownData.length\n                      ? dropdownData.map(d => (\n                        <option key={d.id} value={d.id}>\n                          {d.name}\n                        </option>\n                      ))\n                      : null}\n                  </select>\n              }\n            </td>\n            <td>\n              <select\n                className=\"form-control\"\n                defaultValue={editableData.ar_age_in_days}\n                onChange={e =>\n                  this.setState({\n                    'ar_age_in_days': e.target.value\n                  })\n                }\n              >\n                <option disabled selected>Please select</option>\n                {\n                  [15, 30, 60, 90].map(d => (\n                    <option key={d} value={d}>\n                      {d}\n                    </option>\n                  ))\n                }\n              </select>\n            </td>\n            <td>\n              <input\n                type=\"number\"\n                defaultValue={editableData.frequency_in_days}\n                className=\"form-control\"\n                onInput={e =>\n                  this.setState({\n                    frequency_in_days: e.target.value\n                  })\n                }\n              />\n            </td>\n            <td>\n              <select\n                className=\"form-control\"\n                defaultValue={editableData.template_id}\n                onChange={e =>\n                  this.setState({\n                    template_id: e.target.value\n                  })\n                }\n              >\n                <option disabled selected>\n                  Please select\n              </option>\n                {emailTemplateList.length\n                  ? emailTemplateList.map(d => (\n                    <option key={d.id} value={d.id}>\n                      {d.name}\n                    </option>\n                  ))\n                  : null}\n              </select>\n            </td>\n            <td>\n              <div className=\"checkbox switcher\">\n                <label\n                  htmlFor={`toggle-${type}-${\n                    type === \"reccustomer\" ? editableData.customer_id : editableData.corporate_entity_id\n                    }`}\n                >\n                  <input\n                    type=\"checkbox\"\n                    id={`toggle-${type}-${\n                      type === \"reccustomer\" ? editableData.customer_id : editableData.corporate_entity_id\n                      }`}\n                    defaultChecked={editableData.is_recurring}\n                    onChange={e => {\n                      e.stopPropagation();\n                      this.setState({ is_recurring: !this.state.is_recurring, is_enabled: !this.state.is_recurring, });\n                    }}\n                  />\n                  <span>\n                    <small></small>\n                  </span>\n                </label>\n              </div>\n            </td>\n            <td>\n              <button\n                title=\"Cancel\"\n                className=\"btn color-blue p-2\"\n                onClick={e => {\n                  e.stopPropagation();\n                  this.resetState();\n                }}\n              >\n                <i className=\"fas fa-remove\" />\n              </button>\n            </td>\n          </tr>\n        </ClickAwayListener>\n      );\n    }\n  };\n\n  render() {\n    const { header, data, type } = this.props;\n\n    const MAX_PAGE_LENGTH = 10;\n\n    const { action, currentPage, editableData, showEmailModal } = this.state;\n\n    let rowData =\n      ['company', 'reccompany'].includes(type)\n        ? data.filter(d => d.corporate_entity_id !== null)\n        : ['customer', 'reccustomer'].includes(type)\n        ? data.filter(d => d.customer_id !== null)\n        : data;\n\n    if (['reccustomer', 'reccompany'].includes(type)) {\n      rowData = rowData.filter(d => d.ar_age_in_days);\n    }\n    if (['customer', 'company'].includes(type)) {\n      rowData = rowData.filter(d => d.ar_age_in_days === null);\n    }\n    const hidePagination = MAX_PAGE_LENGTH >= rowData.length;\n    const totalPages = MAX_PAGE_LENGTH <= rowData.length ? Math.ceil(rowData.length / MAX_PAGE_LENGTH) : 1;\n    const disablePrev = currentPage === 1;\n    const disableNext = currentPage === totalPages;\n    return (\n      <div className=\"clearfix\">\n        {!editableData ? (\n          <button className=\"btn btn-primary mb-2 mt-3\" onClick={() => this.handleAddNewRow(type)}>\n            Add New\n          </button>\n        ) : null}\n        <table className={`custom-table ${type === \"email\" ? \"email-table\" : \"\"}`}>\n          <thead>\n            <tr>\n              {header.map(d => (\n                <th>{d}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {action === \"add\" ? ['customer', 'company', 'email'].includes(type) ? this.addNewRow() : this.addNewRecurranceRow() : null}\n            {!rowData.length && !action ? (\n              <tr>\n                <td colSpan={header.length} className=\"text-center\">\n                  No Entries\n                </td>\n              </tr>\n            ) : (\n                ['customer', 'company', 'email'].includes(type) ? this.renderRows(type, this.paginate(rowData, MAX_PAGE_LENGTH, currentPage)) : this.renderRecurranceTable(type, this.paginate(rowData, MAX_PAGE_LENGTH, currentPage))\n            )}\n          </tbody>\n        </table>\n        {!hidePagination ? (\n          <div className=\"pull-right mt-3\">\n            <button\n              onClick={() => this.handlePagination(\"prev\")}\n              disabled={disablePrev}\n              className=\"btn btn-primary mr-2 width-94px\"\n            >\n              Previous\n            </button>\n            <button\n              onClick={() => this.handlePagination(\"next\")}\n              disabled={disableNext}\n              className=\"btn btn-primary width-94px\"\n            >\n              Next\n            </button>\n          </div>\n        ) : null}\n        <EmailTemplate\n          defaultData={editableData}\n          mode={editableData ? \"edit\" : \"add\"}\n          show={showEmailModal}\n          handleModal={this.handleEmailModal}\n          submitEntry={this.submitEmailTemplateEntry}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CSVLink } from \"react-csv\";\nimport * as XLSX from \"xlsx\";\nimport { instance } from \"../../../actions/axiosInstance\";\nimport \"./receivables.css\";\nimport moment from \"moment\";\nimport * as FileSaver from \"file-saver\";\nimport ClickAwayListener from \"components/ClickAwayListener\";\nimport get from \"lodash/get\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport Toaster from \"components/Toaster\";\nimport CustomTable from \"./CustomTable\";\nimport fe_config from \"constants/Configs\";\nimport debounce from \"lodash/debounce\";\nimport { handleAPIError } from \"handlers/setters\";\nimport { setconfirmationboxData, resetconfirmationboxData } from \"components/ConfirmationBox\";\n\nexport const ExportXLSX = csvData => {\n  const filename = `payeables${moment().format(\"MMMM Do YYYY-h:mm:ss-a\")}.xlsx`;\n  const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const ws = XLSX.utils.json_to_sheet(csvData);\n  const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n  const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n  const data = new Blob([excelBuffer], { type: fileType });\n  FileSaver.saveAs(data, filename);\n};\n\nfunction ExportCSV(data) {\n  const csvData = data.map(element => ({\n    Supplier: get(element, \"supplier.name\", \"\"),\n    InvoiceNo: get(element, \"invoice_number\", \"\"),\n    DueDate: moment(get(element, \"due_date\", \"\")).format(\"YYYY/MM/DD\"),\n    Recommendation: get(element, \"recommendation\", \"\"),\n    InvoiceDate: moment(get(element, \"invoice_date\", \"\")).format(\"YYYY/MM/DD\"),\n    AmountDue: get(element, \"total_amount_due\", \"\")\n  }));\n\n  return csvData;\n}\n\nclass PayableSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showexport: false,\n      emailTemplateData: [],\n      remindersData: [],\n      companyListing: [],\n      customerListing: [],\n      customerListNames: [],\n      globalReminder: false,\n      isCustomerListLoading: false,\n      customerCategoryList: [],\n      line: '',\n      currPage: 1,\n      selectedData: null,\n      isCustCategoryLoading: true,\n    };\n    this.debounceMethod = debounce(this.searchCustomer.bind(this), 200);\n  }\n\n  componentDidMount() {\n    this.getCompanyLevelReminder();\n    this.getEmailTemplates();\n    this.getCustomerNames();\n    this.getCompanyNames();\n    this.getGlobalReminder();\n    this.getCustomerCategory();\n    const hash = this.props.location.hash;\n    if (hash) {\n      document.getElementById(hash.replace('#', '')).scrollIntoView(true);\n    }\n  }\n\n  componentDidUpdate() {\n    const inputNumbers = document.querySelectorAll(\"input[type=number]\");\n    if (inputNumbers.length) {\n      var invalidChars = [\"-\", \"+\", \"e\"];\n      for (let i = 0; i < inputNumbers.length; i++) {\n        inputNumbers[i].addEventListener(\"input\", function() {\n          this.value = this.value.replace(/[e\\+\\-]/gi, \"\");\n        });\n\n        inputNumbers[i].addEventListener(\"keydown\", function(e) {\n          if (invalidChars.includes(e.key)) {\n            e.preventDefault();\n          }\n        });\n      }\n    }\n  }\n\n  reloadListing = type => {\n    if (['reccustomer', 'reccompany', 'company', 'customer'].includes(type)) {\n      this.getCompanyLevelReminder();\n    } else {\n      this.getEmailTemplates();\n    }\n  };\n\n  getGlobalReminder = () => {\n    const URL = \"client\";\n    instance\n      .get(URL)\n      .then(response => {\n        this.setState({\n          globalReminder: response.data.result.receivable_rem_enabled\n        });\n      })\n      .catch(e => handleAPIError(e));\n  };\n\n  getCustomerCategory = () => {\n    this.setState({\n      isCustCategoryLoading: true,\n    });\n    instance\n      .get(`customercategory?per_page=100`)\n      .then(response => {\n        this.setState({\n          customerCategoryList: response.data.result.sort((a, b) => (+b.is_selected - +a.is_selected)),\n          isCustCategoryLoading: false,\n        })\n      })\n      .catch(e => handleAPIError(e));\n  }\n\n  onSubmit = () => {\n    const { selectedData } = this.state;\n    const URL = selectedData.id ? `customercategory?id=${selectedData.id}` : 'customercategory';\n    const method = selectedData.id ? 'patch' : 'post';\n    const requestObject = {\n      name: selectedData.name,\n      internal_id: Number(selectedData.internal_id),\n      is_selected: selectedData.is_selected\n    };\n\n    if(!selectedData.internal_id) {\n      delete requestObject.internal_id;\n    }\n\n    instance\n    [method](URL, { ...requestObject})\n      .then(() => {\n        this.setState({\n          line: '',\n          selectedData: null,\n        });\n        this.getCustomerCategory();\n        localStorage.setItem(\"refresh_reports\", true);\n      })\n      .catch(e => handleAPIError(e));\n  };\n\n  onDelete = (id) => {\n    instance\n      .delete(`customercategory?id=${id}`)\n      .then(() => {\n        this.getCustomerCategory();\n        localStorage.setItem(\"refresh_reports\", true);\n      })\n      .catch(e => handleAPIError(e));\n  }\n  renderEditableRow = () => {\n    const {\n      selectedData: {\n        id,\n        name,\n        internal_id,\n        is_selected,\n      },\n      customerCategoryList\n    } = this.state;\n    const isExistingId = !id && customerCategoryList.some(d => d.internal_id === Number(internal_id));\n    return (\n      <tr>\n        <td className=\"text-sm-center\">\n          <input type=\"checkbox\" className=\"md-checkbox\"  defaultChecked={is_selected} onChange={e => this.setState({ selectedData: { ...this.state.selectedData, is_selected: +e.target.checked } })} />\n        </td>\n        <td>\n          <input\n            type=\"text\"\n            onChange={e => this.setState({ selectedData: { ...this.state.selectedData, name: e.target.value, is_selected: +e.target.value } })}\n            className=\"form-control\"\n            defaultValue={name}\n          />\n        </td>\n        <td>\n          <input\n            type=\"number\"\n            onInput={e => this.setState({ selectedData: { ...this.state.selectedData, internal_id: e.target.value } })}\n            readOnly={!!id}\n            className={isExistingId ? \"error form-control\" : \"form-control\"}\n            defaultValue={internal_id}\n          />\n        </td>\n        <td className=\"text-sm-center\">\n          <button disabled={!name || isExistingId} className=\"btn\" onClick={this.onSubmit} >\n            <i className=\"fa fa-save cursor-pointer color-blue\" />\n          </button>\n          {\"|\"}\n          <button className=\"btn\" onClick={() => this.setState({ line: '', selectedData: null })}>\n            <i className=\"fa fa-remove cusor-pointer color-blue\" />\n          </button>\n        </td>\n      </tr>\n    )\n  }\n\n  getCustomerNames = () => {\n    const URL = \"customer?per_page=4000\";\n    instance\n      .get(URL)\n      .then(response => {\n        this.setState({\n          customerListNames: response.data.result\n        });\n      })\n      .catch(e => handleAPIError(e));\n  };\n\n  getCompanyNames = () => {\n    const URL = \"payroll/setting?per_page=100\";\n    instance\n      .get(URL)\n      .then(response => {\n        this.setState({\n          companyListing: response.data.result\n        });\n      })\n      .catch(e => handleAPIError(e));\n  };\n\n  getCompanyLevelReminder = () => {\n    const URL = \"receivable-reminder\";\n    instance\n      .get(URL)\n      .then(response => {\n        this.setState({\n          remindersData: get(response, \"data.result\", []).reverse()\n        });\n      })\n      .catch(e => handleAPIError(e));\n  };\n\n  getEmailTemplates = () => {\n    const URL = \"receivable-reminder-email-template\";\n    instance\n      .get(URL)\n      .then(response => {\n        this.setState({\n          emailTemplateData: get(response, \"data.result\", []).reverse()\n        });\n      })\n      .catch(e => handleAPIError(e));\n  };\n\n  setshowExport = flag => {\n    this.setState({ showexport: flag });\n  };\n\n  toggleGlobalAutoReminder = flag => {\n    const URL = \"/client\";\n    instance\n      .post(\n        URL,\n        {\n          receivable_rem_enabled: flag\n        }\n      )\n      .then(() => {\n        Toaster(\"Updated Reminder\", \"success\");\n      })\n      .catch(e => handleAPIError(e));\n  };\n\n  searchCustomer = (text) => {\n    if (text) {\n      this.setState({\n        isCustomerListLoading: true,\n      })\n      instance\n        .get(`arinvoice/search?customer=${text}&per_page=100`)\n        .then(res => {\n          this.setState({\n            customerListing: res.data.result,\n            isCustomerListLoading: false,\n          });\n        })\n        .catch(e => handleAPIError(e));\n    }\n  };\n\n  handlePagination = (action) => {\n    const {\n      currPage,\n    } = this.state;\n    let newPage = currPage;\n    if (action === 'prev') {\n      newPage = currPage === 1 ? 1 : currPage - 1;\n    }\n    if (action === 'next') {\n      newPage = currPage + 1;\n    }\n    this.setState(\n      {\n        currPage: newPage\n      }\n    );\n  }\n\n  paginate = (array, page_size, page_number) => array.slice((page_number - 1) * page_size, page_number * page_size);\n\n  render() {\n    const {\n      line,\n      currPage,\n      showexport,\n      remindersData,\n      globalReminder,\n      companyListing,\n      customerListing,\n      customerListNames,\n      isCustomerListLoading,\n      emailTemplateData,\n      customerCategoryList,\n      isCustCategoryLoading,\n    } = this.state;\n    const customerHeader = [\"Customer\", \"Type\", \"Days\", \"Email Template\", \"Combine Reminders\", \"Status\", \"Action\"];\n    const companyHeader = [\"Entity\", \"Type\", \"Days\", \"Email Template\", \"Combine Reminders\", \"Status\", \"Action\"];\n    const emailTableHeader = [\"Id\", \"Name\", \"Subject\", \"Body\", \"Action\"];\n    const recurringTableHeader = [\"Customer\", \"AR Age\", \"Frequency\", \"Email Template\", \"Status\", \"Action\"];\n    const disablePrev = currPage === 1;\n    const disableNext = !customerCategoryList.length || customerCategoryList.length < 20;\n    const expand = this.props.location.hash;\n\n    return (\n      <div className=\"row\" id=\"dashboardBody\">\n        <div className=\"col-md-12\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <div className=\"paynewdetsec\">\n                    <div className=\"float-left\" style={{ fontSize: \"18px\", paddingBottom: \"15px\", float: \"left\" }}>\n                      <Link to=\"/settings\" title=\"Back\">\n                        <i\n                          className=\"fa fa-arrow-left\"\n                          aria-hidden=\"true\"\n                          style={{ color: \"#ddd\", marginRight: \"10px\" }}\n                        ></i>\n                      </Link>\n                      Receivables Settings\n                    </div>\n                    <div className=\"dropdown float-right\">\n                      {fe_config.MODE === \"DEV\" &&<span\n                        className=\"btn dropdown-toggle btn-primary\"\n                        role=\"button\"\n                        id=\"\"\n                        data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                        onClick={() => this.setshowExport(true)}\n                      >\n                        Export\n                      </span>}\n                      <ClickAwayListener onClickAway={this.setshowExport}>\n                        <div\n                          className={`dropdown-menu dropdown-menu-right payexpdroplist ${showexport && \"show\"}`}\n                          aria-labelledby=\"dropdownMenuLink\"\n                          id=\"\"\n                        >\n                          <CSVLink\n                            data={ExportCSV([])}\n                            filename={`payable_${moment().format(\"MMMM Do YYYY-h:mm:ss-a\")}.csv`}\n                          >\n                            Export CSV\n                          </CSVLink>\n                          <span\n                            style={{ fontSize: 12, float: \"right\", marginRight: \"10px\", cursor: \"pointer\" }}\n                            onClick={() => ExportXLSX(ExportCSV([]))}\n                          >\n                            Export Excel\n                          </span>\n                        </div>\n                      </ClickAwayListener>\n                    </div>\n                  </div>\n                </div>\n\n                {fe_config.MODE === \"DEV\" && (\n                  <div className=\"col-md-12\">\n                    <div className=\"divider\" />\n                    <div style={{ fontSize: \"18px\", marginBottom: \"15px\" }}>Preferences</div>\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>Single payment for multiple invoices</label>\n                          <select\n                            className=\"form-control\"\n                            onChange={e => this.setState({ invoiceOption: e.target.value })}\n                          >\n                            <option value=\"\">Select</option>\n                            <option value=\"1\">Yes</option>\n                            <option value=\"2\">No</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                {fe_config.MODE === \"DEV\" && (\n                  <div className=\"col-md-12\">\n                    <div className=\"divider\" />\n                    <div style={{ fontSize: \"18px\", marginBottom: \"15px\" }}>Templates</div>\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                          <label>Single payment for multiple invoices</label>\n                          <select\n                            className=\"form-control\"\n                            onChange={e => this.setState({ invoiceOption: e.target.value })}\n                          >\n                            <option value=\"\">Select</option>\n                            <option value=\"1\">Yes</option>\n                            <option value=\"2\">No</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                {fe_config.MODE === \"DEV\" && (\n                  <div className=\"col-md-12\">\n                    <div className=\"divider\" />\n                    <div className=\"titletranshist\" style={{ fontSize: \"18px\", marginBottom: \"15px\" }}>\n                      Payments Set-up\n                    </div>\n                    <form action=\"\" method=\"post\">\n                      <div className=\"row\">\n                        <div className=\"col-md-4\">\n                          <div className=\"form-group\">\n                            <span>\n                              <label>Spend category</label>\n                            </span>\n                            <select className=\"form-control\">\n                              <option value=\"\">Select</option>\n                              <option value=\"\">All</option>\n                              <option value=\"\">Office supplies</option>\n                              <option value=\"\">Payoll</option>\n                            </select>\n                          </div>\n                        </div>\n                        <div className=\"col-md-4\">\n                          <div className=\"form-group\">\n                            <span>\n                              <label>Spend amount</label>\n                            </span>\n                            <select className=\"form-control\">\n                              <option value=\"\">Select</option>\n                              <option value=\"\">$2M/month</option>\n                              <option value=\"\">$25K/month</option>\n                              <option value=\"\">$25M/month</option>\n                            </select>\n                          </div>\n                        </div>\n                        <div className=\"col-md-4\">\n                          <div className=\"form-group\">\n                            <span>\n                              <label>Payment method</label>\n                            </span>\n                            <select className=\"form-control\">\n                              <option value=\"\">Select</option>\n                              <option value=\"\">Credit - 5678</option>\n                              <option value=\"\">P card - 2345</option>\n                              <option value=\"\">ACH - 2384</option>\n                            </select>\n                          </div>\n                        </div>\n                        <div className=\"col-md-4\"></div>\n                        <div className=\"col-md-4\"></div>\n                        <div className=\"col-md-4\">\n                          <div className=\"form-group text-right\" style={{ marginTop: \"30px\" }}>\n                            <button type=\"submit\" className=\"btn subbtn btn-success\">\n                              Update\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                )}\n                <React.Fragment>\n                  <div className=\"divider\" />\n                  <div className=\"col-md-12 mt-4\">\n                    <div className=\"row\">\n                      <h6 className=\"mr-2 col-md-2\">Auto Reminders</h6>\n                      <div className=\"checkbox switcher\" key={globalReminder}>\n                        <label htmlFor=\"test\">\n                          <input\n                            type=\"checkbox\"\n                            defaultChecked={globalReminder}\n                            id=\"test\"\n                            onChange={e => this.toggleGlobalAutoReminder(e.target.checked)}\n                          />\n                          <span>\n                            <small></small>\n                          </span>\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"divider\" />\n                  <Accordion className=\"col-md-12\" defaultActiveKey={expand === '#companyreminders' && \"0\"} id=\"companyreminders\">\n                    <Accordion.Toggle\n                      className=\"border mt-4 px-3 cursour-pointer bg-light-grey\"\n                      as={Card.Header}\n                      eventKey=\"0\"\n                    >\n                      <h6 className=\"my-0\">Company Level Reminders</h6>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse className=\"py-2\" eventKey=\"0\">\n                      <div className=\"col-md-9\">\n                        <CustomTable\n                          type=\"company\"\n                          data={remindersData}\n                          header={companyHeader}\n                          companyList={companyListing}\n                          reloadListing={this.reloadListing}\n                          emailTemplateList={emailTemplateData}\n                        />\n                        <div className=\"divider mt-3 mb-3 p-0\" />\n                        <h6><strong>Recurring Reminders:</strong></h6>\n                        <CustomTable\n                          type=\"reccompany\"\n                          data={remindersData}\n                          header={['Entity', ...recurringTableHeader.slice(1, 6)]}\n                          companyList={companyListing}\n                          reloadListing={this.reloadListing}\n                          emailTemplateList={emailTemplateData}\n                        />\n                      </div>\n                    </Accordion.Collapse>\n                  </Accordion>\n                  <Accordion className=\"col-md-12\" defaultActiveKey={expand === '#customerreminders' && \"0\"} id=\"customerreminders\">\n                    <Accordion.Toggle\n                      className=\"border mt-4 px-3 cursour-pointer bg-light-grey\"\n                      as={Card.Header}\n                      eventKey=\"0\"\n                    >\n                      <h6 className=\"my-0\">Customer Level Reminders</h6>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse className=\"py-2\" eventKey=\"0\">\n                      <div className=\"col-md-9\">\n                        <CustomTable\n                          type=\"customer\"\n                          data={remindersData}\n                          header={customerHeader}\n                          customerList={customerListing}\n                          reloadListing={this.reloadListing}\n                          emailTemplateList={emailTemplateData}\n                          searchCustomer={this.searchCustomer}\n                          isCustomerListLoading={isCustomerListLoading}\n                          customerListNames={customerListNames}\n                        />\n                        <div className=\"divider mt-3 mb-3 p-0\" />\n                        <h6><strong>Recurring Reminders:</strong></h6>\n                        <CustomTable\n                          type=\"reccustomer\"\n                          data={remindersData}\n                          header={recurringTableHeader}\n                          customerList={customerListing}\n                          reloadListing={this.reloadListing}\n                          emailTemplateList={emailTemplateData}\n                          searchCustomer={this.searchCustomer}\n                          isCustomerListLoading={isCustomerListLoading}\n                          customerListNames={customerListNames}\n                        />\n                      </div>\n                    </Accordion.Collapse>\n                  </Accordion>\n                  <Accordion className=\"col-md-12\" defaultActiveKey={expand === '#emailtemplates' && \"0\"} id=\"emailtemplates\">\n                    <Accordion.Toggle\n                      className=\"border mt-4 px-3 cursour-pointer bg-light-grey\"\n                      as={Card.Header}\n                      eventKey=\"0\"\n                    >\n                      <h6 className=\"my-0\">Templates</h6>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse className=\"py-2\" eventKey=\"0\">\n                      <div className=\"col-md-9\">\n                        <CustomTable\n                          type=\"email\"\n                          data={emailTemplateData}\n                          header={emailTableHeader}\n                          reloadListing={this.reloadListing}\n                        />\n                      </div>\n                    </Accordion.Collapse>\n                  </Accordion>\n                </React.Fragment>\n                <Accordion className=\"col-md-12\" defaultActiveKey={expand === '#customercategory' && \"0\"} id=\"customercategory\">\n                  <Accordion.Toggle\n                    className=\"border mt-4 px-3 cursour-pointer bg-light-grey\"\n                    as={Card.Header}\n                    eventKey=\"0\"\n                  >\n                    <h6 className=\"my-0\">Customer Category</h6>\n                  </Accordion.Toggle>\n                  <Accordion.Collapse className=\"py-2\" eventKey=\"0\">\n                    <div className=\"col-md-12\">\n                      <ClickAwayListener onClickAway={() => this.setState({ line: '', selectedData: null })}>\n                        <div className=\"paynewdetsec\">\n                          {\n                            (line !== 'new') ?\n                              <button className=\"btn btn-primary mb-2 mt-3\" onClick={e => {\n                                e.stopPropagation();\n                                this.setState({ selectedData: { name: '', internal_id: '' }, line: 'new' });\n                              }}>Add New</button> : null\n                          }\n                          <div className=\"table-container\">\n                            <table className=\"paynewdetsectran\">\n                              <tr>\n                                <th className=\"column1 text-sm-center\">Reports</th>\n                                <th>Name</th>\n                                <th>Internal Id</th>\n                                <th className=\"text-sm-center\">Action</th>\n                              </tr>\n                              {\n                                line === 'new' ? this.renderEditableRow() : null\n                              }\n                              {\n                                this.paginate(customerCategoryList, 20, currPage).map((d, index) => {\n                                  if (line === index) {\n                                    return this.renderEditableRow();\n                                  } else {\n                                    return (\n                                      <tr onClick={() => this.setState({ line: index, selectedData: d, })} key={d.name}>\n                                        <td className=\"text-sm-center\">\n                                          <input type=\"checkbox\" className=\"md-checkbox\" onClick={e => e.stopPropagation()} name={d.id} defaultChecked={d.is_selected} onChange={e => { e.stopPropagation(); this.setState({ selectedData: { ...d, is_selected: +e.target.checked } }, this.onSubmit) }} />\n                                        </td>\n                                        <td>\n                                          {d.name}\n                                        </td>\n                                        <td>\n                                          {d.internal_id}\n                                        </td>\n                                        <td className=\"text-sm-center\">\n                                          <button\n                                            className=\"btn\"\n                                            onClick={e => {\n                                              e.stopPropagation();\n\n                                              setconfirmationboxData({\n                                                variant: \"warning\",\n                                                msg: \"Are you sure you want to delete this category?\",\n                                                onSave: () => {\n                                                  resetconfirmationboxData();\n                                                  this.onDelete(d.id);\n                                                }\n                                              });\n                                            }}\n                                          >\n                                            <i className=\"fa fa-trash-o cursor-pointer color-blue\" />\n                                          </button>\n                                        </td>\n                                      </tr>\n                                    )\n                                  }\n                                })\n                              }\n                            </table>\n                            {\n                              isCustCategoryLoading ? <div className=\"loader\">Loading...</div> : null\n                            }\n                          </div>\n                          <div className=\"pull-right mt-3\">\n                            <button\n                              onClick={() => this.handlePagination(\"prev\")}\n                              className=\"btn btn-primary mr-2 width-94px\"\n                              disabled={disablePrev}\n                            >\n                              Previous\n                            </button>\n                            <button\n                              onClick={() => this.handlePagination(\"next\")}\n                              className=\"btn btn-primary width-94px\"\n                              disabled={disableNext}\n                            >\n                              Next\n                            </button>\n                          </div>\n                        </div>\n                      </ClickAwayListener>\n                    </div>\n                  </Accordion.Collapse>\n                </Accordion>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PayableSettings;\n","import React, { Suspense, lazy } from \"react\";\n\nconst PageRef = lazy(() => import(\"./vendors\"));\nconst C = (p) => <Suspense fallback=\"\">{p.Child}</Suspense>;\nconst Page = (p) => <C Child={<PageRef {...p} />} />;\nexport default Page;\n","import \"assets/scss/table.scss\";\nimport backlog from \"containers/backlog\";\nimport PurchaseBacklog from \"containers/purchaseBacklog\";\nimport customers from \"containers/customers\";\nimport \"containers/dashboard/dashboard.css\";\nimport reports from \"containers/reports\";\nimport insights from \"containers/insights\";\nimport Currency from \"containers/settings/payroll/Currency\";\nimport { Entity } from \"containers/settings/payroll/Entity\";\nimport FundingDate from \"containers/settings/payroll/FundingDate\";\nimport PaySchedule from \"containers/settings/payroll/PaySchedule\";\nimport { default as React } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"../assets/css/nav.css\";\nimport \"../assets/css/perfect-scrollbar.css\";\nimport Header from \"../components/header\";\nimport LeftNav from \"../components/leftnav\";\nimport dashboard from \"../containers/dashboard\";\nimport payables from \"../containers/payables\";\nimport payroll from \"../containers/payroll\";\nimport receivables from \"../containers/receivables\";\nimport settings from \"../containers/settings\";\nimport data from \"../containers/settings/data\";\nimport company from \"../containers/settings/company/index\";\nimport payablesSettings from \"../containers/settings/payables/index\";\nimport profile from \"../containers/settings/profile/index\";\nimport receivablesSettings from \"../containers/settings/receivables/index\";\nimport vendors from \"../containers/vendors\";\nimport fe_config from \"constants/Configs\";\nimport TokenManager from \"utils/TokenManager\";\nimport get from \"lodash/get\";\n\nexport default function NavWrapper(props) {\n  React.useEffect(() => {\n    const data = JSON.parse(TokenManager.getUserData());\n    if (get(data, \"client_id\", \"\") == 10) {\n      props.history.push(\"/signup\");\n    }\n  }, []);\n\n  // <div className={`container-fluid bg-light-grey ${pathname.replace('/', '')}`} id=\"main-body\">\n  return (\n    <div className={`container-fluid bg-light-grey`} id=\"main-body\">\n      <Header {...props} />\n      <div className=\"row otherbody\" id=\"application-wrapper\">\n        <LeftNav />\n\n        <div className=\"col pay-rec-wrap mp-0\">\n          {/* switch body here */}\n          <Switch>\n            <Route exact path=\"/\" component={dashboard} />\n            <Route exact path=\"/dashboard\" component={dashboard} />\n            <Route path=\"/payables\" component={payables} />\n            <Route path=\"/payroll\" component={payroll} />\n            <Route path=\"/receivables\" component={receivables} />\n            {<Route exact path=\"/customers\" component={customers} />}\n            <Route path=\"/customers/:id\" component={customers} />\n            {<Route exact path=\"/vendors\" component={vendors} />}\n            <Route path=\"/vendors/:id\" component={vendors} />\n            <Route exact path=\"/settings\" component={settings} />\n            <Route exact path=\"/reports\" component={reports} />\n            <Route exact path=\"/insights\" component={insights} />\n            <Route path=\"/backlog\" component={backlog} />\n            {fe_config.MODE === \"DEV\" && <Route path=\"/purchase-orders\" component={PurchaseBacklog} />}\n            <Route path=\"/settings/profile\" component={profile} />\n            <Route path=\"/settings/company\" component={company} />\n            <Route path=\"/settings/payables\" component={payablesSettings} />\n            <Route path=\"/settings/receivables\" component={receivablesSettings} />\n            <Route path=\"/settings/payroll/entity\" component={Entity} />\n            <Route path=\"/settings/payroll/pay_schedule\" component={PaySchedule} />\n            <Route path=\"/settings/payroll/funding_date\" component={FundingDate} />\n            <Route path=\"/settings/payroll/currency\" component={Currency} />\n            <Route path=\"/settings/data\" component={data} />\n            <Route path=\"**\" component={() => <div>not found</div>} />\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Snackbar from \"components/Snackbar\";\nimport login from \"containers/login\";\nimport signup from \"containers/signup\";\nimport forgetPassword from \"containers/forgetPassword\";\nimport resetPassword from \"containers/resetPassword\";\nimport TokenManager from \"utils/TokenManager\";\nimport NavWrapper from \"./navWrapper\";\nimport ConfirmationBox from \"components/ConfirmationBox\";\nimport { instance } from \"actions/axiosInstance\";\nimport { logout } from \"handlers/setters\";\nimport fe_config from \"constants/Configs\";\nimport EmailCreator from \"components/Email/EmailCreator\";\nimport Preview from \"components/Preview\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  console.log('rest: ', rest);\n  return (\n  <Route\n    render={props =>\n      TokenManager.get() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\n      )\n    }\n    {...rest}\n  />\n)};\n\nlet isAfterWarnEvent = false;\nlet API_IN_PROGRESS = false;\nclass Root extends Component {\n  constructor(props) {\n    super(props);\n    this.events = [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"];\n    this.warn = this.warn.bind(this);\n    this.logout = this.logout.bind(this);\n    this.resetTimeout = this.resetTimeout.bind(this);\n    this.storageChange = this.storageChange.bind(this);\n    window.addEventListener(\"storage\", this.storageChange, false);\n    for (var i in this.events) {\n      window.addEventListener(this.events[i], this.resetTimeout);\n    }\n  }\n\n  componentDidMount() {\n    TokenManager.get() && this.setTimeout();\n  }\n\n  storageChange(event) {\n    if (event.key === \"REFRESHED\") {\n      window.location.reload(true);\n    }\n    if (event.key === \"loggedout\") {\n      window.sessionStorage.setItem(\"oldUrl\", window.location.href);\n      window.sessionStorage.setItem(\"oldUser\", event.newValue);\n      window.location.pathname !== \"/login\" && window.open(\"/login\", \"_self\");\n    }\n    if (event.key === \"loggedin\") {\n      if (event.newValue === window.sessionStorage.getItem(\"oldUser\")) {\n        const URL = window.sessionStorage.getItem(\"oldUrl\");\n        if (URL) {\n          window.open(URL, \"_self\");\n        }\n      } else {\n        window.close();\n      }\n    }\n  }\n\n  clearTimeout() {\n    if (this.warnTimeout) clearTimeout(this.warnTimeout);\n    if (this.logoutTimeout) clearTimeout(this.logoutTimeout);\n  }\n\n  setTimeout() {\n    if (!TokenManager.getExpiredAt()) {\n      return;\n    }\n    const REFRESH_TOKEN_TIME = fe_config.MODE === \"PROD\" ? 15 * 60 * 1000 : 4 * 60 * 1000;\n    const warnTime = TokenManager.getExpiredAt() - Math.round(new Date().getTime()) - REFRESH_TOKEN_TIME;\n    // console.log('warnTime: ', warnTime);\n    this.warnTimeout = setTimeout(this.warn, warnTime);\n    const logoutTime = TokenManager.getExpiredAt() - Math.round(new Date().getTime());\n    // console.log('logoutTime: ', logoutTime);\n    this.logoutTimeout = setTimeout(this.logout, logoutTime);\n  }\n\n  resetTimeout() {\n    if (isAfterWarnEvent) {\n      isAfterWarnEvent = false;\n      if (API_IN_PROGRESS) {\n        return;\n      }\n      API_IN_PROGRESS = true;\n      instance\n        .get(\"token\")\n        .then(response => {\n          API_IN_PROGRESS = false;\n          TokenManager.set(response.data.token, response.data[\"expires at\"]);\n          this.clearTimeout();\n          this.setTimeout();\n        }).catch(e => {\n          logout();\n        })\n    } else {\n      this.clearTimeout();\n      this.setTimeout();\n    }\n  }\n\n  warn() {\n    isAfterWarnEvent = true;\n  }\n\n  logout() {\n    // Send a logout request to the API\n    if(document.hasFocus()) {\n      logout();\n    }\n  }\n\n  componentWillUnmount() {\n    this.destroy();\n  }\n\n  destroy() {\n    this.clearTimeout();\n\n    for (var i in this.events) {\n      window.removeEventListener(this.events[i], this.resetTimeout);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Snackbar />\n        <ConfirmationBox />\n        <EmailCreator />\n        <Preview />\n        <Router>\n          <Switch>\n            <Route exact path=\"/login\" component={login} />\n            {<Route exact path=\"/signup\" component={signup} />}\n            <Route exact path=\"/forgot-password\" component={forgetPassword} />\n            <Route exact path=\"/reset-password\" component={resetPassword} />\n            <ProtectedRoute path=\"/\" component={NavWrapper} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Root);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport Root from \"./routes\";\nimport store from \"./store\";\nimport \"assets/css/global.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/css/perfect-scrollbar.css\";\nimport \"assets/css/responsive.css\";\nimport \"react-table-v6/react-table.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"assets/css/app.css\";\nimport \"assets/css/customers.css\";\nimport \"assets/scss/components/DatePicker.scss\";\n// import \"./assets/scss/index.scss\";\nimport fe_config from \"constants/Configs\";\n\nfe_config.MODE === \"PROD\" && (console.log = console.warn = console.error = () => {});\n\n/**\n * Set up a store provider\n * Add Mui theme\n */\ntoast.configure({\n  autoClose: 3000,\n  draggable: false\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <Root />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.283ae950.jpg\";","export const passwordRegEx = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d!$%@#£€*?&]{8,}$/;\nexport const emailRegEx = /^([a-zA-Z0-9_+\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\n","import React from \"react\";\n\nexport function getFormattedNumber(num = \"\", skiproundoff = true) {\n  if (!num && num != 0) {\n    return \"\";\n  }\n  let isnumfloat = num % 1 != 0;\n  let result = isnumfloat ? Number(num).toFixed(1) : Math.round(num);\n  if (skiproundoff) {\n    result = Math.round(result);\n  }\n  result = Number.isNaN(result) ? 0 : result;\n  // result = Math.abs(result);\n  return Number(result).toLocaleString(\"en\");\n}\n\nexport function getFAWC(num = \"\") {\n  return !num && num !== 0 ? \"\" : <span>{getShortNumber(Math.round(num), true, false)}</span>;\n  // style={{ fontFamily: \"Roboto Mono\" }}\n}\n\nexport function kFormatter(num) {\n  return Math.abs(num) > 99999\n    ? getFormattedNumber(Math.abs(Math.sign(num) * (Math.abs(num) / 1000))) + \"K\"\n    : getFormattedNumber(Math.abs(Math.sign(num) * Math.abs(num)));\n}\n\nexport function mFormatter(num) {\n  return Math.abs(num) > 999999\n    ? getFormattedNumber((Math.sign(num) * (Math.abs(num) / 1000000)).toFixed(1), false) + \"M\"\n    : getFormattedNumber(Math.sign(num) * Math.abs(num), false);\n}\n\nexport function bFormatter(num) {\n  return Math.abs(num) > 999999999\n    ? getFormattedNumber((Math.sign(num) * (Math.abs(num) / 1000000000)).toFixed(1), false) + \"B\"\n    : getFormattedNumber(Math.sign(num) * Math.abs(num), false);\n}\n\nexport function getShortNumber(num, appendCurrency = true, toShort = true) {\n  let round = Number(num);\n  if (Number.isNaN(round) || (!num && num !== 0) || num === null) {\n    return \"\";\n  }\n  const isnegative = round < 0;\n  round = Number(Math.abs(num));\n  if (toShort) {\n    if (round > 999999999) {\n      round = bFormatter(round);\n    } else if (round > 999999) {\n      round = mFormatter(round);\n    } else if (round > 99999) {\n      round = kFormatter(round);\n    } else {\n      round = getFormattedNumber(Math.round(round));\n    }\n  } else {\n    round = getFormattedNumber(round);\n  }\n  const result = round || round === 0 ? (appendCurrency ? (isnegative ? `-$${round}` : `$${round}`) : round) : round;\n  return result;\n}\n\nexport function getParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n    results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return \"\";\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\nexport const convertAmount = amount => {\n  const isNegative = amount < 0;\n  const roundAmount = Math.round(Math.abs(amount));\n  if (isNegative) {\n    return `-$${roundAmount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`\n  }\n  return `$${roundAmount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`;\n};\n\nexport const convertDecimalNo = (num) => {\n  if(!num) {\n    return 0;\n  }else if(!Number.isInteger(Number(num))) {\n    return Number(Number(num).toFixed(2));\n  }\n  return num;\n}\n","import axios from \"axios\";\nimport get from \"lodash/get\";\nimport createstore from \"../store\";\nimport Configs from \"../constants/Configs\";\nimport fe_config from \"../constants/Configs\";\nimport { getUTCDate } from \"utils/dates\";\nimport TokenManager from \"utils/TokenManager\";\n\nconst BASE_URL = Configs.API_URL;\nconst GLOBAL_TOKEN =\n  \"eyJhbGciOiJIUzUxMiIsImlhdCI6MTU3MzkwMjI0MCwiZXhwIjoxNTczOTAyODQwfQ.eyJpZCI6MX0.OHHQTsLuK7Cy9dsklnp-JumDoJVdBrCUh6j21gr0YWgz3uLkhpmamAKS6vntIh9MTraXcYlItqA_NUFcc4nXMw\";\n\nconst transformURL = url =>\n  url\n    .split(\"&\")\n    .filter(x => x)\n    .map(x => x.split(\"=\"))\n    .map(param => ([\"from_date\", \"to_date\"].includes(param[1]) ? [param[0], getUTCDate(param[1])] : param))\n    .map(x => x.join(\"=\"))\n    .join(\"&\");\n\nexport const setAuthorizationToken = () => {\n  const store = createstore.getState();\n  const { auth } = store;\n  return get(auth, \"token\", \"\") || GLOBAL_TOKEN;\n};\n\nconst ConvertHeadersForBackend = headers => {\n  headers.Authorization = setAuthorizationToken();\n  headers[\"Content-Type\"] = \"application/json\";\n  return headers;\n};\n\nexport const instance = axios.create({\n  baseURL: BASE_URL,\n  transformRequest: [\n    (data, headers) => {\n      headers = ConvertHeadersForBackend(headers);\n      return JSON.stringify(data);\n    }\n  ]\n});\n\n// declare a request interceptor\ninstance.interceptors.request.use(\n  config => {\n    config.url = transformURL(config.url);\n    if (!get(config, \"auth\", \"\")) {\n      config.auth = {\n        username: TokenManager.get(),\n        password: Math.random().toString(20)\n      };\n    }\n    console.log(\"config: \", config);\n    return config;\n  },\n  error => {\n    // handle the error\n    return Promise.reject(error);\n  }\n);\n\ninstance.interceptors.response.use(\n  response => {\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n    // const {\n    //   config,\n    // } = error;\n    // const originalRequest = config;\n    // try {\n    //   if (fe_config.MODE === \"DEV\") {\n    //     console.log(\"instance error\", error);\n    //   }\n    // } catch (e) {\n    //   console.log(\"instance catch err\", e);\n    // }\n    // if (status === 200) {\n    //   return new Promise((resolve, reject) => {\n    //     resolve(instanceWithRetry(originalRequest));\n    //   });\n    // } else {\n    // return Promise.reject(error);\n    // }\n  }\n);\n\nexport const instanceWithRetry = axios.create({\n  baseURL: BASE_URL,\n  transformRequest: [\n    (data, headers) => {\n      headers = ConvertHeadersForBackend(headers);\n      return JSON.stringify(data);\n    }\n  ]\n});\n\n// declare a request interceptor\ninstanceWithRetry.interceptors.request.use(\n  config => {\n    config.url = transformURL(config.url);\n    if (!get(config, \"auth\", \"\")) {\n      config.auth = {\n        username: TokenManager.get(),\n        password: Math.random().toString(20)\n      };\n    }\n    console.log(\"config: \", config);\n    return config;\n  },\n  error => {\n    // handle the error\n    return Promise.reject(error);\n  }\n);\n\nlet API_IN_PROGRESS = \"\";\nconst retryRequest = originalRequest => {\n  if (API_IN_PROGRESS === originalRequest.url) {\n    return null;\n  }\n  API_IN_PROGRESS = originalRequest.url;\n  return new Promise((resolve, reject) => {\n    resolve(instanceWithRetry(originalRequest));\n  });\n};\n\ninstanceWithRetry.interceptors.response.use(\n  response => {\n    return response;\n  },\n  error => {\n    const {\n      config\n      // response: { status }\n    } = error;\n    const originalRequest = config;\n    try {\n      fe_config.MODE === \"DEV\" && console.log(\"instanceWithRetry request\", JSON.stringify(originalRequest));\n    } catch (e) {\n      console.log(\"instanceWithRetry err\", e);\n    }\n    if (!get(error, \"response.status\", \"\")) {\n      return retryRequest(originalRequest);\n    } else {\n      return Promise.reject(error);\n    }\n  }\n);\n\n// const sleepRequest = (milliseconds, originalRequest) => {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => resolve(instanceWithRetry(originalRequest)), milliseconds);\n//   });\n// };\n\n// export const instanceWithRetry = axios.interceptors.response.use(null, (error) => {\n//   if (error.config && error.response && error.response.status === 401) {\n//     return updateToken().then((token) => {\n//       error.config.headers.xxxx <= set the token\n//       return axios.request(config);\n//     });\n//   }\n//   return Promise.reject(error);\n// });\n\nexport const instanceMultipart = axios.create({\n  baseURL: BASE_URL,\n  transformRequest: [\n    (data, headers) => {\n      headers.Authorization = setAuthorizationToken();\n      headers[\"Content-Type\"] = \"multipart/form-data\";\n      return data;\n    }\n  ]\n});\n\nexport const downloadFile = (url, name) => {\n  let urlExt = url.split(\"/\");\n  urlExt = urlExt[urlExt.length - 1];\n  instance\n    .post(\"url\", { url }, { responseType: \"blob\" })\n    .then(result => {\n      const newurl = window.URL.createObjectURL(new Blob([result.data]));\n      const link = document.createElement(\"a\");\n      link.href = newurl;\n      link.setAttribute(\"download\", name || urlExt);\n      document.body.appendChild(link);\n      link.click();\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\n// declare a request interceptor\ninstanceMultipart.interceptors.request.use(\n  config => {\n    config.url = transformURL(config.url);\n    if (!get(config, \"auth\", \"\")) {\n      config.auth = {\n        username: TokenManager.get(),\n        password: Math.random().toString(20)\n      };\n    }\n    console.log(\"config: \", config);\n    return config;\n  },\n  error => {\n    // handle the error\n    return Promise.reject(error);\n  }\n);\n","import React, { Component } from \"react\";\nimport cx from 'classnames';\nimport parse from 'html-react-parser';\nimport ClickAwayListener from \"components/ClickAwayListener\";\nimport 'assets/scss/autocomplete.scss';\n\nclass Autocomplete extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // The active selection's index\n            activeSuggestion: 0,\n            // The suggestions that match the user's input\n            filteredSuggestions: [],\n            // Whether or not the suggestion list is shown\n            showSuggestions: false,\n            // What the user has entered\n            userInput: \"\",\n            hide: false,\n            typing: false,\n            firstTimeFetch: false,\n        };\n    }\n\n    componentDidMount() {\n        const { defaultValue, search } = this.props;\n        this.setState({\n            filteredSuggestions: this.props.suggestions.length ? this.props.suggestions : []\n        })\n        if (defaultValue) {\n            search(defaultValue);\n            this.setState({ firstTimeFetch: true, userInput: defaultValue });\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const filteredSuggestions = nextProps.suggestions.length ? nextProps.suggestions : [];\n        if (this.state.firstTimeFetch && filteredSuggestions[0]) {\n            this.setState({ firstTimeFetch: false, filteredSuggestions: [] }, () => this.props.getSelected(filteredSuggestions[0]))\n        } else {\n            this.setState({ filteredSuggestions });\n        }\n    }\n\n    onChange = e => {\n        const userInput = e.currentTarget.value;\n        this.props.search(userInput);\n\n        this.setState({\n            activeSuggestion: 0,\n            showSuggestions: true,\n            hide: false,\n            typing: true,\n            userInput: e.currentTarget.value\n        });\n    };\n\n    onClick = (e, item, activeSuggestion) => {\n        this.setState({\n            activeSuggestion,\n            showSuggestions: false,\n            typing: false,\n            hide: true,\n            userInput: \"\",\n        });\n        this.props.getSelected(item);\n    };\n\n    onDelete = () => {\n        this.setState({\n            activeSuggestion: 0,\n            showSuggestions: false,\n            typing: false,\n            hide: true,\n            userInput: \"\",\n        });\n        this.props.getSelected(null);\n    }\n\n    onKeyDown = e => {\n        const { activeSuggestion, filteredSuggestions } = this.state;\n        const {\n            defaultValue,\n            getSelected,\n        } = this.props;\n        // User pressed the enter key\n        if (e.keyCode === 13) {\n            e.preventDefault();\n            this.setState({\n                userInput: \"\",\n                activeSuggestion: activeSuggestion || 0,\n                showSuggestions: false,\n            });\n            getSelected(filteredSuggestions[activeSuggestion || 0]);\n        }\n        // User pressed the up arrow\n        else if (e.keyCode === 38) {\n            if (activeSuggestion === 0) {\n                this.setState({ activeSuggestion }, () => this.scrollList(activeSuggestion))\n            } else {\n                this.setState({ activeSuggestion: activeSuggestion - 1 }, () => this.scrollList(activeSuggestion-1));\n            }\n        }\n        // User pressed the down arrow\n        else if (e.keyCode === 40) {\n            if (activeSuggestion + 1  === filteredSuggestions.length || filteredSuggestions.length === 1) {\n                this.setState({ activeSuggestion }, () => this.scrollList(activeSuggestion))\n            } else {\n                this.setState({ activeSuggestion: activeSuggestion + 1 }, () => this.scrollList(activeSuggestion+1));\n            }\n        }\n        // user pressed backspace\n        else if (e.keyCode === 8) {\n            this.setState({\n                userInput: defaultValue,\n            }, () => getSelected(null));\n        }\n    };\n\n    scrollList = (activeSuggestion) => {\n        if (document.querySelector('.suggestion-active')) {\n            const ul = document.querySelector('.suggestions');\n            var elHeight = document.querySelector('.suggestion-active').clientHeight;\n            var scrollTop = ul.scrollTop;\n            var viewport = scrollTop + ul.clientHeight;\n            var elOffset = elHeight * activeSuggestion;\n            if (elOffset < scrollTop || (elOffset + elHeight) > viewport) {\n                ul.scrollTop = elOffset;\n            }\n        }\n    }\n\n    render() {\n        const {\n            onChange,\n            onClick,\n            onKeyDown,\n            props:{\n                isLoading,\n                placeholder,\n                defaultValue,\n                inputClassName,\n                inputWrapperClassName,\n            },\n            state: {\n                activeSuggestion,\n                filteredSuggestions,\n                firstTimeFetch,\n                showSuggestions,\n                userInput,\n                typing,\n                hide,\n            }\n        } = this;\n\n        let suggestionsListComponent;\n        if (isLoading && !firstTimeFetch) {\n            suggestionsListComponent = (\n                <div className=\"no-suggestions\">\n                    <em>Loading....</em>\n                </div>\n            );\n        } else if (showSuggestions && userInput) {\n            if (filteredSuggestions.length) {\n                suggestionsListComponent = (\n                    <ul className={cx('suggestions', {hide: this.state.hide})}>\n                        {filteredSuggestions.filter(x => x.name).map((suggestion, index) => {\n                            const className = cx({ \"suggestion-active\": index === activeSuggestion}, [suggestion.type]);\n                            return (\n                                <li className={className} key={suggestion.name+index} onClick={(e) => onClick(e, suggestion, index)}>\n                                    {parse(suggestion.name)}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                );\n            } else if(userInput && !isLoading && !filteredSuggestions.length) {\n                suggestionsListComponent = (\n                    <div className=\"no-suggestions\">\n                        <em>No Data</em>\n                    </div>\n                );\n            }\n        }\n\n        return (\n            <ClickAwayListener onClickAway={() => this.setState({ showSuggestions: false, hide: true })}>\n                <div id=\"search-autocomplete\" className={cx(\"autocomplete inputWithIcon\", inputWrapperClassName)}>\n                    <input\n                        type=\"text\"\n                        onChange={onChange}\n                        onFocus={() => this.setState({ hide: false, showSuggestions: true })}\n                        onKeyDown={onKeyDown}\n                        // value={typing ? undefined: defaultValue}\n                        value={defaultValue || userInput}\n                        // defaultValue={defaultValue}\n                        placeholder={placeholder || ''}\n                        className={cx(\"inputWithIconInput form-control\", `${!hide && userInput ? 'focused-suggestion' : ''}`,inputClassName)}\n                    />\n                    {\n                        (defaultValue && !firstTimeFetch)\n                        ?\n                        <i onClick={this.onDelete} className=\"fa fa-remove cross\" aria-hidden=\"true\" />\n                        :\n                         <i className=\"fa fa-search search\" aria-hidden=\"true\" />\n                    }\n                    {suggestionsListComponent}\n                </div>\n            </ClickAwayListener>\n        );\n    }\n}\n\nexport default Autocomplete;\n","const If = props => {\n  if (props.condition) {\n    return props.children;\n  }\n  return null;\n};\nexport default If;\n","import { getUrlExtension } from \"handlers/getters\";\nimport React, { Component } from \"react\";\n\nexport function getDocViewFromExt({ docUrl, width, isbase64, ext }) {\n  const ext1 = ext || getUrlExtension(docUrl);\n  switch (ext1) {\n    case \"jpg\":\n    case \"jpeg\":\n    case \"png\":\n      return <ImgView docUrl={docUrl} width={width} />;\n    case \"pdf\":\n      return <PdfView docUrl={docUrl} width={width} isbase64={isbase64} />;\n    case \"ppt\":\n    case \"pptx\":\n      return <PptView docUrl={docUrl} width={width} />;\n    case \"doc\":\n    case \"docx\":\n    case \"txt\":\n    case \"text\":\n    case \"rtf\":\n      return <DocView docUrl={docUrl} width={width} />;\n    default:\n      return null;\n  }\n}\n\nconst ImgView = ({ docUrl, width = \"\" }) => (\n  <div style={{ height: \"100%\", width: \"100%\", overflow: \"auto\" }}>\n    <img src={docUrl} alt=\"\" style={{ objectFit: \"scale-down\", overflow: \"auto\" }} className={`${width}`} />\n  </div>\n);\n\nconst PdfView = ({ docUrl, isbase64 }) => (\n  <div>\n    {!isbase64 ? (\n      <embed\n        className=\"h-100 w-100 minht-300 holds-the-iframe\"\n        src={`https://drive.google.com/viewerng/\n          viewer?embedded=true&url=${docUrl}`}\n        alt=\"loading\"\n      />\n    ) : (\n      <embed className=\"h-100 w-100 minht-300 holds-the-iframe\" src={`${docUrl}`} alt=\"loading\" />\n    )}\n  </div>\n);\n\nconst PptView = ({ docUrl }) => (\n  <embed\n    className=\"holds-the-iframe h-100 w-100 minht-300\"\n    src={`https://view.officeapps.live.com/op/embed.aspx?src=${docUrl}`}\n  />\n);\n\n// const DocView = ({ docUrl }) => <embed className=\"h-100 w-100\" src={`https://docs.google.com/viewerng/viewer?url=${docUrl}`} />;\n\nconst DocView = ({ docUrl }) => (\n  <embed className=\"holds-the-iframe h-100 w-100 minht-300\" src={`https://docs.google.com/gview?url=${docUrl}&embedded=true`} />\n);\n\nconst TxtView = ({ docUrl }) => <embed className=\"holds-the-iframe h-100 w-100 minht-300\" type=\"text/plain\" src={docUrl} />;\n\nexport default class DocViewer extends Component {\n  render() {\n    const { docUrl, onClose, name, isbase64, ext } = this.props;\n    // const h = window.innerHeight - 66;\n    // const fname = getFnameFromUrl(docUrl);\n    return getDocViewFromExt({ docUrl, isbase64, ext });\n  }\n}\n","import If from \"components/If\";\nimport { ReducersTypes } from \"constants/ReducersTypes\";\nimport React from \"react\";\nimport store from \"store\";\nimport { Modal } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport DocViewer from \"./DocViewer\";\n\nexport const setPreview = data => {\n  store.dispatch({\n    type: ReducersTypes.PREVIEW_DOCUMENT,\n    payload: data\n  });\n};\n\nexport const resetPreview = () => {\n  store.dispatch({\n    type: ReducersTypes.RESET_PREVIEW_DOCUMENT\n  });\n};\n\nexport const previewInNewTab = (doc, type) => {\n  if (doc && type === \"pdf\") {\n    let pdfWindow = window.open(\"\", \"_blank\");\n    pdfWindow.document.write(\n      \"<iframe width='100%' height='100%' src='data:application/pdf;base64, \" + encodeURI(doc) + \"'></iframe>\"\n    );\n  } else {\n    window.open(doc, \"_blank\");\n  }\n};\n\nconst Preview = ({\n  preview: { show = false, type = \"\", data = \"\", name = null, isbase64 = false, ext = null }\n}) => (\n  <div>\n    <Modal show={show} size=\"lg\" backdrop=\"static\" className=\"mt-4\" onHide={resetPreview}>\n      <Modal.Header closeButton>\n        <div className=\"w-100\">\n          <strong>{name}</strong>\n          <i\n            onClick={() => {\n              // method 1\n              // const newWindow = window.open(data, \"_blank\");\n              // newWindow.reload();\n\n              // method 2\n              // window.open(\"data:application/pdf,\" + encodeURI(SAMPLEPDF));\n\n              // method 3\n              previewInNewTab(data, \"pdf\");\n            }}\n            className=\"fas fa-expand pull-right cursour-pointer mt-1 mr-2\"\n            title=\"expand\"\n            style={{ fontSize: 16 }}\n          />\n        </div>\n      </Modal.Header>\n      <Modal.Body>\n        <If condition={type === \"doc\"}>\n          <DocViewer\n            docUrl={`data:application/pdf;base64,${data}`}\n            name={name}\n            ext={ext}\n            isbase64={isbase64}\n            onClose={resetPreview}\n          />\n        </If>\n      </Modal.Body>\n    </Modal>\n  </div>\n);\n\nfunction mapStateToProps(state) {\n  return {\n    preview: state.preview\n  };\n}\n\nexport default connect(mapStateToProps, null)(Preview);\n\n// import React, { lazy, Suspense } from \"react\";\n// import CustomSpinner from \"components/Spinner\";\n\n// const PreviewComp = lazy(() => import(\"./preview.js\"));\n\n// const C = (p) => <Suspense fallback={<CustomSpinner />}>{p.Child}</Suspense>;\n// const Preview = (p) => <C Child={<PreviewComp {...p} />} />;\n\n// export default Preview;\n","import ClickAwayListener from \"components/ClickAwayListener\";\nimport get from \"lodash/get\";\nimport React from \"react\";\n\nexport default class TextEditorCell extends React.Component {\n  state = { editmode: false, value: get(this.props.value), showpencil: false };\n\n  componentDidMount() {\n    this.setState({ value: this.props.value });\n  }\n\n  setEditMode = mode => {\n    this.setState({ editmode: mode, showpencil: false });\n    const { value } = this.state;\n    (value !== this.props.value) && this.props.updateValue(value);\n  };\n\n  componentWillReceiveProps(newprops) {\n    if (this.state.value !== newprops.value) {\n      this.setState({ value: newprops.value });\n    }\n  }\n\n  render() {\n    const { iscellcomponent = false } = this.props;\n    const { editmode, value, showpencil } = this.state;\n    return editmode ? (\n      <ClickAwayListener onClickAway={this.setEditMode}>\n        <form className=\"mr-2\" onSubmit={() => this.setEditMode(false)}>\n          <input\n            id=\"amount-editor\"\n            type=\"text\"\n            onChange={e => {\n              this.setState({ value: get(e, \"target.value\", \"\") });\n            }}\n            onKeyDown={e => {\n              if (e.key === \"Tab\") {\n                e.preventDefault();\n                this.setEditMode(false);\n              }\n            }}\n            onBlur={() => this.setEditMode(false)}\n            value={value}\n          />\n        </form>\n      </ClickAwayListener>\n    ) : (\n      <div\n        className=\"mr-2\"\n        onClick={(e) => {\n          e.stopPropagation();\n          this.setState({ editmode: true }, () => {\n            document.getElementById(\"amount-editor\").focus();\n          });\n        }}\n        onMouseEnter={() => {\n          this.setState({ showpencil: true })\n        }}\n        onMouseLeave={() => {\n          this.setState({ showpencil: false })\n        }}\n      >\n        {value || \"-\"}\n        {!iscellcomponent && showpencil && (\n          <span className=\"ml-3\">\n            <i className=\"fa fa-pencil-alt\" />\n          </span>\n        )}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}