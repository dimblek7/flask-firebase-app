{"version":3,"sources":["components/Spinner.js","components/DateRangePicker.js","../node_modules/react-bootstrap/esm/Spinner.js","components/Recharts/Placeholders/Piechart.js","components/TableRow.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/lodash/sum.js","../node_modules/lodash/_baseSum.js","../node_modules/react-dnd/dist/esm/common/DragSourceMonitorImpl.js","../node_modules/react-dnd/dist/esm/common/SourceConnector.js","../node_modules/react-dnd/dist/esm/hooks/internal/drag.js","../node_modules/react-dnd/dist/esm/hooks/useDrag.js","containers/payroll/PayrollCreate.js","containers/payroll/PayrollList.js","containers/payroll/payroll.js"],"names":["CustomSpinner","isfullscreen","className","animation","role","CustomDateRangePicker","props","updateDates","startDate","endDate","setState","moment","text","format","getDates","chosenLabel","getSelectedDates","state","add","showDatePicker","this","nextProps","isEqual","ranges","Today","subtract","parentEl","labelFormat","id","width","showDropdowns","linkedCalendars","onApply","e","picker","onBlur","style","background","cursor","padding","border","onClick","setTimeout","document","getElementById","click","Component","Spinner","React","forwardRef","_ref","ref","bsPrefix","variant","size","children","_ref$as","as","_objectWithoutPropertiesLoose","bsSpinnerPrefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","height","Box","data","type","useDrag","item","collect","monitor","isDropping","isDragging","drag","_objectDestructuringEmpty","obj","TypeError","baseSum","require","identity","module","exports","array","length","iteratee","result","index","current","undefined","_defineProperties","target","i","descriptor","enumerable","configurable","writable","Object","defineProperty","key","isCallingCanDrag","isCallingIsDragging","DragSourceMonitorImpl","manager","instance","Constructor","_classCallCheck","sourceId","internalMonitor","getMonitor","protoProps","staticProps","value","invariant","canDragSource","isDraggingSource","listener","options","subscribeToStateChange","targetId","isOverTarget","getTargetIds","isSourcePublic","getSourceId","subscribeToOffsetChange","canDropOnTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","prototype","SourceConnector","backend","_this","hooks","wrapConnectorHooks","dragSource","node","clearDragSource","dragSourceOptions","isRef","dragSourceRef","dragSourceNode","reconnectDragSource","dragPreview","clearDragPreview","dragPreviewOptions","dragPreviewRef","dragPreviewNode","reconnectDragPreview","handlerId","dragSourceOptionsInternal","dragPreviewOptionsInternal","lastConnectedHandlerId","lastConnectedDragSource","lastConnectedDragSourceOptions","lastConnectedDragPreview","lastConnectedDragPreviewOptions","newHandlerId","reconnect","didChange","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","dragSourceUnsubscribe","connectDragSource","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","dragPreviewUnsubscribe","connectDragPreview","shallowEqual","get","set","_slicedToArray","arr","Array","isArray","_arrayWithHoles","Symbol","iterator","toString","call","_arr","_n","_d","_e","_s","_i","next","done","push","err","_iterableToArrayLimit","_nonIterableRest","_typeof","constructor","spec","specRef","useRef","_useDragSourceMonitor2","useDragDropManager","useMemo","getBackend","useDragSourceMonitor","connector","handler","beginDrag","_spec$current","begin","beginResult","canDrag","globalMonitor","endDrag","end","useIsomorphicLayoutEffect","_registerSource2","registerSource","unregister","receiveHandlerId","useDragHandler","useMonitorOutput","previewOptions","inputconverter","postdata","allentitites","allbanks","label","typeid","KEYS","Date","required","Float","Select","Text","map","field","initjson","POSTDATA","entity","due_date","salary","bonus","tax","period","benefits","commission","total","notes","misc","bank","connect","history","selectedpayment","useState","setsearchText","setpostdata","allbankaccounts","setallbankaccounts","allentities","setallentities","useEffect","window","scrollTo","then","resp","catch","handleAPIError","x","name","setselectedpayment","pathname","location","split","date","original_entity_name","find","fontSize","float","title","color","marginRight","ariaHidden","getFormattedDate","DynamicForm","fields","numberOfColumns","formKey","validateMyForm","error","updatedpostData","selectedShift","forEach","element","outputconverter","postdatanew","keys","console","log","records","put","localStorage","setItem","Toaster","renderActiveShape","cx","cy","innerRadius","outerRadius","startAngle","endAngle","fill","DonutChart","onRecordClick","selectedPayroll","activeindex","setactiveindex","animationDuration","activeIndex","activeShape","dataKey","payload","onMouseEnter","onMouseLeave","position","getShortNumber","entry","COLORS","range","ExportCSV","Total","convertDecimalNo","Entity","BankAccount","Note","PREV_GRAPH_URL","PayrollList","getallentities","setpayrollGraphData","getallbankaccounts","setshowExport","flag","showexport","setNextPage","currPage","filterData","setPrevPage","searchVendor","searchBy","url","res","supplierList","showFilter","vendorCategory","status","dateType","vendorSelect","invoiceSelect","selectedEntity","URLTemp","payrollGraphData","filters","invoice_number","JSON","stringify","getData","dataUrl","URL","rows","originalRows","isFetching","response","isFetchingOriginal","modified","urls","Promise","all","responses","results","chartdata","dataindex","filter","chartdatareceived","setshowFilter","onReset","reset","sentiment","selectedSupplier","removeItem","setDates","interval","onClone","bank_account_id","changeSelection","onDelete","debounceMethod","debounce","bind","handleAddClick","parse","removeEventListener","columns","Header","accessor","Cell","TableRow","getFAWC","cf","selectedBank","stopPropagation","setconfirmationboxData","msg","onSave","resetconfirmationboxData","reduce","a","b","tabledata","selectedEntityObj","DNDContainer","record","sum","marginLeft","overflowY","backgroundColor","margin","data-toggle","aria-haspopup","aria-expanded","aria-hidden","ClickAwayListener","onClickAway","aria-labelledby","onChange","placeholder","acc","overflow","DateRangePicker","textAlign","filename","csvData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","ExportXLSX","noDataText","minRows","loading","sortable","resizable","showPagination","defaultSorted","desc","getTrProps","rowInfo","column","original","disabled","login","payables","withRouter","match","path","component","PayrollCreate"],"mappings":"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","file":"static/js/13.c8be3727.chunk.js","sourcesContent":["import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nexport const CustomSpinner = ({ isfullscreen }) => {\n  return (\n    <div className={`card-body w-100 text-center pt-5 mt-5 ${isfullscreen && \"vh-100\"}`}>\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    </div>\n  );\n};\n\nexport default CustomSpinner;\n","import React, { Component } from \"react\";\nimport get from \"lodash/get\";\nimport isEqual from \"lodash/isEqual\";\nimport moment from \"moment\";\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport \"bootstrap-daterangepicker/daterangepicker.css\";\nconst defaultLabel = \"MMM DD, YYYY\";\n\n// http://www.daterangepicker.com/ , https://www.npmjs.com/package/react-bootstrap-daterangepicker\nclass CustomDateRangePicker extends Component {\n  constructor(props) {\n    super(props);\n    let startDate = moment();\n    let endDate = moment().add(30, \"days\");\n    this.state = {\n      endDate,\n      startDate,\n      text: \"\",\n      showDatePicker: false,\n    };\n  }\n\n  componentDidMount() {\n    const { startDate, endDate } = this.props;\n    this.updateDates(startDate, endDate);\n  }\n\n  updateDates = (startDate, endDate) => {\n    this.setState({\n      startDate: moment(startDate),\n      endDate: moment(endDate),\n      text: `${moment(startDate).format(defaultLabel)} - ${moment(endDate).format(defaultLabel)}`,\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    const { startDate, endDate } = nextProps;\n    if (!isEqual(nextProps, this.props)) {\n      this.updateDates(startDate, endDate);\n    }\n  }\n\n  getDates = ({ startDate, endDate, chosenLabel }) => {\n    this.setState(\n      {\n        startDate,\n        endDate,\n        text: `${moment(startDate).format(defaultLabel)} - ${moment(endDate).format(defaultLabel)}`,\n      },\n      () => this.props.getSelectedDates(this.state.startDate, this.state.endDate, chosenLabel)\n    );\n  };\n\n  render() {\n    const ranges = {\n      Today: [moment(), moment()],\n      \"Next 7 Days\": [moment(), moment().add(7, \"days\")],\n      \"Next 30 Days\": [moment(), moment().add(30, \"days\")],\n      \"Past 7 Days\": [moment().subtract(7, \"days\"), moment()],\n      \"Past 30 Days\": [moment().subtract(30, \"days\"), moment()],\n      \"Past 90 Days\": [moment().subtract(90, \"days\"), moment()],\n      \"Past 365 Days\": [moment().subtract(365, \"days\"), moment()],\n    };\n    const { startDate, endDate, text, showDatePicker } = this.state;\n\n    const { parentEl, labelFormat } = this.props;\n\n    // const selectedDates = `${moment(startDate).format(labelFormat || defaultLabel)} - ${moment(endDate).format(\n    //   labelFormat || defaultLabel\n    // )}`;\n    return (\n      <div id=\"datepicker-wrap\">\n        {showDatePicker ? (\n          <DateRangePicker\n            parentEl={parentEl}\n            startDate={startDate}\n            endDate={endDate}\n            ranges={ranges}\n            width=\"100\"\n            showDropdowns\n            // alwaysShowCalendars\n            // autoUpdateInput\n            // autoApply\n            // singleDatePicker\n            // show={showDatePicker}\n            linkedCalendars={false}\n            format={defaultLabel}\n            onApply={(e, picker) => {\n              this.setState({ text: \"\" }, () => this.getDates(picker));\n            }}\n            onBlur={() => this.setState({ showDatePicker: false })}\n          >\n            <div\n              id=\"wrap-date\"\n              className=\"rounded\"\n              style={{\n                background: \"#fff\",\n                cursor: \"pointer\",\n                padding: \"8px 10px\",\n                border: \"1px solid #ccc\",\n              }}\n            >\n              <i id=\"fa-calender-real\" className=\"fa fa-calendar real\"></i>&nbsp;\n              <span>{text}</span>\n              {/*\n              // editable datepicker, work in progress\n              {text && (\n                <input\n                  type=\"text\"\n                  placeholder=\"mm/dd/yyyy - mm/dd/yyyy\"\n                  className=\"daterangeinput\"\n                  name=\"daterange\"\n                  value={text}\n                  onChange={e => this.setState({ text: get(e, \"target.value\", \"\"), showDatePicker: true })}\n                  onBlur={e => {\n                    const value = get(e, \"target.value\", \"\").split(\"-\");\n                    let _start =\n                      get(value, \"[0]\", \"\").trim().length === 10 &&\n                      moment(get(value, \"[0]\", \"\"), \"MM/DD/YYYY\").isValid();\n                    let _end =\n                      get(value, \"[1]\", \"\").trim().length === 10 &&\n                      moment(get(value, \"[1]\", \"\"), \"MM/DD/YYYY\").isValid();\n                    if (_start && _end) {\n                      this.getDates({\n                        startDate: moment(value[0], \"MM/DD/YYYY\"),\n                        endDate: moment(value[1], \"MM/DD/YYYY\")\n                      });\n                      return;\n                    }\n                    this.setState({ text: \"\" }, () => this.getDates({ startDate, endDate }));\n                  }}\n                />\n              )} */}\n            </div>\n          </DateRangePicker>\n        ) : (\n          <div\n            id=\"reportrange_view\"\n            className=\"rounded\"\n            style={{\n              background: \"#fff\",\n              cursor: \"pointer\",\n              padding: \"8px 10px\",\n              border: \"1px solid #ccc\",\n            }}\n            onClick={() => {\n              this.setState({ showDatePicker: true }, () => {\n                setTimeout(() => {\n                  document.getElementById(\"fa-calender-real\").click();\n                }, 100);\n              });\n            }}\n          >\n            <i className=\"fa fa-calendar\"></i>&nbsp;\n            <span>{text}</span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CustomDateRangePicker;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import React from \"react\";\n\nexport const Component = props => {\n  return (\n    <div className=\"w-100 h-100 d-flex justify-content-center\">\n      <div style={{ height: 320, width: 320 }} className=\"my-auto d-flex justify-content-center\">\n        <div className=\"my-auto\">No data available</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Component;\n","import React from 'react';\nimport { useDrag  } from 'react-dnd';\n\nconst style = {\n    cursor: 'grab',\n};\n\n\nconst Box = ({ data, className='', type='ALL', children }) => {\n    const [{}, drag] = useDrag({\n        item: {data, type},\n        collect: monitor => ({\n            isDropping: monitor.isDragging()\n        }),\n    })\n    return (\n        <div ref={drag} className={className} style={{ ...style }}>\n            {children}\n        </div>\n    )\n}\nexport default Box;\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","var baseSum = require('./_baseSum'),\n    identity = require('./identity');\n\n/**\n * Computes the sum of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 3.4.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the sum.\n * @example\n *\n * _.sum([4, 2, 8, 6]);\n * // => 20\n */\nfunction sum(array) {\n  return (array && array.length)\n    ? baseSum(array, identity)\n    : 0;\n}\n\nmodule.exports = sum;\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport invariant from 'invariant';\nvar isCallingCanDrag = false;\nvar isCallingIsDragging = false;\nexport var DragSourceMonitorImpl =\n/*#__PURE__*/\nfunction () {\n  function DragSourceMonitorImpl(manager) {\n    _classCallCheck(this, DragSourceMonitorImpl);\n\n    this.sourceId = null;\n    this.internalMonitor = manager.getMonitor();\n  }\n\n  _createClass(DragSourceMonitorImpl, [{\n    key: \"receiveHandlerId\",\n    value: function receiveHandlerId(sourceId) {\n      this.sourceId = sourceId;\n    }\n  }, {\n    key: \"getHandlerId\",\n    value: function getHandlerId() {\n      return this.sourceId;\n    }\n  }, {\n    key: \"canDrag\",\n    value: function canDrag() {\n      invariant(!isCallingCanDrag, 'You may not call monitor.canDrag() inside your canDrag() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n\n      try {\n        isCallingCanDrag = true;\n        return this.internalMonitor.canDragSource(this.sourceId);\n      } finally {\n        isCallingCanDrag = false;\n      }\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging() {\n      if (!this.sourceId) {\n        return false;\n      }\n\n      invariant(!isCallingIsDragging, 'You may not call monitor.isDragging() inside your isDragging() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n\n      try {\n        isCallingIsDragging = true;\n        return this.internalMonitor.isDraggingSource(this.sourceId);\n      } finally {\n        isCallingIsDragging = false;\n      }\n    }\n  }, {\n    key: \"subscribeToStateChange\",\n    value: function subscribeToStateChange(listener, options) {\n      return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n  }, {\n    key: \"isDraggingSource\",\n    value: function isDraggingSource(sourceId) {\n      return this.internalMonitor.isDraggingSource(sourceId);\n    }\n  }, {\n    key: \"isOverTarget\",\n    value: function isOverTarget(targetId, options) {\n      return this.internalMonitor.isOverTarget(targetId, options);\n    }\n  }, {\n    key: \"getTargetIds\",\n    value: function getTargetIds() {\n      return this.internalMonitor.getTargetIds();\n    }\n  }, {\n    key: \"isSourcePublic\",\n    value: function isSourcePublic() {\n      return this.internalMonitor.isSourcePublic();\n    }\n  }, {\n    key: \"getSourceId\",\n    value: function getSourceId() {\n      return this.internalMonitor.getSourceId();\n    }\n  }, {\n    key: \"subscribeToOffsetChange\",\n    value: function subscribeToOffsetChange(listener) {\n      return this.internalMonitor.subscribeToOffsetChange(listener);\n    }\n  }, {\n    key: \"canDragSource\",\n    value: function canDragSource(sourceId) {\n      return this.internalMonitor.canDragSource(sourceId);\n    }\n  }, {\n    key: \"canDropOnTarget\",\n    value: function canDropOnTarget(targetId) {\n      return this.internalMonitor.canDropOnTarget(targetId);\n    }\n  }, {\n    key: \"getItemType\",\n    value: function getItemType() {\n      return this.internalMonitor.getItemType();\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem() {\n      return this.internalMonitor.getItem();\n    }\n  }, {\n    key: \"getDropResult\",\n    value: function getDropResult() {\n      return this.internalMonitor.getDropResult();\n    }\n  }, {\n    key: \"didDrop\",\n    value: function didDrop() {\n      return this.internalMonitor.didDrop();\n    }\n  }, {\n    key: \"getInitialClientOffset\",\n    value: function getInitialClientOffset() {\n      return this.internalMonitor.getInitialClientOffset();\n    }\n  }, {\n    key: \"getInitialSourceClientOffset\",\n    value: function getInitialSourceClientOffset() {\n      return this.internalMonitor.getInitialSourceClientOffset();\n    }\n  }, {\n    key: \"getSourceClientOffset\",\n    value: function getSourceClientOffset() {\n      return this.internalMonitor.getSourceClientOffset();\n    }\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      return this.internalMonitor.getClientOffset();\n    }\n  }, {\n    key: \"getDifferenceFromInitialOffset\",\n    value: function getDifferenceFromInitialOffset() {\n      return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n  }]);\n\n  return DragSourceMonitorImpl;\n}();","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport wrapConnectorHooks from './wrapConnectorHooks';\nimport { isRef } from '../utils/isRef';\nimport shallowEqual from 'shallowequal';\nexport var SourceConnector =\n/*#__PURE__*/\nfunction () {\n  function SourceConnector(backend) {\n    var _this = this;\n\n    _classCallCheck(this, SourceConnector);\n\n    this.hooks = wrapConnectorHooks({\n      dragSource: function dragSource(node, options) {\n        _this.clearDragSource();\n\n        _this.dragSourceOptions = options || null;\n\n        if (isRef(node)) {\n          _this.dragSourceRef = node;\n        } else {\n          _this.dragSourceNode = node;\n        }\n\n        _this.reconnectDragSource();\n      },\n      dragPreview: function dragPreview(node, options) {\n        _this.clearDragPreview();\n\n        _this.dragPreviewOptions = options || null;\n\n        if (isRef(node)) {\n          _this.dragPreviewRef = node;\n        } else {\n          _this.dragPreviewNode = node;\n        }\n\n        _this.reconnectDragPreview();\n      }\n    });\n    this.handlerId = null; // The drop target may either be attached via ref or connect function\n\n    this.dragSourceRef = null;\n    this.dragSourceOptionsInternal = null; // The drag preview may either be attached via ref or connect function\n\n    this.dragPreviewRef = null;\n    this.dragPreviewOptionsInternal = null;\n    this.lastConnectedHandlerId = null;\n    this.lastConnectedDragSource = null;\n    this.lastConnectedDragSourceOptions = null;\n    this.lastConnectedDragPreview = null;\n    this.lastConnectedDragPreviewOptions = null;\n    this.backend = backend;\n  }\n\n  _createClass(SourceConnector, [{\n    key: \"receiveHandlerId\",\n    value: function receiveHandlerId(newHandlerId) {\n      if (this.handlerId === newHandlerId) {\n        return;\n      }\n\n      this.handlerId = newHandlerId;\n      this.reconnect();\n    }\n  }, {\n    key: \"reconnect\",\n    value: function reconnect() {\n      this.reconnectDragSource();\n      this.reconnectDragPreview();\n    }\n  }, {\n    key: \"reconnectDragSource\",\n    value: function reconnectDragSource() {\n      var dragSource = this.dragSource; // if nothing has changed then don't resubscribe\n\n      var didChange = this.didHandlerIdChange() || this.didConnectedDragSourceChange() || this.didDragSourceOptionsChange();\n\n      if (didChange) {\n        this.disconnectDragSource();\n      }\n\n      if (!this.handlerId) {\n        return;\n      }\n\n      if (!dragSource) {\n        this.lastConnectedDragSource = dragSource;\n        return;\n      }\n\n      if (didChange) {\n        this.lastConnectedHandlerId = this.handlerId;\n        this.lastConnectedDragSource = dragSource;\n        this.lastConnectedDragSourceOptions = this.dragSourceOptions;\n        this.dragSourceUnsubscribe = this.backend.connectDragSource(this.handlerId, dragSource, this.dragSourceOptions);\n      }\n    }\n  }, {\n    key: \"reconnectDragPreview\",\n    value: function reconnectDragPreview() {\n      var dragPreview = this.dragPreview; // if nothing has changed then don't resubscribe\n\n      var didChange = this.didHandlerIdChange() || this.didConnectedDragPreviewChange() || this.didDragPreviewOptionsChange();\n\n      if (!this.handlerId) {\n        this.disconnectDragPreview();\n      } else if (this.dragPreview && didChange) {\n        this.lastConnectedHandlerId = this.handlerId;\n        this.lastConnectedDragPreview = dragPreview;\n        this.lastConnectedDragPreviewOptions = this.dragPreviewOptions;\n        this.disconnectDragPreview();\n        this.dragPreviewUnsubscribe = this.backend.connectDragPreview(this.handlerId, dragPreview, this.dragPreviewOptions);\n      }\n    }\n  }, {\n    key: \"didHandlerIdChange\",\n    value: function didHandlerIdChange() {\n      return this.lastConnectedHandlerId !== this.handlerId;\n    }\n  }, {\n    key: \"didConnectedDragSourceChange\",\n    value: function didConnectedDragSourceChange() {\n      return this.lastConnectedDragSource !== this.dragSource;\n    }\n  }, {\n    key: \"didConnectedDragPreviewChange\",\n    value: function didConnectedDragPreviewChange() {\n      return this.lastConnectedDragPreview !== this.dragPreview;\n    }\n  }, {\n    key: \"didDragSourceOptionsChange\",\n    value: function didDragSourceOptionsChange() {\n      return !shallowEqual(this.lastConnectedDragSourceOptions, this.dragSourceOptions);\n    }\n  }, {\n    key: \"didDragPreviewOptionsChange\",\n    value: function didDragPreviewOptionsChange() {\n      return !shallowEqual(this.lastConnectedDragPreviewOptions, this.dragPreviewOptions);\n    }\n  }, {\n    key: \"disconnectDragSource\",\n    value: function disconnectDragSource() {\n      if (this.dragSourceUnsubscribe) {\n        this.dragSourceUnsubscribe();\n        this.dragSourceUnsubscribe = undefined;\n      }\n    }\n  }, {\n    key: \"disconnectDragPreview\",\n    value: function disconnectDragPreview() {\n      if (this.dragPreviewUnsubscribe) {\n        this.dragPreviewUnsubscribe();\n        this.dragPreviewUnsubscribe = undefined;\n        this.dragPreviewNode = null;\n        this.dragPreviewRef = null;\n      }\n    }\n  }, {\n    key: \"clearDragSource\",\n    value: function clearDragSource() {\n      this.dragSourceNode = null;\n      this.dragSourceRef = null;\n    }\n  }, {\n    key: \"clearDragPreview\",\n    value: function clearDragPreview() {\n      this.dragPreviewNode = null;\n      this.dragPreviewRef = null;\n    }\n  }, {\n    key: \"connectTarget\",\n    get: function get() {\n      return this.dragSource;\n    }\n  }, {\n    key: \"dragSourceOptions\",\n    get: function get() {\n      return this.dragSourceOptionsInternal;\n    },\n    set: function set(options) {\n      this.dragSourceOptionsInternal = options;\n    }\n  }, {\n    key: \"dragPreviewOptions\",\n    get: function get() {\n      return this.dragPreviewOptionsInternal;\n    },\n    set: function set(options) {\n      this.dragPreviewOptionsInternal = options;\n    }\n  }, {\n    key: \"dragSource\",\n    get: function get() {\n      return this.dragSourceNode || this.dragSourceRef && this.dragSourceRef.current;\n    }\n  }, {\n    key: \"dragPreview\",\n    get: function get() {\n      return this.dragPreviewNode || this.dragPreviewRef && this.dragPreviewRef.current;\n    }\n  }]);\n\n  return SourceConnector;\n}();","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { useMemo } from 'react';\nimport invariant from 'invariant';\nimport { registerSource } from '../../common/registration';\nimport { useDragDropManager } from './useDragDropManager';\nimport { DragSourceMonitorImpl } from '../../common/DragSourceMonitorImpl';\nimport { SourceConnector } from '../../common/SourceConnector';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\nexport function useDragSourceMonitor() {\n  var manager = useDragDropManager();\n  var monitor = useMemo(function () {\n    return new DragSourceMonitorImpl(manager);\n  }, [manager]);\n  var connector = useMemo(function () {\n    return new SourceConnector(manager.getBackend());\n  }, [manager]);\n  return [monitor, connector];\n}\nexport function useDragHandler(spec, monitor, connector) {\n  var manager = useDragDropManager();\n  var handler = useMemo(function () {\n    return {\n      beginDrag: function beginDrag() {\n        var _spec$current = spec.current,\n            begin = _spec$current.begin,\n            item = _spec$current.item;\n\n        if (begin) {\n          var beginResult = begin(monitor);\n          invariant(beginResult == null || _typeof(beginResult) === 'object', 'dragSpec.begin() must either return an object, undefined, or null');\n          return beginResult || item || {};\n        }\n\n        return item || {};\n      },\n      canDrag: function canDrag() {\n        if (typeof spec.current.canDrag === 'boolean') {\n          return spec.current.canDrag;\n        } else if (typeof spec.current.canDrag === 'function') {\n          return spec.current.canDrag(monitor);\n        } else {\n          return true;\n        }\n      },\n      isDragging: function isDragging(globalMonitor, target) {\n        var isDragging = spec.current.isDragging;\n        return isDragging ? isDragging(monitor) : target === globalMonitor.getSourceId();\n      },\n      endDrag: function endDrag() {\n        var end = spec.current.end;\n\n        if (end) {\n          end(monitor.getItem(), monitor);\n        }\n\n        connector.reconnect();\n      }\n    };\n  }, []);\n  useIsomorphicLayoutEffect(function registerHandler() {\n    var _registerSource = registerSource(spec.current.item.type, handler, manager),\n        _registerSource2 = _slicedToArray(_registerSource, 2),\n        handlerId = _registerSource2[0],\n        unregister = _registerSource2[1];\n\n    monitor.receiveHandlerId(handlerId);\n    connector.receiveHandlerId(handlerId);\n    return unregister;\n  }, []);\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { useRef, useMemo } from 'react';\nimport invariant from 'invariant';\nimport { useMonitorOutput } from './internal/useMonitorOutput';\nimport { useIsomorphicLayoutEffect } from './internal/useIsomorphicLayoutEffect';\nimport { useDragSourceMonitor, useDragHandler } from './internal/drag';\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification *\n */\n\nexport function useDrag(spec) {\n  var specRef = useRef(spec);\n  specRef.current = spec; // TODO: wire options into createSourceConnector\n\n  invariant(spec.item != null, 'item must be defined');\n  invariant(spec.item.type != null, 'item type must be defined');\n\n  var _useDragSourceMonitor = useDragSourceMonitor(),\n      _useDragSourceMonitor2 = _slicedToArray(_useDragSourceMonitor, 2),\n      monitor = _useDragSourceMonitor2[0],\n      connector = _useDragSourceMonitor2[1];\n\n  useDragHandler(specRef, monitor, connector);\n  var result = useMonitorOutput(monitor, specRef.current.collect || function () {\n    return {};\n  }, function () {\n    return connector.reconnect();\n  });\n  var connectDragSource = useMemo(function () {\n    return connector.hooks.dragSource();\n  }, [connector]);\n  var connectDragPreview = useMemo(function () {\n    return connector.hooks.dragPreview();\n  }, [connector]);\n  useIsomorphicLayoutEffect(function () {\n    connector.dragSourceOptions = specRef.current.options || null;\n    connector.reconnect();\n  }, [connector]);\n  useIsomorphicLayoutEffect(function () {\n    connector.dragPreviewOptions = specRef.current.previewOptions || null;\n    connector.reconnect();\n  }, [connector]);\n  return [result, connectDragSource, connectDragPreview];\n}","// import { instance } from \"actions/axiosInstance\";\nimport { instance } from \"actions/axiosInstance\";\nimport \"assets/css/paymentdetails.css\";\nimport DynamicForm, { validateMyForm } from \"components/DynamicForm\";\nimport initjson from \"components/DynamicForm/Data/initjson\";\nimport KEYS from \"components/DynamicForm/KEYS\";\nimport Toaster from \"components/Toaster\";\nimport { handleAPIError } from \"handlers/setters\";\nimport get from \"lodash/get\";\nimport moment from \"moment\";\nimport { default as React, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormattedDate } from \"utils/dates\";\n\n\nfunction inputconverter(postdata, allentitites, allbanks) {\n  const FIELD_ARRAY = [\n    {\n      id: \"due_date\",\n      label: \"Date*\",\n      typeid: KEYS.Date,\n      required: true\n    },\n    {\n      id: \"total\",\n      label: \"Amount*\",\n      typeid: KEYS.Float,\n      required: true\n    },\n    {\n      id: \"entity\",\n      label: \"Entity*\",\n      typeid: KEYS.Select,\n      options: allentitites,\n      required: true\n    },\n    {\n      id: \"bank\",\n      label: \"Bank Account*\",\n      typeid: KEYS.Select,\n      options: allbanks,\n      required: true\n    },\n    {\n      id: \"period\",\n      label: \"Period\",\n      typeid: KEYS.Text\n    },\n    {\n      id: \"notes\",\n      label: \"Notes\",\n      typeid: KEYS.Text\n    },\n    {\n      id: \"salary\",\n      label: \"Salary\",\n      typeid: KEYS.Float\n    },\n    {\n      id: \"bonus\",\n      label: \"Bonus\",\n      typeid: KEYS.Float\n    },\n    {\n      id: \"tax\",\n      label: \"Payroll tax\",\n      typeid: KEYS.Float\n    },\n    {\n      id: \"benefits\",\n      label: \"Benefits\",\n      typeid: KEYS.Float\n    },\n    {\n      id: \"commission\",\n      label: \"Commision\",\n      typeid: KEYS.Float\n    },\n    {\n      id: \"misc\",\n      label: \"Misc\",\n      typeid: KEYS.Float\n    }\n  ];\n\n  // const intimeerr = ({ fielddata }) => {\n  //   return false;\n  // };\n\n  return FIELD_ARRAY.map(field => ({\n    ...initjson,\n    ...field,\n    value: postdata[field.id]\n  }));\n}\n\nfunction outputconverter(arr, selectedShift) {\n  const result = { ...selectedShift };\n  arr.forEach(element => {\n    result[element.id] =\n      element.id === \"due_date\" && element.value\n        ? moment(element.value, \"YYYY-MM-DD\").format(\"MM/DD/YYYY\")\n        : element.value;\n  });\n  return result;\n}\n\nconst POSTDATA = {\n  entity: null, // \"storcentric US\",\n  due_date: null, // \"12/01/2019\",\n  salary: \"0\", // \"500000\",\n  bonus: \"0\", // \"300000\",\n  tax: \"\", // \"230000\",\n  period: \"\", // \"Dec 1, 2019\"\n  benefits: \"0\", // \"100000\",\n  commission: \"0\", // \"250000\",\n  total: \"0\", // \"1230000\",\n  notes: \" \",\n  misc: \"0\",\n  bank: \"\"\n};\n\nfunction PayrollDetailsPage(props) {\n  const { history, selectedpayment } = props;\n  const [searchText, setsearchText] = useState(\"\");\n  const [postdata, setpostdata] = useState(null);\n  const [customerList, setcustomerList] = useState([]);\n  const [customerSelect, setcustomerSelect] = useState(null);\n  const [allbankaccounts, setallbankaccounts] = useState(null);\n  const [allentities, setallentities] = useState(null);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    function getallbankaccounts() {\n      instance\n        .get(\"/bankaccount\")\n        .then(resp => {\n          setallbankaccounts(get(resp, \"data.result\", []));\n        })\n        .catch(e => handleAPIError(e));\n    }\n    function getallentities() {\n      instance\n        .get(\"/payroll/setting\")\n        .then(resp => {\n          setallentities(get(resp, \"data.result\", []).map(x => ({ ...x, id: x.name })));\n        })\n        .catch(e => handleAPIError(e));\n    }\n    getallbankaccounts();\n    getallentities();\n    return () => {\n      props.setselectedpayment(null);\n    }\n  }, []);\n\n  useEffect(() => {\n    let pathname = history.location.pathname;\n    pathname = pathname.split(\"/\");\n    pathname = pathname[2];\n    if (!pathname || pathname === \"create\") {\n      if(selectedpayment) {\n        setpostdata(selectedpayment);\n      } else {\n        setpostdata(POSTDATA);\n      }\n      return;\n    }\n\n    instance\n      .get(`/payroll?id=${pathname}`)\n      .then(resp => {\n        const date_be_fe = date => {\n          const res = moment(date, \"YYYY-MM-DD\").format(\"YYYY-MM-DD\");\n          return res;\n        };\n        const data = {\n          ...get(resp, \"data.result[0]\", {}),\n          bank: get(resp, \"data.result[0].bank_account_id\", \"\"),\n          due_date: date_be_fe(get(resp, \"data.result[0].due_date\", \"\"))\n        };\n        setpostdata(data);\n        setsearchText(get(resp, \"data.result[0].entity\", \"\"));\n      })\n      .catch(e => handleAPIError(e));\n  }, [history, selectedpayment]);\n\n  function searchCustomer(text, searchBy) {\n    setsearchText(text);\n    const url = `arinvoice/search?${searchBy}=${text}`;\n    if (text) {\n      instance\n        .get(url)\n        .then(res => {\n          setcustomerList(res.data.result);\n        })\n        .catch(e => handleAPIError(e));\n    }\n  }\n\n  function onSubmit() {\n    const { error, fields = [] } = validateMyForm({\n      formKey: \"createPayroll\"\n    });\n    if (error) {\n      return;\n    }\n    const updatedpostData = outputconverter(fields, postdata);\n    if (updatedpostData === postdata) {\n      history.push(\"/payroll\");\n    }\n    const {\n      salary,\n      bonus,\n      tax,\n      benefits,\n      commission,\n      period,\n      misc,\n      notes,\n      due_date,\n      bank,\n      id = \"\",\n      total,\n      entity\n    } = updatedpostData;\n    const postdatanew = {};\n    Object.keys(POSTDATA).forEach(key => {\n      if(key === \"notes\") {\n        postdatanew.notes = notes || \"\";\n      } else if (updatedpostData[key] || updatedpostData[key] == \"0\") {\n        postdatanew[key] = updatedpostData[key];\n      }\n    });\n    console.log(\"updatedpostData: \", postdatanew);\n\n    if (id && id !== \"create\") {\n      const data = {\n        records: [\n          postdatanew\n          // {\n          //   salary: salary,\n          //   bonus: bonus,\n          //   tax: tax,\n          //   benefits: benefits,\n          //   commission: commission,\n          //   period,\n          //   entity,\n          //   due_date: moment(due_date, \"YYYY-MM-DD\").format(\"MM/DD/YYYY\"),\n          //   total,\n          //   misc: misc,\n          //   notes,\n          //   bank: bank\n          // }\n        ]\n      };\n      instance\n        .put(`/payroll?id=${id}`, data)\n        .then(() => {\n          localStorage.setItem(\"refresh_reports\", true);\n          Toaster(\"Saved successfully\", \"success\");\n          history.push(\"/payroll\");\n        })\n        .catch(e => handleAPIError(e));\n    } else {\n      const data = {\n        records: [\n          postdatanew\n          // {\n          //   salary: salary,\n          //   bonus: bonus,\n          //   tax: tax,\n          //   benefits: benefits,\n          //   commission: commission,\n          //   period,\n          //   entity,\n          //   due_date: moment(due_date, \"YYYY-MM-DD\").format(\"MM/DD/YYYY\"),\n          //   total,\n          //   misc: misc,\n          //   notes,\n          //   bank: bank\n          // }\n        ]\n      };\n      instance\n        .put(`/payroll`, data)\n        .then(() => {\n          localStorage.setItem(\"refresh_reports\", true);\n          history.push(\"/payroll\");\n        })\n        .catch(e => handleAPIError(e));\n    }\n  }\n\n  const original_entity_name =\n    allentities &&\n    get(\n      allentities.find(x => x.id === get(postdata, \"entity\", \"\")),\n      \"name\",\n      \"\"\n    );\n\n  return (\n    <div className=\"card-body\">\n      <div className=\"row\">\n        <div>\n          <div className=\"titletranshist px-3\" style={{ fontSize: \"18px\", float: \"left\" }}>\n            <span onClick={() => history.push(\"/payroll\")} title=\"Back\">\n              <i\n                className=\"fa fa-arrow-left\"\n                style={{ color: \"#ddd\", marginRight: \"5px\", ariaHidden: true, cursor: \"pointer\" }}\n              ></i>\n            </span>\n            &nbsp;{\" \"}\n            {get(postdata, \"id\", \"\")\n              ? `${original_entity_name}, ${getFormattedDate(get(postdata, \"due_date\", \"\"))}`\n              : \"Add new\"}\n          </div>\n        </div>\n        <div className=\"col-md-12\">\n          {allbankaccounts && allentities && postdata && (\n            <DynamicForm\n              fields={inputconverter(postdata, allentities, allbankaccounts)}\n              numberOfColumns={3}\n              formKey=\"createPayroll\"\n            />\n          )}\n          <div className=\"w-100\">\n            <button className=\"btn btn-primary pull-right mt-3\" onClick={onSubmit}>\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PayrollDetailsPage);\n","import ClickAwayListener from \"components/ClickAwayListener\";\nimport DateRangePicker from \"components/DateRangePicker\";\nimport PieChartPlaceholder from \"components/Recharts/Placeholders/Piechart\";\nimport DNDContainer from \"components/DNDContainer\";\nimport { setconfirmationboxData, resetconfirmationboxData } from \"components/ConfirmationBox\";\nimport CustomSpinner from \"components/Spinner\";\nimport TableRow from \"components/TableRow\";\nimport * as FileSaver from \"file-saver\";\nimport { handleAPIError } from \"handlers/setters\";\nimport debounce from \"lodash/debounce\";\nimport get from \"lodash/get\";\nimport sum from \"lodash/sum\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { CSVLink } from \"react-csv\";\nimport { connect } from \"react-redux\";\nimport ReactTable from \"react-table-v6\";\nimport { Cell, Label, Pie, PieChart, Sector } from \"recharts\";\nimport { getFAWC, getShortNumber, convertDecimalNo } from \"utils\";\nimport { getFormattedDate } from \"utils/dates\";\nimport * as XLSX from \"xlsx\";\nimport { instance } from \"../../actions/axiosInstance\";\n\nconst renderActiveShape = (props) => {\n  const { cx, cy, innerRadius, outerRadius, startAngle, endAngle, fill } = props;\n\n  return (\n    <g>\n      <Sector\n        className=\"cursour-pointer\"\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius + 5}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n    </g>\n  );\n};\n\nconst DonutChart = ({ data, onRecordClick, total, selectedPayroll }) => {\n  const [activeindex, setactiveindex] = useState(null);\n\n  useEffect(() => {\n    (get(selectedPayroll, \"dataindex\", null) || get(selectedPayroll, \"dataindex\", null) === 0) &&\n      setactiveindex(get(selectedPayroll, \"dataindex\", null));\n  }, [selectedPayroll]);\n\n  function onPieEnter(data, index) {\n    setactiveindex(index);\n  }\n  function onPieLeave(data, index) {\n    setactiveindex(null || get(selectedPayroll, \"dataindex\", null));\n  }\n\n  return (\n    <PieChart width={320} height={320}>\n      <Pie\n        animationDuration={1000}\n        activeIndex={activeindex}\n        activeShape={renderActiveShape}\n        data={data}\n        // cx={120}\n        // cy={200}\n        innerRadius={60}\n        outerRadius={140}\n        fill=\"#8884d8\"\n        dataKey=\"value\"\n        onClick={(e) => {\n          onRecordClick(e.payload.payload);\n        }}\n        onMouseEnter={onPieEnter}\n        onMouseLeave={onPieLeave}\n      >\n        <Label className=\"cursour-pointer\" width={30} position=\"center\" onClick={() => onRecordClick(null)}>\n          {`Total ${getShortNumber(total)}`}\n        </Label>\n        {data.map((entry, index) => (\n          <Cell className=\"cursour-pointer\" fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n};\n\nconst COLORS = [\"#2B7EF6\", \"#7CA82D\", \"#EF853A\", \"#DB504D\", \"#424348\", \"#90ED7D\", \"#3C861F\", \"#F9D7E0\"];\n\nconst range = {\n  Today: 1,\n  \"Next 7 Days\": 7,\n  \"Next 30 Days\": 30,\n  \"Past 7 Days\": 7,\n  \"Past 30 Days\": 30,\n};\n\nexport const ExportXLSX = (csvData) => {\n  const filename = `payroll${moment().format(\"MMMM Do YYYY-h:mm:ss-a\")}.xlsx`;\n  const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const ws = XLSX.utils.json_to_sheet(csvData);\n  const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n  const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n  const data = new Blob([excelBuffer], { type: fileType });\n  FileSaver.saveAs(data, filename);\n};\n\nfunction ExportCSV(data, allbankaccounts) {\n  const csvData = data.map((element) => ({\n    Date: moment(get(element, \"due_date\", \"\")).format(\"YYYY/MM/DD\"),\n    Total: convertDecimalNo(get(element, \"total\", 0)),\n    Entity: get(element, \"entity\", \"\"),\n    BankAccount: get(\n      allbankaccounts.find((x) => x.id === get(element, \"bank_account_id\", \"-\")),\n      \"name\",\n      \"\"\n    ),\n    Note: get(element, \"notes\", \"\"),\n  }));\n\n  return csvData;\n}\n\nlet PREV_GRAPH_URL = \"\";\nexport class PayrollList extends React.Component {\n  constructor() {\n    super();\n    this.debounceMethod = debounce(this.searchVendor.bind(this), 500);\n    this.handleAddClick = this.handleAddClick.bind(this);\n    this.state = {\n      rows: [],\n      originalRows: [],\n      showFilter: false,\n      showexport: false,\n      currPage: 1,\n      isFetching: true,\n      isFetchingOriginal: true,\n      supplierList: [],\n      endDate: moment().add(30, \"days\").format(\"MM/DD/YYYY\"),\n      startDate: moment().format(\"MM/DD/YYYY\"),\n      interval: 30,\n      vendorCategory: \"\",\n      sentiment: \"\",\n      status: \"\",\n      selectedSupplier: \"\",\n      dateType: \"\",\n      vendorSelect: null,\n      invoiceSelect: null,\n      payrollGraphData: [],\n      allbankaccounts: [],\n      allentities: [],\n      selectedEntity: \"\",\n    };\n    this.filters = JSON.parse(localStorage.getItem(\"payrollFilters\"));\n  }\n\n  componentDidMount() {\n    const filters = JSON.parse(localStorage.getItem(\"payrollFilters\"));\n    if (filters) {\n      this.setState(\n        {\n          ...filters,\n        },\n        () => this.filterData()\n      );\n    } else {\n      this.getData();\n    }\n    this.getallbankaccounts();\n    this.getallentities();\n    window.scrollTo(0, 0);\n  }\n\n  getallentities = () => {\n    instance\n      .get(\"/payroll/setting\")\n      .then((resp) => {\n        this.setState({ allentities: get(resp, \"data.result\", []) }, this.setpayrollGraphData);\n      })\n      .catch((e) => handleAPIError(e));\n  };\n\n  getallbankaccounts = () => {\n    instance\n      .get(\"/bankaccount\")\n      .then((resp) => {\n        this.setState({ allbankaccounts: get(resp, \"data.result\", []) });\n      })\n      .catch((e) => handleAPIError(e));\n  };\n\n  handleAddClick() {\n    const { history } = this.props;\n    history.push(`payroll/create`);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", () => {});\n    PREV_GRAPH_URL = \"\";\n  }\n\n  setshowExport = (flag) => {\n    this.setState({\n      showexport: flag,\n    });\n  };\n\n  setNextPage = () => {\n    this.setState(\n      {\n        currPage: this.state.currPage + 1,\n      },\n      this.filterData\n    );\n  };\n\n  setPrevPage = () => {\n    this.setState(\n      {\n        currPage: this.state.currPage === 1 ? 1 : this.state.currPage - 1,\n      },\n      this.filterData\n    );\n  };\n\n  searchVendor = (text, searchBy) => {\n    const url = `apinvoice/search?per_page=100&${searchBy}=${text}`;\n    if (text) {\n      instance\n        .get(url)\n        .then((res) => {\n          this.setState({\n            supplierList: res.data.result,\n          });\n        })\n        .catch((e) => {});\n    }\n  };\n\n  filterData = () => {\n    this.setState({\n      showFilter: false,\n    });\n    const {\n      startDate,\n      endDate,\n      vendorCategory,\n      status,\n      currPage,\n      dateType,\n      vendorSelect,\n      invoiceSelect,\n      selectedEntity,\n      payrollGraphData,\n    } = this.state;\n    let URLTemp = `payroll?page=${currPage}`;\n    const filters = {\n      currPage,\n    };\n    if (startDate && endDate) {\n      filters.startDate = startDate;\n      filters.endDate = endDate;\n      URLTemp = URLTemp + `&from_date='${startDate}'&to_date='${endDate}'`;\n    }\n    if (selectedEntity) {\n      filters.selectedEntity = selectedEntity;\n      URLTemp = URLTemp + `&entity=${selectedEntity}`;\n    }\n    if (status) {\n      URLTemp = URLTemp + `&status='${status}'`;\n    }\n    if (vendorCategory) {\n      URLTemp = URLTemp + `&category='${vendorCategory}'`;\n    }\n    if (dateType) {\n      URLTemp = URLTemp + `&date_type=${dateType}`;\n    }\n    if (vendorSelect) {\n      URLTemp = URLTemp + `&supplier_id=${vendorSelect.id}`;\n    }\n    if (invoiceSelect) {\n      URLTemp = URLTemp + `&invoice_id=${invoiceSelect.invoice_number}`;\n    }\n\n    localStorage.setItem(\"payrollFilters\", JSON.stringify(filters));\n    this.getData(URLTemp === `payroll?page=${currPage}` ? \"\" : URLTemp);\n  };\n\n  getData = (dataUrl) => {\n    const { endDate, startDate, currPage } = this.state;\n    let URL = dataUrl || `payroll?page=${currPage}&from_date='${startDate}'&to_date='${endDate}'`;\n    this.setState({\n      rows: [],\n      originalRows: [],\n      isFetching: true,\n    });\n    instance\n      .get(URL)\n      .then((response) => {\n        this.setState({\n          isFetching: false,\n          isFetchingOriginal: false,\n        });\n        //const modified = response.data.result.sort((a, b) => (moment(get(b, \"due_date\", \"\")).diff(moment(get(a, \"due_date\", \"\")))))\n        const modified = response.data.result;\n        this.setState(\n          {\n            rows: modified,\n            originalRows: modified,\n            showFilter: false,\n          },\n          () => this.setpayrollGraphData()\n        );\n      })\n      .catch((e) => {\n        this.setState({\n          isFetching: false,\n          showFilter: false,\n        });\n        if (e) {\n          handleAPIError(e);\n        }\n      });\n  };\n\n  setpayrollGraphData = () => {\n    const { endDate, startDate, allentities } = this.state;\n    const urls = allentities.map((x) => `payroll/total?from_date='${startDate}'&to_date='${endDate}'&entity=${x.name}`);\n    if (PREV_GRAPH_URL === urls[0] || !urls[0]) {\n      return;\n    }\n    PREV_GRAPH_URL = urls[0];\n    Promise.all(urls.map((x) => instance.get(x))).then((responses) => {\n      const results = responses.map((resp) => resp.data.total);\n      const chartdata = allentities\n        .map((entity, i) => ({\n          name: entity.name,\n          value: results[i],\n          dataindex: i,\n        }))\n        .filter((x) => x.value)\n        .map((x, i) => ({ ...x, dataindex: i }));\n      this.setState({ payrollGraphData: chartdata, chartdatareceived: true });\n    });\n  };\n\n  setshowFilter = (showFilter) => {\n    this.setState({\n      showFilter,\n    });\n  };\n\n  onReset = () => {\n    document.getElementById(\"filter-form\").reset();\n    this.setState(\n      {\n        endDate: moment().add(30, \"days\").format(\"MM/DD/YYYY\"),\n        startDate: moment().format(\"MM/DD/YYYY\"),\n        vendorCategory: \"\",\n        sentiment: \"\",\n        status: \"all\",\n        selectedSupplier: \"\",\n        dateType: \"\",\n        vendorSelect: null,\n        currPage: 1,\n        supplierList: [],\n        invoiceSelect: null,\n        selectedEntity: \"\",\n      },\n      () => {\n        localStorage.removeItem(\"payrollFilters\");\n        this.getData();\n        // this.getClassificationData();\n      }\n    );\n  };\n\n  setDates = (startDate, endDate, interval) => {\n    this.setState({\n      startDate: moment(startDate).format(\"MM/DD/YYYY\"),\n      endDate: moment(endDate).format(\"MM/DD/YYYY\"),\n      interval: range[interval || 30],\n      showFilter: true,\n    });\n  };\n\n  onClone = (data) => {\n    data.id = \"create\";\n    data.due_date = moment(data.due_date, \"YYYY-MM-DD\").format(\"YYYY-MM-DD\");\n    data.notes = `Copy of - ${data.entity}`;\n    data.bank = data.bank_account_id;\n    this.props.changeSelection(data);\n  };\n\n  onDelete = (id) => {\n    instance\n      .put(`payroll/delete?id=${id}`, {})\n      .then((resp) => {\n        this.getData();\n        // this.getClassificationData();\n      })\n      .catch((e) => {});\n  };\n\n  render() {\n    const {\n      rows,\n      showFilter,\n      showexport,\n      currPage,\n      isFetching,\n      startDate,\n      endDate,\n      payrollGraphData,\n      selectedEntity,\n      allbankaccounts = [],\n      allentities = [],\n      isFetchingOriginal,\n      chartdatareceived,\n    } = this.state;\n\n    const columns = [\n      {\n        Header: () => (\n          <span>\n            Date\n            <span className=\"sort-icons\">\n              <i className=\"fas fa-caret-up\"></i>\n              <i className=\"fas fa-caret-down\"></i>\n            </span>\n          </span>\n        ),\n        accessor: \"due_date\",\n        width: 140,\n        Cell: (data, index) => {\n          return (\n            <TableRow className=\"ml-3 pt-2\">\n              <span>{getFormattedDate(get(data, \"original.due_date\", \"\"))}</span>\n            </TableRow>\n          );\n        },\n      },\n      {\n        Header: () => (\n          <span>\n            Amount\n            <span className=\"sort-icons\">\n              <i className=\"fas fa-caret-up\"></i>\n              <i className=\"fas fa-caret-down\"></i>\n            </span>\n          </span>\n        ),\n        accessor: \"total\",\n        width: 100,\n        className: \"text-right pr-2\",\n        Cell: (data) => {\n          return (\n            <TableRow className=\"pt-2\">\n              <span>{getFAWC(get(data, \"original.total\", \"\"))}</span>\n            </TableRow>\n          );\n        },\n      },\n      {\n        Header: () => (\n          <span>\n            Entity\n            <span className=\"sort-icons\">\n              <i className=\"fas fa-caret-up\"></i>\n              <i className=\"fas fa-caret-down\"></i>\n            </span>\n          </span>\n        ),\n        accessor: \"invoice_number\",\n        Cell: (data) => {\n          const cf = get(data, \"original.entity\", \"\");\n          return (\n            <TableRow className=\"pt-2\">\n              <span>{cf}</span>\n            </TableRow>\n          );\n        },\n      },\n      {\n        Header: () => (\n          <span>\n            Bank Acc\n            <span className=\"sort-icons\">\n              <i className=\"fas fa-caret-up\"></i>\n              <i className=\"fas fa-caret-down\"></i>\n            </span>\n          </span>\n        ),\n        accessor: \"bank_account_id\",\n        Cell: (data) => {\n          const selectedBank = allbankaccounts.find((x) => x.id === get(data, \"original.bank_account_id\", \"-\"));\n          const cf = get(selectedBank, \"name\", \"-\");\n          return (\n            <TableRow className=\"pt-2\">\n              <span>{cf}</span>\n            </TableRow>\n          );\n        },\n      },\n      {\n        Header: () => (\n          <span>\n            Note\n            <span className=\"sort-icons\">\n              <i className=\"fas fa-caret-up\"></i>\n              <i className=\"fas fa-caret-down\"></i>\n            </span>\n          </span>\n        ),\n        accessor: \"updatedNotes\",\n        Cell: (data) => {\n          return (\n            <TableRow className=\"pt-2\">\n              <span>{get(data, \"original.notes\", \"\")}</span>\n            </TableRow>\n          );\n        },\n      },\n      {\n        Header: () => <span className=\"ml-2\"></span>,\n        accessor: \"\",\n        width: 100,\n        className: \"overflow-unset\",\n        Cell: (data) => (\n          <span>\n            <button\n              title=\"Clone\"\n              className=\"btn\"\n              onClick={(e) => {\n                e.stopPropagation();\n                this.onClone(get(data, \"original\", \"\"));\n              }}\n            >\n              <i className=\"fa fa-clone color-blue\" />\n            </button>{\" \"}\n            |\n            <button\n              title=\"Delete\"\n              className=\"btn\"\n              onClick={(e) => {\n                e.stopPropagation();\n                setconfirmationboxData({\n                  variant: \"warning\",\n                  msg: \"Are you sure you want to delete this record?\",\n                  onSave: () => {\n                    resetconfirmationboxData();\n                    this.onDelete(get(data, \"original.id\", \"\"));\n                  },\n                });\n              }}\n            >\n              <i className=\"fa fa-trash-o color-blue\" />\n            </button>\n          </span>\n        ),\n      },\n    ];\n    let total = payrollGraphData.map((x) => x.value);\n    total = total.reduce((a, b) => a + b, 0);\n    const tabledata = rows;\n    const selectedEntityObj = payrollGraphData.find((x) => x.name === selectedEntity);\n    return (\n      <DNDContainer>\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h5>Payroll</h5>\n            </div>\n          </div>\n\n          {isFetchingOriginal ? (\n            <CustomSpinner isfullscreen />\n          ) : (\n            <div>\n              <div className=\"colorwireframe\">\n                <div className=\"row\">\n                    {!chartdatareceived ? (\n                      <div className=\"w-100\" style={{ height: 300 }}>\n                        <CustomSpinner />\n                      </div>\n                    ) : total ? (\n                      <div className=\"col-md-12 d-flex justify-content-center\">\n                        <div>\n                          <DonutChart\n                            onRecordClick={(record) => {\n                              this.setState({ selectedEntity: record.name, currPage: 1 }, this.filterData);\n                            }}\n                            data={payrollGraphData}\n                            total={sum(payrollGraphData.map((x) => x.value))}\n                            selectedPayroll={selectedEntityObj}\n                          />\n                        </div>\n                        <div className=\"hide-scroll\" style={{ height: 300, marginLeft: 50, overflowY: \"auto\" }}>\n                          <div className=\"mt-4\">\n                            {payrollGraphData &&\n                              payrollGraphData.map((entity, i) => (\n                                <div\n                                  className=\"col-md-12 p-2 cursour-pointer\"\n                                  onClick={() => {\n                                    this.setState({ selectedEntity: entity.name, currPage: 1 }, this.filterData);\n                                  }}\n                                >\n                                  <span\n                                    className={`ml-2 mr-2 donutchart-legend-dot`}\n                                    style={{\n                                      backgroundColor: `${get(entity, \"line-color\", COLORS[i % 8])}`,\n                                    }}\n                                  />\n                                  <span>\n                                    {get(entity, \"name\", \"-\")}&nbsp;({ getFAWC(entity.value) })\n                                  </span>\n                                </div>\n                              ))}\n                          </div>\n                        </div>\n                      </div>\n                    ) : (\n                      <PieChartPlaceholder />\n                    )}\n                </div>\n              </div>\n\n              <div className=\"row mb-4 mt-2\">\n                <div className=\"col-md-6\">\n                  <div className=\"dropdown pull-left\" style={{ margin: \"0px\" }}>\n                    <span\n                      className=\"btn dropdown-toggle btn-primary\"\n                      data-toggle=\"dropdown\"\n                      aria-haspopup=\"true\"\n                      aria-expanded=\"false\"\n                      onClick={() => this.setshowFilter(true)}\n                    >\n                      <i className=\"fa fa-sliders\" aria-hidden=\"true\"></i>&nbsp; Filter\n                    </span>\n                    <form id=\"filter-form\">\n                      <ClickAwayListener onClickAway={this.setshowFilter}>\n                        <div\n                          id=\"outerside\"\n                          // style={{ width: \"36rem\" }}\n                          className={`dropdown-menu filterdroplist p-2 ${showFilter ? \"show\" : \"\"}`}\n                          aria-labelledby=\"dropdownMenuLink\"\n                        >\n                          <div className=\"row\">\n                            <div className=\"col-md-6\">\n                              <label className=\"\">Entity name</label>\n                              <select\n                                style={{ width: 200 }}\n                                id=\"myThinSelect\"\n                                className=\"custom-select-thin\"\n                                onChange={(e) => {\n                                  this.setState({ selectedEntity: e.target.value });\n                                }}\n                                // disabled={get(postdata, \"id\", \"\") ? true : false}\n                                value={get(this.state, \"selectedEntity\", \"\")}\n                                placeholder=\"select\"\n                              >\n                                <option value={\"\"}>All entities</option>\n                                {allentities && allentities.map((acc) => <option value={acc.name}>{acc.name}</option>)}\n                              </select>\n                            </div>\n                            <div className=\"col-md-6\">\n                              <div className=\"form-group\">\n                                <label>Date</label>\n                                <div style={{ fontSize: 12, overflow: \"hidden\" }}>\n                                  <div className=\"pull-left\">\n                                    <DateRangePicker\n                                      startDate={moment(startDate)}\n                                      endDate={moment(endDate)}\n                                      getSelectedDates={this.setDates}\n                                      labelFormat=\"MMM DD, YYYY\"\n                                      parentEl=\"#outerside\"\n                                    />\n                                  </div>\n                                </div>\n                              </div>\n\n                              <div className=\"setbtn\">\n                                <button type=\"button\" className=\"btn resetbtn btn-light\" onClick={this.onReset}>\n                                  Reset\n                                </button>\n                                <button type=\"button\" className=\"btn applybtn btn-primary\" onClick={() => this.setState({ currPage: 1 }, this.filterData)}>\n                                  Submit\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </ClickAwayListener>\n                    </form>\n                  </div>\n\n                  <button\n                    onClick={this.handleAddClick}\n                    className=\"btn btn-primary ml-3\"\n                    id=\"hidetable\"\n                    data-toggle=\"modal\"\n                  >\n                    Add New\n                  </button>\n                </div>\n                <div className=\"col-md-6\" style={{ textAlign: \"right\" }}>\n                  <div className=\"dropdown\">\n                    <span\n                      className=\"btn dropdown-toggle btn-primary\"\n                      role=\"button\"\n                      id=\"\"\n                      data-toggle=\"dropdown\"\n                      aria-haspopup=\"true\"\n                      aria-expanded=\"false\"\n                      onClick={() => this.setshowExport(true)}\n                    >\n                      Export\n                    </span>\n                    <ClickAwayListener onClickAway={this.setshowExport}>\n                      <div\n                        className={`dropdown-menu dropdown-menu-right payexpdroplist ${showexport && \"show\"}`}\n                        aria-labelledby=\"dropdownMenuLink\"\n                        id=\"\"\n                      >\n                        <CSVLink\n                          data={ExportCSV(rows, allbankaccounts)}\n                          filename={`payroll_${moment().format(\"MMMM Do YYYY-h:mm:ss-a\")}.csv`}\n                        >\n                          Export CSV\n                        </CSVLink>\n                        <span\n                          style={{ fontSize: 12, float: \"right\", marginRight: \"10px\", cursor: \"pointer\" }}\n                          onClick={() => ExportXLSX(ExportCSV(rows, allbankaccounts))}\n                        >\n                          Export Excel\n                        </span>\n                      </div>\n                    </ClickAwayListener>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <ReactTable\n                    noDataText={isFetching ? \"\" : \"No data found\"}\n                    minRows={tabledata.length > 20 ? 20 : tabledata.length}\n                    loading={isFetching}\n                    sortable={true}\n                    resizable={true}\n                    showPagination={false}\n                    defaultSorted={[\n                      {\n                        id: \"due_date\",\n                        desc: true,\n                      },\n                    ]}\n                    getTrProps={(state, rowInfo, column) => ({\n                      onClick: (e) => this.props.changeSelection(rowInfo.original),\n                    })}\n                    columns={columns}\n                    data={tabledata}\n                  />\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"filterthree\">\n                  <div className=\"pull-right\">\n                    <button\n                      className=\"btn btn-primary mr-2 width-94px\"\n                      disabled={currPage === 1}\n                      onClick={this.setPrevPage}\n                    >\n                      Previous\n                    </button>\n                    <button\n                      disabled={rows.length !== 20}\n                      className=\"btn btn-primary width-94px\"\n                      onClick={this.setNextPage}\n                    >\n                      Next\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </DNDContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ login: state.payables });\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PayrollList);\n","import \"assets/css/payables.css\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport \"./payroll.css\";\nimport PayrollCreate from \"./PayrollCreate\";\nimport PayablesList from \"./PayrollList\";\n\nfunction Payroll(props) {\n  document.title = \"Payroll - Payference\";\n  const { history, match } = props;\n  const [selectedpayment, setselectedpayment] = useState(null);\n\n  function changeSelection(data) {\n    setselectedpayment(data);\n    history.push(`payroll/${data.id}`);\n  }\n\n  return (\n    <div>\n      <div className=\"row px-15\" id=\"dashboardBody\">\n        <div className=\"col-md-12\">\n          <div className=\"card\">\n            <Switch>\n              <Route path={`${match.path}/create`} component={() => <PayrollCreate {...props} selectedpayment={selectedpayment} setselectedpayment={setselectedpayment} />} />\n              <Route path={`${match.path}/:payrollid`} component={() => <PayrollCreate {...props} selectedpayment={selectedpayment} setselectedpayment={setselectedpayment} />} />\n              <Route path={`${match.path}`} component={() => <PayablesList {...props} changeSelection={changeSelection} />} />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({ login: state.payables });\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Payroll));\n"],"sourceRoot":""}